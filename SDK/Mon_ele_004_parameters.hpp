#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mon_ele_004

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "HottaFramework_structs.hpp"


namespace SDK::Params
{

// Function mon_ele_004.mon_ele_004_C.ExecuteUbergraph_mon_ele_004
// 0x0200 (0x0200 - 0x0000)
struct Mon_ele_004_C_ExecuteUbergraph_mon_ele_004 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingAnyAbility_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C40[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaAIController*                     K2Node_DynamicCast_AsHotta_AIController;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C41[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C42[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBehaviorTreeComponent*                 K2Node_DynamicCast_As_____;                        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C43[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaAICharacter*                      CallFunc_FindHuntTarget_Target;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C44[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingSkill_ReturnValue;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode;                 // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode_1;               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C45[0x1];                                     // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DamageAmount;                         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x00B0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_6C46[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0140(0x0020)(ConstParm)
	TSubclassOf<class UGameplayEffect>            K2Node_Event_DamageGameplayEffect;                 // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AHottaCharacter*                        K2Node_Event_InstigatorCharacter;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaPlayerCharacter*                  K2Node_DynamicCast_AsHotta_Player_Character;       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C47[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C48[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontageEx_ReturnValue;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C49[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004) == 0x000008, "Wrong alignment on Mon_ele_004_C_ExecuteUbergraph_mon_ele_004");
static_assert(sizeof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004) == 0x000200, "Wrong size on Mon_ele_004_C_ExecuteUbergraph_mon_ele_004");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, EntryPoint) == 0x000000, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_IsUsingAnyAbility_ReturnValue) == 0x000004, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_IsUsingAnyAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_MakeLiteralName_ReturnValue) == 0x000028, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_DynamicCast_AsHotta_AIController) == 0x000030, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_DynamicCast_AsHotta_AIController' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_MakeLiteralName_ReturnValue_1) == 0x00003C, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_GetBlackboard_ReturnValue) == 0x000048, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_DynamicCast_As_____) == 0x000050, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_DynamicCast_As_____' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_FindHuntTarget_Target) == 0x000060, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_FindHuntTarget_Target' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_GetDisplayName_ReturnValue) == 0x000068, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_CreateDelegate_OutputDelegate_1) == 0x00007C, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_GetVelocity_ReturnValue) == 0x00008C, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000098, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_VSize_ReturnValue) == 0x0000A0, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_IsUsingSkill_ReturnValue) == 0x0000A4, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_IsUsingSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A5, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000A6, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_SwitchNetMode_OutNetMode) == 0x0000A7, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_SwitchNetMode_OutNetMode' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_SwitchNetMode_OutNetMode_1) == 0x0000A9, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_SwitchNetMode_OutNetMode_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000AA, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_Event_DamageAmount) == 0x0000AC, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_Event_DamageAmount' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_Event_HitInfo) == 0x0000B0, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_Event_DamageTags) == 0x000140, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_Event_DamageGameplayEffect) == 0x000160, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_Event_DamageGameplayEffect' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_Event_InstigatorCharacter) == 0x000168, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_Event_InstigatorCharacter' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_Event_DamageCauser) == 0x000170, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_DynamicCast_AsHotta_Player_Character) == 0x000178, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_DynamicCast_AsHotta_Player_Character' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, K2Node_DynamicCast_bSuccess_2) == 0x000180, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_GetSocketLocation_ReturnValue) == 0x000184, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_Greater_ByteByte_ReturnValue) == 0x000190, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_X) == 0x000194, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_Y) == 0x000198, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_Z) == 0x00019C, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_PlayAnimMontageEx_ReturnValue) == 0x0001A0, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_PlayAnimMontageEx_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001A4, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_X_1) == 0x0001B0, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_Y_1) == 0x0001B4, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_Z_1) == 0x0001B8, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001BC, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_GetSocketLocation_ReturnValue_1) == 0x0001C0, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0001CC, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_X_2) == 0x0001D0, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_Y_2) == 0x0001D4, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_Z_2) == 0x0001D8, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0001DC, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_X_3) == 0x0001E8, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_Y_3) == 0x0001EC, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_BreakVector_Z_3) == 0x0001F0, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001F4, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_ExecuteUbergraph_mon_ele_004, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0001F8, "Member 'Mon_ele_004_C_ExecuteUbergraph_mon_ele_004::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function mon_ele_004.mon_ele_004_C.OnDamaged
// 0x00C8 (0x00C8 - 0x0000)
struct Mon_ele_004_C_OnDamaged final
{
public:
	float                                         DamageAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0004(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0090(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TSubclassOf<class UGameplayEffect>            DamageGameplayEffect;                              // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AHottaCharacter*                        InstigatorCharacter;                               // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_ele_004_C_OnDamaged) == 0x000008, "Wrong alignment on Mon_ele_004_C_OnDamaged");
static_assert(sizeof(Mon_ele_004_C_OnDamaged) == 0x0000C8, "Wrong size on Mon_ele_004_C_OnDamaged");
static_assert(offsetof(Mon_ele_004_C_OnDamaged, DamageAmount) == 0x000000, "Member 'Mon_ele_004_C_OnDamaged::DamageAmount' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_OnDamaged, HitInfo) == 0x000004, "Member 'Mon_ele_004_C_OnDamaged::HitInfo' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_OnDamaged, DamageTags) == 0x000090, "Member 'Mon_ele_004_C_OnDamaged::DamageTags' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_OnDamaged, DamageGameplayEffect) == 0x0000B0, "Member 'Mon_ele_004_C_OnDamaged::DamageGameplayEffect' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_OnDamaged, InstigatorCharacter) == 0x0000B8, "Member 'Mon_ele_004_C_OnDamaged::InstigatorCharacter' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_OnDamaged, DamageCauser) == 0x0000C0, "Member 'Mon_ele_004_C_OnDamaged::DamageCauser' has a wrong offset!");

// Function mon_ele_004.mon_ele_004_C.OnHuntSkillUsed
// 0x000C (0x000C - 0x0000)
struct Mon_ele_004_C_OnHuntSkillUsed final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C4A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_ele_004_C_OnHuntSkillUsed) == 0x000004, "Wrong alignment on Mon_ele_004_C_OnHuntSkillUsed");
static_assert(sizeof(Mon_ele_004_C_OnHuntSkillUsed) == 0x00000C, "Wrong size on Mon_ele_004_C_OnHuntSkillUsed");
static_assert(offsetof(Mon_ele_004_C_OnHuntSkillUsed, bSuccess) == 0x000000, "Member 'Mon_ele_004_C_OnHuntSkillUsed::bSuccess' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_OnHuntSkillUsed, CallFunc_GetTimeSeconds_ReturnValue) == 0x000004, "Member 'Mon_ele_004_C_OnHuntSkillUsed::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_OnHuntSkillUsed, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'Mon_ele_004_C_OnHuntSkillUsed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function mon_ele_004.mon_ele_004_C.FindHuntTarget
// 0x0090 (0x0090 - 0x0000)
struct Mon_ele_004_C_FindHuntTarget final
{
public:
	class AHottaAICharacter*                      Target;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaAICharacter*                      TargetFound;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastMinDist;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C4B[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C4C[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C4D[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaMonsterCharacter*                 K2Node_DynamicCast_AsHotta_Monster_Character;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTargetTypeOf_ReturnValue;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C4E[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mon_ele_004_C_FindHuntTarget) == 0x000008, "Wrong alignment on Mon_ele_004_C_FindHuntTarget");
static_assert(sizeof(Mon_ele_004_C_FindHuntTarget) == 0x000090, "Wrong size on Mon_ele_004_C_FindHuntTarget");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, Target) == 0x000000, "Member 'Mon_ele_004_C_FindHuntTarget::Target' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, TargetFound) == 0x000008, "Member 'Mon_ele_004_C_FindHuntTarget::TargetFound' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, LastMinDist) == 0x000010, "Member 'Mon_ele_004_C_FindHuntTarget::LastMinDist' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, ___int_Array_Index_Variable) == 0x000014, "Member 'Mon_ele_004_C_FindHuntTarget::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, ___int_Loop_Counter_Variable) == 0x000018, "Member 'Mon_ele_004_C_FindHuntTarget::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, K2Node_MakeArray_Array) == 0x000020, "Member 'Mon_ele_004_C_FindHuntTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, K2Node_MakeArray_Array_1) == 0x000030, "Member 'Mon_ele_004_C_FindHuntTarget::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_SphereOverlapActors_OutActors) == 0x000050, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_SphereOverlapActors_ReturnValue) == 0x000060, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_Array_Get_Item) == 0x000068, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, K2Node_DynamicCast_AsHotta_Monster_Character) == 0x000078, "Member 'Mon_ele_004_C_FindHuntTarget::K2Node_DynamicCast_AsHotta_Monster_Character' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'Mon_ele_004_C_FindHuntTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_IsTargetTypeOf_ReturnValue) == 0x000081, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_IsTargetTypeOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_GetDistanceTo_ReturnValue) == 0x000084, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_Less_FloatFloat_ReturnValue) == 0x000088, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_004_C_FindHuntTarget, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'Mon_ele_004_C_FindHuntTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

