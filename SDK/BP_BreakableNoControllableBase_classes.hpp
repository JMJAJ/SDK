#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BreakableNoControllableBase

#include "Basic.hpp"

#include "HottaFramework_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BreakableNoControllableBase.BP_BreakableNoControllableBase_C
// 0x0010 (0x0BD0 - 0x0BC0)
class ABP_BreakableNoControllableBase_C : public ABreakableActor
{
public:
	uint8                                         Pad_6CD6[0x8];                                     // 0x0BB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScaleY;                                            // 0x0BC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleZ;                                            // 0x0BC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PhysicsTime;                                       // 0x0BC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BreakableNoControllableBase_C">();
	}
	static class ABP_BreakableNoControllableBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BreakableNoControllableBase_C>();
	}
};
static_assert(alignof(ABP_BreakableNoControllableBase_C) == 0x000010, "Wrong alignment on ABP_BreakableNoControllableBase_C");
static_assert(sizeof(ABP_BreakableNoControllableBase_C) == 0x000BD0, "Wrong size on ABP_BreakableNoControllableBase_C");
static_assert(offsetof(ABP_BreakableNoControllableBase_C, ScaleY) == 0x000BC0, "Member 'ABP_BreakableNoControllableBase_C::ScaleY' has a wrong offset!");
static_assert(offsetof(ABP_BreakableNoControllableBase_C, ScaleZ) == 0x000BC4, "Member 'ABP_BreakableNoControllableBase_C::ScaleZ' has a wrong offset!");
static_assert(offsetof(ABP_BreakableNoControllableBase_C, PhysicsTime) == 0x000BC8, "Member 'ABP_BreakableNoControllableBase_C::PhysicsTime' has a wrong offset!");

}

