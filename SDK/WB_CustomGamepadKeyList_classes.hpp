#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CustomGamepadKeyList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HottaFramework_structs.hpp"
#include "HottaFramework_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CustomGamepadKeyList.WB_CustomGamepadKeyList_C
// 0x0030 (0x0828 - 0x07F8)
class UWB_CustomGamepadKeyList_C final : public UHottaUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHottaButton*                           CloseMask;                                         // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_69;                                        // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBoxIcons;                                    // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_GamepadKeySelector_C*               KeySelector;                                       // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGamepadInputActionsType                      InputActionTypes;                                  // 0x0820(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_CustomGamepadKeyList(int32 EntryPoint);
	void BndEvt__WB_CustomGamepadKeyList_CloseMask_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void SetPosition(const struct FVector2D& InPosition);
	void Setup(EGamepadInputActionsType Param_InputActionTypes);
	void SelectKey(const struct FKey& NewKey, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CustomGamepadKeyList_C">();
	}
	static class UWB_CustomGamepadKeyList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CustomGamepadKeyList_C>();
	}
};
static_assert(alignof(UWB_CustomGamepadKeyList_C) == 0x000008, "Wrong alignment on UWB_CustomGamepadKeyList_C");
static_assert(sizeof(UWB_CustomGamepadKeyList_C) == 0x000828, "Wrong size on UWB_CustomGamepadKeyList_C");
static_assert(offsetof(UWB_CustomGamepadKeyList_C, UberGraphFrame) == 0x0007F8, "Member 'UWB_CustomGamepadKeyList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CustomGamepadKeyList_C, CloseMask) == 0x000800, "Member 'UWB_CustomGamepadKeyList_C::CloseMask' has a wrong offset!");
static_assert(offsetof(UWB_CustomGamepadKeyList_C, Overlay_69) == 0x000808, "Member 'UWB_CustomGamepadKeyList_C::Overlay_69' has a wrong offset!");
static_assert(offsetof(UWB_CustomGamepadKeyList_C, ScrollBoxIcons) == 0x000810, "Member 'UWB_CustomGamepadKeyList_C::ScrollBoxIcons' has a wrong offset!");
static_assert(offsetof(UWB_CustomGamepadKeyList_C, KeySelector) == 0x000818, "Member 'UWB_CustomGamepadKeyList_C::KeySelector' has a wrong offset!");
static_assert(offsetof(UWB_CustomGamepadKeyList_C, InputActionTypes) == 0x000820, "Member 'UWB_CustomGamepadKeyList_C::InputActionTypes' has a wrong offset!");

}

