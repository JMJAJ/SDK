#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MiniGame_FireLink_Vera

#include "Basic.hpp"

#include "BP_MiniGame_FireLink_Vera_classes.hpp"
#include "BP_MiniGame_FireLink_Vera_parameters.hpp"


namespace SDK
{

// Function BP_MiniGame_FireLink_Vera.BP_MiniGame_FireLink_Vera_C.ExecuteUbergraph_BP_MiniGame_FireLink_Vera
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_FireLink_Vera_C::ExecuteUbergraph_BP_MiniGame_FireLink_Vera(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_FireLink_Vera_C", "ExecuteUbergraph_BP_MiniGame_FireLink_Vera");

	Params::BP_MiniGame_FireLink_Vera_C_ExecuteUbergraph_BP_MiniGame_FireLink_Vera Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame_FireLink_Vera.BP_MiniGame_FireLink_Vera_C.BP_OnPlayHasOpened
// (Event, Public, BlueprintEvent)

void ABP_MiniGame_FireLink_Vera_C::BP_OnPlayHasOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_FireLink_Vera_C", "BP_OnPlayHasOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame_FireLink_Vera.BP_MiniGame_FireLink_Vera_C.BPOnMainRoleLoadFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AHottaPlayerCharacter*            MainPlayer                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_FireLink_Vera_C::BPOnMainRoleLoadFinished(class AHottaPlayerCharacter* MainPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_FireLink_Vera_C", "BPOnMainRoleLoadFinished");

	Params::BP_MiniGame_FireLink_Vera_C_BPOnMainRoleLoadFinished Parms{};

	Parms.MainPlayer = MainPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame_FireLink_Vera.BP_MiniGame_FireLink_Vera_C.PlayOpenAnimation
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_MiniGame_FireLink_Vera_C::PlayOpenAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_FireLink_Vera_C", "PlayOpenAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MiniGame_FireLink_Vera.BP_MiniGame_FireLink_Vera_C.FireActorBurned
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_FireLink_Vera_C::FireActorBurned(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_FireLink_Vera_C", "FireActorBurned");

	Params::BP_MiniGame_FireLink_Vera_C_FireActorBurned Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame_FireLink_Vera.BP_MiniGame_FireLink_Vera_C.BndEvt__RewardSpawnManager_K2Node_ComponentBoundEvent_0_AllVisualsHarvestedSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AHottaVisualSpawnManager*         InstigateSpawner                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MiniGame_FireLink_Vera_C::BndEvt__RewardSpawnManager_K2Node_ComponentBoundEvent_0_AllVisualsHarvestedSignature__DelegateSignature(class AHottaVisualSpawnManager* InstigateSpawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_FireLink_Vera_C", "BndEvt__RewardSpawnManager_K2Node_ComponentBoundEvent_0_AllVisualsHarvestedSignature__DelegateSignature");

	Params::BP_MiniGame_FireLink_Vera_C_BndEvt__RewardSpawnManager_K2Node_ComponentBoundEvent_0_AllVisualsHarvestedSignature__DelegateSignature Parms{};

	Parms.InstigateSpawner = InstigateSpawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MiniGame_FireLink_Vera.BP_MiniGame_FireLink_Vera_C.BPCanTakeDamage
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDamageEvent                     DamageEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MiniGame_FireLink_Vera_C::BPCanTakeDamage(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_FireLink_Vera_C", "BPCanTakeDamage");

	Params::BP_MiniGame_FireLink_Vera_C_BPCanTakeDamage Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.DamageEvent = std::move(DamageEvent);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MiniGame_FireLink_Vera.BP_MiniGame_FireLink_Vera_C.GetParticipantDisplayName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             ActiveSpeaker                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_MiniGame_FireLink_Vera_C::GetParticipantDisplayName(class FName ActiveSpeaker) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MiniGame_FireLink_Vera_C", "GetParticipantDisplayName");

	Params::BP_MiniGame_FireLink_Vera_C_GetParticipantDisplayName Parms{};

	Parms.ActiveSpeaker = ActiveSpeaker;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

