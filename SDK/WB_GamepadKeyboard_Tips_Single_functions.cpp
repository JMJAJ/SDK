#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_GamepadKeyboard_Tips_Single

#include "Basic.hpp"

#include "WB_GamepadKeyboard_Tips_Single_classes.hpp"
#include "WB_GamepadKeyboard_Tips_Single_parameters.hpp"


namespace SDK
{

// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.ExecuteUbergraph_WB_GamepadKeyboard_Tips_Single
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_GamepadKeyboard_Tips_Single_C::ExecuteUbergraph_WB_GamepadKeyboard_Tips_Single(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "ExecuteUbergraph_WB_GamepadKeyboard_Tips_Single");

	Params::WB_GamepadKeyboard_Tips_Single_C_ExecuteUbergraph_WB_GamepadKeyboard_Tips_Single Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_GamepadKeyboard_Tips_Single_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.BPOnGamepadInputChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bGamepad                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_GamepadKeyboard_Tips_Single_C::BPOnGamepadInputChanged(bool bGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "BPOnGamepadInputChanged");

	Params::WB_GamepadKeyboard_Tips_Single_C_BPOnGamepadInputChanged Parms{};

	Parms.bGamepad = bGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_GamepadKeyboard_Tips_Single_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "PreConstruct");

	Params::WB_GamepadKeyboard_Tips_Single_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.SetKeyName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWB_GamepadKeyboard_Tips_Single_C::SetKeyName(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "SetKeyName");

	Params::WB_GamepadKeyboard_Tips_Single_C_SetKeyName Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.SetIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWB_GamepadKeyboard_Tips_Single_C::SetIcon(TSoftObjectPtr<class UTexture2D> Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "SetIcon");

	Params::WB_GamepadKeyboard_Tips_Single_C_SetIcon Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.Init
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWB_GamepadKeyboard_Tips_Single_C::Init(TSoftObjectPtr<class UTexture2D> Texture, const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "Init");

	Params::WB_GamepadKeyboard_Tips_Single_C_Init Parms{};

	Parms.Texture = Texture;
	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.IsFuncUnlocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             FuncID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_GamepadKeyboard_Tips_Single_C::IsFuncUnlocked(class FName FuncID, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "IsFuncUnlocked");

	Params::WB_GamepadKeyboard_Tips_Single_C_IsFuncUnlocked Parms{};

	Parms.FuncID = FuncID;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.SetupCustomKey
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_GamepadKeyboard_Tips_Single_C::SetupCustomKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "SetupCustomKey");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.BindInputAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_GamepadKeyboard_Tips_Single_C::BindInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "BindInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.RenameInputActionOnBreakFate
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_GamepadKeyboard_Tips_Single_C::RenameInputActionOnBreakFate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "RenameInputActionOnBreakFate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.SetIconFromKey
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGamepadInput                           Gamepad                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_GamepadKeyboard_Tips_Single_C::SetIconFromKey(EGamepadInput Gamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "SetIconFromKey");

	Params::WB_GamepadKeyboard_Tips_Single_C_SetIconFromKey Parms{};

	Parms.Gamepad = Gamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_GamepadKeyboard_Tips_Single.WB_GamepadKeyboard_Tips_Single_C.IsGamepadAttached
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Attached                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_GamepadKeyboard_Tips_Single_C::IsGamepadAttached(bool* Attached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_GamepadKeyboard_Tips_Single_C", "IsGamepadAttached");

	Params::WB_GamepadKeyboard_Tips_Single_C_IsGamepadAttached Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attached != nullptr)
		*Attached = Parms.Attached;
}

}

