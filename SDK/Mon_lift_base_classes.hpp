#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mon_lift_base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MonsterCharacterBP_Base_classes.hpp"
#include "HottaFramework_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass mon_lift_base.mon_lift_base_C
// 0x0050 (0x3B80 - 0x3B30)
class AMon_lift_base_C : public AMonsterCharacterBP_Base_C
{
public:
	uint8                                         Pad_58D8[0x4];                                     // 0x3B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_Mon_lift_base_C;                    // 0x3B28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UControllable_BP_Lift_C*                Controllable_BP_Lift;                              // 0x3B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHottaWeatherComponent*                 HottaWeather;                                      // 0x3B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               HairParticleSystem;                                // 0x3B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Interact;                                          // 0x3B48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x3B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LiftLoopMontage;                                   // 0x3B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaPlayerCharacter*                  LastControlledPlayer;                              // 0x3B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Particle_Stun;                                     // 0x3B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Particle_Battle;                                   // 0x3B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Particle_Pe;                                       // 0x3B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_mon_lift_base(int32 EntryPoint);
	void BndEvt__SilentCheckComponent_K2Node_ComponentBoundEvent_0_UnSilent__DelegateSignature();
	void BPOnBossStageChanged(int32 NewStageIndex);
	void ReceiveBeginPlay();
	void BPOnCharacterDead();
	void OnEndBattle();
	void OnBeginBattle();
	void BPOnLift(class AHottaPlayerCharacter* ByPlayer);
	void BPOnPutDown(class AHottaPlayerCharacter* ByPlayer);
	void BPOnThrow(class AHottaPlayerCharacter* ByPlayer);
	void BPOnSimulatePhysicsStopped();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"mon_lift_base_C">();
	}
	static class AMon_lift_base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMon_lift_base_C>();
	}
};
static_assert(alignof(AMon_lift_base_C) == 0x000010, "Wrong alignment on AMon_lift_base_C");
static_assert(sizeof(AMon_lift_base_C) == 0x003B80, "Wrong size on AMon_lift_base_C");
static_assert(offsetof(AMon_lift_base_C, UberGraphFrame_Mon_lift_base_C) == 0x003B28, "Member 'AMon_lift_base_C::UberGraphFrame_Mon_lift_base_C' has a wrong offset!");
static_assert(offsetof(AMon_lift_base_C, Controllable_BP_Lift) == 0x003B30, "Member 'AMon_lift_base_C::Controllable_BP_Lift' has a wrong offset!");
static_assert(offsetof(AMon_lift_base_C, HottaWeather) == 0x003B38, "Member 'AMon_lift_base_C::HottaWeather' has a wrong offset!");
static_assert(offsetof(AMon_lift_base_C, HairParticleSystem) == 0x003B40, "Member 'AMon_lift_base_C::HairParticleSystem' has a wrong offset!");
static_assert(offsetof(AMon_lift_base_C, Interact) == 0x003B48, "Member 'AMon_lift_base_C::Interact' has a wrong offset!");
static_assert(offsetof(AMon_lift_base_C, ParticleSystem) == 0x003B50, "Member 'AMon_lift_base_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AMon_lift_base_C, LiftLoopMontage) == 0x003B58, "Member 'AMon_lift_base_C::LiftLoopMontage' has a wrong offset!");
static_assert(offsetof(AMon_lift_base_C, LastControlledPlayer) == 0x003B60, "Member 'AMon_lift_base_C::LastControlledPlayer' has a wrong offset!");
static_assert(offsetof(AMon_lift_base_C, Particle_Stun) == 0x003B68, "Member 'AMon_lift_base_C::Particle_Stun' has a wrong offset!");
static_assert(offsetof(AMon_lift_base_C, Particle_Battle) == 0x003B70, "Member 'AMon_lift_base_C::Particle_Battle' has a wrong offset!");
static_assert(offsetof(AMon_lift_base_C, Particle_Pe) == 0x003B78, "Member 'AMon_lift_base_C::Particle_Pe' has a wrong offset!");

}

