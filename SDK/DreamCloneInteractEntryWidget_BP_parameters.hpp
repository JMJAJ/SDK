#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DreamCloneInteractEntryWidget_BP

#include "Basic.hpp"


namespace SDK::Params
{

// Function DreamCloneInteractEntryWidget_BP.DreamCloneInteractEntryWidget_BP_C.ExecuteUbergraph_DreamCloneInteractEntryWidget_BP
// 0x0018 (0x0018 - 0x0000)
struct DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bGamepad;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E5A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UQRSLHandleOperationManager*            CallFunc_K2_GetHandleOperatorManager_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGamepadConnected_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadAttached_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP) == 0x000008, "Wrong alignment on DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP");
static_assert(sizeof(DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP) == 0x000018, "Wrong size on DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP");
static_assert(offsetof(DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP, EntryPoint) == 0x000000, "Member 'DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP, K2Node_Event_bGamepad) == 0x000004, "Member 'DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP::K2Node_Event_bGamepad' has a wrong offset!");
static_assert(offsetof(DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP, CallFunc_K2_GetHandleOperatorManager_ReturnValue) == 0x000008, "Member 'DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP::CallFunc_K2_GetHandleOperatorManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP, CallFunc_SelectInt_ReturnValue) == 0x000010, "Member 'DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP, CallFunc_GetGamepadConnected_ReturnValue) == 0x000014, "Member 'DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP::CallFunc_GetGamepadConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP, CallFunc_IsGamepadAttached_ReturnValue) == 0x000015, "Member 'DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP::CallFunc_IsGamepadAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'DreamCloneInteractEntryWidget_BP_C_ExecuteUbergraph_DreamCloneInteractEntryWidget_BP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function DreamCloneInteractEntryWidget_BP.DreamCloneInteractEntryWidget_BP_C.BPOnGamepadInputChanged
// 0x0001 (0x0001 - 0x0000)
struct DreamCloneInteractEntryWidget_BP_C_BPOnGamepadInputChanged final
{
public:
	bool                                          bGamepad;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DreamCloneInteractEntryWidget_BP_C_BPOnGamepadInputChanged) == 0x000001, "Wrong alignment on DreamCloneInteractEntryWidget_BP_C_BPOnGamepadInputChanged");
static_assert(sizeof(DreamCloneInteractEntryWidget_BP_C_BPOnGamepadInputChanged) == 0x000001, "Wrong size on DreamCloneInteractEntryWidget_BP_C_BPOnGamepadInputChanged");
static_assert(offsetof(DreamCloneInteractEntryWidget_BP_C_BPOnGamepadInputChanged, bGamepad) == 0x000000, "Member 'DreamCloneInteractEntryWidget_BP_C_BPOnGamepadInputChanged::bGamepad' has a wrong offset!");

}

