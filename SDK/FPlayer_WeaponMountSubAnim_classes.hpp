#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FPlayer_WeaponMountSubAnim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "QRSL_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass FPlayer_WeaponMountSubAnim.FPlayer_WeaponMountSubAnim_C
// 0x0700 (0x09F0 - 0x02F0)
class UFPlayer_WeaponMountSubAnim_C final : public UQRSLWeaponMountAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0398(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x03C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0440(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0470(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x04F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0520(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x05A0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x05D0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0650(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0680(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0768(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0798(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0848(0x0030)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0878(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0980(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x09A0(0x0020)()
	class UAnimSequence*                          JumpStartStateAnim;                                // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          JumpLoopStateAnim;                                 // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          JumpRunStateAnim;                                  // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          StartRideStateAnim;                                // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          EndRideStateAnim;                                  // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPlayer_WeaponMountSubAnim_AnimGraphNode_TransitionResult_B7ED674A4466FA0F56E8AE8247EE178F();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_StartJumpInit();
	void AnimNotify_CanEndJump();
	void AnimNotify_CanEntryLoop();
	void AnimNotify_EntryNormal();
	void AnimNotify_EnteredNormal();
	void AnimNotify_EndFinish();
	void ExecuteUbergraph_FPlayer_WeaponMountSubAnim(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FPlayer_WeaponMountSubAnim_C">();
	}
	static class UFPlayer_WeaponMountSubAnim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFPlayer_WeaponMountSubAnim_C>();
	}
};
static_assert(alignof(UFPlayer_WeaponMountSubAnim_C) == 0x000010, "Wrong alignment on UFPlayer_WeaponMountSubAnim_C");
static_assert(sizeof(UFPlayer_WeaponMountSubAnim_C) == 0x0009F0, "Wrong size on UFPlayer_WeaponMountSubAnim_C");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, UberGraphFrame) == 0x0002F0, "Member 'UFPlayer_WeaponMountSubAnim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_TransitionResult_4) == 0x0002F8, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_TransitionResult_3) == 0x000320, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_TransitionResult_2) == 0x000348, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_TransitionResult_1) == 0x000370, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_TransitionResult) == 0x000398, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_SequencePlayer_3) == 0x0003C0, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_StateResult_4) == 0x000440, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_SequencePlayer_2) == 0x000470, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_StateResult_3) == 0x0004F0, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_SequencePlayer_1) == 0x000520, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_StateResult_2) == 0x0005A0, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_SequencePlayer) == 0x0005D0, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_StateResult_1) == 0x000650, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_BlendSpacePlayer) == 0x000680, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_StateResult) == 0x000768, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_StateMachine) == 0x000798, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_Root) == 0x000848, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_ModifyBone) == 0x000878, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_LocalToComponentSpace) == 0x000980, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, AnimGraphNode_ComponentToLocalSpace) == 0x0009A0, "Member 'UFPlayer_WeaponMountSubAnim_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, JumpStartStateAnim) == 0x0009C0, "Member 'UFPlayer_WeaponMountSubAnim_C::JumpStartStateAnim' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, JumpLoopStateAnim) == 0x0009C8, "Member 'UFPlayer_WeaponMountSubAnim_C::JumpLoopStateAnim' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, JumpRunStateAnim) == 0x0009D0, "Member 'UFPlayer_WeaponMountSubAnim_C::JumpRunStateAnim' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, StartRideStateAnim) == 0x0009D8, "Member 'UFPlayer_WeaponMountSubAnim_C::StartRideStateAnim' has a wrong offset!");
static_assert(offsetof(UFPlayer_WeaponMountSubAnim_C, EndRideStateAnim) == 0x0009E0, "Member 'UFPlayer_WeaponMountSubAnim_C::EndRideStateAnim' has a wrong offset!");

}

