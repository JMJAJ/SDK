#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponAniBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HottaFramework_structs.hpp"


namespace SDK::Params
{

// Function WeaponAniBP.WeaponAniBP_C.ExecuteUbergraph_WeaponAniBP
// 0x0040 (0x0040 - 0x0000)
struct WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeaponBase*                            K2Node_DynamicCast_AsWeapon_Base;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOwnerCharacterState                          K2Node_Event_NewState;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOwnerCharacterState                          K2Node_Event_OldState;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57B7[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue_2;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP) == 0x000008, "Wrong alignment on WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP");
static_assert(sizeof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP) == 0x000040, "Wrong size on WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, EntryPoint) == 0x000000, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000005, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000006, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000007, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000008, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000009, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00000A, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00000B, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, K2Node_Event_DeltaTimeX) == 0x00000C, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_GetOwningActor_ReturnValue) == 0x000010, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, K2Node_DynamicCast_AsWeapon_Base) == 0x000018, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::K2Node_DynamicCast_AsWeapon_Base' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000021, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000022, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_Montage_Play_ReturnValue) == 0x000024, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_Montage_Play_ReturnValue_1) == 0x000028, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, K2Node_Event_NewState) == 0x00002C, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, K2Node_Event_OldState) == 0x00002D, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x00002E, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00002F, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000030, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_Montage_Play_ReturnValue_2) == 0x000034, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_Montage_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000038, "Member 'WeaponAniBP_C_ExecuteUbergraph_WeaponAniBP::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");

// Function WeaponAniBP.WeaponAniBP_C.BPOwnerCharacterStateChange
// 0x0002 (0x0002 - 0x0000)
struct WeaponAniBP_C_BPOwnerCharacterStateChange final
{
public:
	EOwnerCharacterState                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOwnerCharacterState                          OldState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponAniBP_C_BPOwnerCharacterStateChange) == 0x000001, "Wrong alignment on WeaponAniBP_C_BPOwnerCharacterStateChange");
static_assert(sizeof(WeaponAniBP_C_BPOwnerCharacterStateChange) == 0x000002, "Wrong size on WeaponAniBP_C_BPOwnerCharacterStateChange");
static_assert(offsetof(WeaponAniBP_C_BPOwnerCharacterStateChange, NewState) == 0x000000, "Member 'WeaponAniBP_C_BPOwnerCharacterStateChange::NewState' has a wrong offset!");
static_assert(offsetof(WeaponAniBP_C_BPOwnerCharacterStateChange, OldState) == 0x000001, "Member 'WeaponAniBP_C_BPOwnerCharacterStateChange::OldState' has a wrong offset!");

// Function WeaponAniBP.WeaponAniBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct WeaponAniBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponAniBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on WeaponAniBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(WeaponAniBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on WeaponAniBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(WeaponAniBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'WeaponAniBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function WeaponAniBP.WeaponAniBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct WeaponAniBP_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(WeaponAniBP_C_AnimGraph) == 0x000008, "Wrong alignment on WeaponAniBP_C_AnimGraph");
static_assert(sizeof(WeaponAniBP_C_AnimGraph) == 0x000010, "Wrong size on WeaponAniBP_C_AnimGraph");
static_assert(offsetof(WeaponAniBP_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'WeaponAniBP_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

