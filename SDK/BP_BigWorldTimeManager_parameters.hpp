#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BigWorldTimeManager

#include "Basic.hpp"

#include "HottaFramework_structs.hpp"


namespace SDK::Params
{

// Function BP_BigWorldTimeManager.BP_BigWorldTimeManager_C.UpdateRTPC
// 0x0004 (0x0004 - 0x0000)
struct BP_BigWorldTimeManager_C_UpdateRTPC final
{
public:
	int32                                         InTimeHour;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BigWorldTimeManager_C_UpdateRTPC) == 0x000004, "Wrong alignment on BP_BigWorldTimeManager_C_UpdateRTPC");
static_assert(sizeof(BP_BigWorldTimeManager_C_UpdateRTPC) == 0x000004, "Wrong size on BP_BigWorldTimeManager_C_UpdateRTPC");
static_assert(offsetof(BP_BigWorldTimeManager_C_UpdateRTPC, InTimeHour) == 0x000000, "Member 'BP_BigWorldTimeManager_C_UpdateRTPC::InTimeHour' has a wrong offset!");

// Function BP_BigWorldTimeManager.BP_BigWorldTimeManager_C.ExecuteUbergraph_BP_BigWorldTimeManager
// 0x0020 (0x0020 - 0x0000)
struct BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57C4[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 InTimeHour)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_InTimeHour;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager) == 0x000004, "Wrong alignment on BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager");
static_assert(sizeof(BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager) == 0x000020, "Wrong size on BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager");
static_assert(offsetof(BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager, EntryPoint) == 0x000000, "Member 'BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager, CallFunc_SwitchNetMode_OutNetMode) == 0x000004, "Member 'BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager::CallFunc_SwitchNetMode_OutNetMode' has a wrong offset!");
static_assert(offsetof(BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager, K2Node_CustomEvent_InTimeHour) == 0x000018, "Member 'BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager::K2Node_CustomEvent_InTimeHour' has a wrong offset!");
static_assert(offsetof(BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'BP_BigWorldTimeManager_C_ExecuteUbergraph_BP_BigWorldTimeManager::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

}

