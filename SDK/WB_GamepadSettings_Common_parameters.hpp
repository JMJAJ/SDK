#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_GamepadSettings_Common

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "HottaFramework_structs.hpp"


namespace SDK::Params
{

// Function WB_GamepadSettings_Common.WB_GamepadSettings_Common_C.ExecuteUbergraph_WB_GamepadSettings_Common
// 0x0108 (0x0108 - 0x0000)
struct WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGamepadInputActionsType                      ___byte_Variable;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable;                                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_1;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_2;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGamepadInputActionsType                      ___byte_Variable_1;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DD[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable_3;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_4;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_5;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGamepadInputActionsType                      ___byte_Variable_2;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DE[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable_6;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_7;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_8;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DF[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQRSLHandleOperationManager*            CallFunc_K2_GetHandleOperatorManager_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGamepadType                                  CallFunc_GetGamepadType_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGamepadType                                  ___byte_Variable_3;                                // 0x0042(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E0[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGamepadType                                  ___byte_Variable_4;                                // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E1[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value;                           // 0x0060(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E2[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value_1;                         // 0x0090(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E3[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGamepadType                                  ___byte_Variable_5;                                // 0x00C0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E4[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value_2;                         // 0x00C8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E5[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E6[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHottaPlatformType                            CallFunc_SwitchPlatform_OutPlatformType;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHottaPlatformType                            CallFunc_SwitchPlatform_OutPlatformType_1;         // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHottaPlatformType                            CallFunc_SwitchPlatform_OutPlatformType_2;         // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common) == 0x000008, "Wrong alignment on WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common");
static_assert(sizeof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common) == 0x000108, "Wrong size on WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, EntryPoint) == 0x000000, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___byte_Variable) == 0x000004, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___int_Variable) == 0x000008, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___int_Variable' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___int_Variable_1) == 0x00000C, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___int_Variable_2) == 0x000010, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___int_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___byte_Variable_1) == 0x000014, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___int_Variable_3) == 0x000018, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___int_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___int_Variable_4) == 0x00001C, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___int_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___int_Variable_5) == 0x000020, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___int_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___byte_Variable_2) == 0x000024, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___int_Variable_6) == 0x000028, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___int_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___int_Variable_7) == 0x00002C, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___int_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___int_Variable_8) == 0x000030, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___int_Variable_8' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_K2_GetHandleOperatorManager_ReturnValue) == 0x000038, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_K2_GetHandleOperatorManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_GetGamepadType_ReturnValue) == 0x000040, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_GetGamepadType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___byte_Variable_3) == 0x000042, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_GetActiveWidget_ReturnValue) == 0x000048, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_GetActiveWidget_ReturnValue_1) == 0x000050, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_GetActiveWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___byte_Variable_4) == 0x000058, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_Map_Find_Value) == 0x000060, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_Map_Find_Value_1) == 0x000090, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_Map_Find_ReturnValue_1) == 0x0000B8, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, K2Node_Select_Default) == 0x0000BC, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, ___byte_Variable_5) == 0x0000C0, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::___byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_Map_Find_Value_2) == 0x0000C8, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_Map_Find_ReturnValue_2) == 0x0000F0, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, K2Node_Select_Default_1) == 0x0000F4, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, K2Node_Event_IsDesignTime) == 0x0000F8, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, K2Node_Select_Default_2) == 0x0000FC, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_SwitchPlatform_OutPlatformType) == 0x000100, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_SwitchPlatform_OutPlatformType' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, K2Node_SwitchEnum_CmpSuccess_1) == 0x000101, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_SwitchPlatform_OutPlatformType_1) == 0x000102, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_SwitchPlatform_OutPlatformType_1' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, CallFunc_SwitchPlatform_OutPlatformType_2) == 0x000103, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::CallFunc_SwitchPlatform_OutPlatformType_2' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, K2Node_SwitchEnum_CmpSuccess_2) == 0x000104, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common, K2Node_SwitchEnum_CmpSuccess_3) == 0x000105, "Member 'WB_GamepadSettings_Common_C_ExecuteUbergraph_WB_GamepadSettings_Common::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");

// Function WB_GamepadSettings_Common.WB_GamepadSettings_Common_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_GamepadSettings_Common_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_GamepadSettings_Common_C_PreConstruct) == 0x000001, "Wrong alignment on WB_GamepadSettings_Common_C_PreConstruct");
static_assert(sizeof(WB_GamepadSettings_Common_C_PreConstruct) == 0x000001, "Wrong size on WB_GamepadSettings_Common_C_PreConstruct");
static_assert(offsetof(WB_GamepadSettings_Common_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_GamepadSettings_Common_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_GamepadSettings_Common.WB_GamepadSettings_Common_C.SetupKeys
// 0x0108 (0x0108 - 0x0000)
struct WB_GamepadSettings_Common_C_SetupKeys final
{
public:
	TMap<class FName, struct FKey>                InputActions;                                      // 0x0000(0x0050)(Edit, BlueprintVisible)
	int32                                         ___int_Array_Index_Variable;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E7[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_GamepadKeySelector_C*               CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E8[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_Map_Find_Value;                           // 0x0090(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E9[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UQRSLHandleOperationManager*            CallFunc_K2_GetHandleOperatorManager_ReturnValue;  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FKey>                CallFunc_K2_GetInputActions_ReturnValue;           // 0x00B8(0x0050)()
};
static_assert(alignof(WB_GamepadSettings_Common_C_SetupKeys) == 0x000008, "Wrong alignment on WB_GamepadSettings_Common_C_SetupKeys");
static_assert(sizeof(WB_GamepadSettings_Common_C_SetupKeys) == 0x000108, "Wrong size on WB_GamepadSettings_Common_C_SetupKeys");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, InputActions) == 0x000000, "Member 'WB_GamepadSettings_Common_C_SetupKeys::InputActions' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, ___int_Array_Index_Variable) == 0x000050, "Member 'WB_GamepadSettings_Common_C_SetupKeys::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, ___int_Loop_Counter_Variable) == 0x000054, "Member 'WB_GamepadSettings_Common_C_SetupKeys::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_Create_ReturnValue) == 0x000060, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_AddChild_ReturnValue) == 0x000078, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_Array_Get_Item) == 0x000080, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_Map_Find_Value) == 0x000090, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_Less_IntInt_ReturnValue) == 0x0000A9, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_K2_GetHandleOperatorManager_ReturnValue) == 0x0000B0, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_K2_GetHandleOperatorManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_SetupKeys, CallFunc_K2_GetInputActions_ReturnValue) == 0x0000B8, "Member 'WB_GamepadSettings_Common_C_SetupKeys::CallFunc_K2_GetInputActions_ReturnValue' has a wrong offset!");

// Function WB_GamepadSettings_Common.WB_GamepadSettings_Common_C.Setup Keys Tips
// 0x0060 (0x0060 - 0x0000)
struct WB_GamepadSettings_Common_C_Setup_Keys_Tips final
{
public:
	class UCanvasPanel*                           LocalGroup;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        Children;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         ___int_Array_Index_Variable;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33EA[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EB[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_GamepaActionNamedText_C*            K2Node_DynamicCast_AsWB_Gamepa_Action_Named_Text;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EC[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_GamepadSettings_Common_C_Setup_Keys_Tips) == 0x000008, "Wrong alignment on WB_GamepadSettings_Common_C_Setup_Keys_Tips");
static_assert(sizeof(WB_GamepadSettings_Common_C_Setup_Keys_Tips) == 0x000060, "Wrong size on WB_GamepadSettings_Common_C_Setup_Keys_Tips");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, LocalGroup) == 0x000000, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::LocalGroup' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, Children) == 0x000008, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::Children' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, ___int_Array_Index_Variable) == 0x000018, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, ___int_Loop_Counter_Variable) == 0x00001C, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000038, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, K2Node_SwitchInteger_CmpSuccess) == 0x00003C, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, CallFunc_Array_Get_Item) == 0x000040, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, K2Node_DynamicCast_AsWB_Gamepa_Action_Named_Text) == 0x000048, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::K2Node_DynamicCast_AsWB_Gamepa_Action_Named_Text' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_Setup_Keys_Tips, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WB_GamepadSettings_Common_C_Setup_Keys_Tips::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_GamepadSettings_Common.WB_GamepadSettings_Common_C.RefreshKeys
// 0x0110 (0x0110 - 0x0000)
struct WB_GamepadSettings_Common_C_RefreshKeys final
{
public:
	TMap<class FName, struct FKey>                InputActions;                                      // 0x0000(0x0050)(Edit, BlueprintVisible)
	int32                                         ___int_Array_Index_Variable;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33ED[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_GamepadKeySelector_C*               K2Node_DynamicCast_AsWB_Gamepad_Key_Selector;      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EE[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQRSLHandleOperationManager*            CallFunc_K2_GetHandleOperatorManager_ReturnValue;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FKey>                CallFunc_K2_GetInputActions_ReturnValue;           // 0x0080(0x0050)()
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x00D0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33EF[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_Map_Find_Value;                           // 0x00F0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_GamepadSettings_Common_C_RefreshKeys) == 0x000008, "Wrong alignment on WB_GamepadSettings_Common_C_RefreshKeys");
static_assert(sizeof(WB_GamepadSettings_Common_C_RefreshKeys) == 0x000110, "Wrong size on WB_GamepadSettings_Common_C_RefreshKeys");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, InputActions) == 0x000000, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::InputActions' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, ___int_Array_Index_Variable) == 0x000050, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, ___int_Loop_Counter_Variable) == 0x000054, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, CallFunc_GetChildAt_ReturnValue) == 0x000060, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, K2Node_DynamicCast_AsWB_Gamepad_Key_Selector) == 0x000068, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::K2Node_DynamicCast_AsWB_Gamepad_Key_Selector' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, CallFunc_K2_GetHandleOperatorManager_ReturnValue) == 0x000078, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::CallFunc_K2_GetHandleOperatorManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, CallFunc_K2_GetInputActions_ReturnValue) == 0x000080, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::CallFunc_K2_GetInputActions_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, CallFunc_Map_Keys_Keys) == 0x0000D0, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, CallFunc_Map_Find_Value) == 0x0000F0, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, CallFunc_Map_Find_ReturnValue) == 0x000108, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepadSettings_Common_C_RefreshKeys, CallFunc_Less_IntInt_ReturnValue) == 0x000109, "Member 'WB_GamepadSettings_Common_C_RefreshKeys::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_GamepadSettings_Common.WB_GamepadSettings_Common_C.ScrollWidgetIntoView
// 0x0008 (0x0008 - 0x0000)
struct WB_GamepadSettings_Common_C_ScrollWidgetIntoView final
{
public:
	class UWidget*                                WidgetToFind;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GamepadSettings_Common_C_ScrollWidgetIntoView) == 0x000008, "Wrong alignment on WB_GamepadSettings_Common_C_ScrollWidgetIntoView");
static_assert(sizeof(WB_GamepadSettings_Common_C_ScrollWidgetIntoView) == 0x000008, "Wrong size on WB_GamepadSettings_Common_C_ScrollWidgetIntoView");
static_assert(offsetof(WB_GamepadSettings_Common_C_ScrollWidgetIntoView, WidgetToFind) == 0x000000, "Member 'WB_GamepadSettings_Common_C_ScrollWidgetIntoView::WidgetToFind' has a wrong offset!");

}

