#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RadioBox

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "QRSL_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_RadioBox.UI_RadioBox_C
// 0x0248 (0x0DE0 - 0x0B98)
class UUI_RadioBox_C final : public UQRSLUI_RadioBox
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B98(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Xunhuan;                                           // 0x0BA0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             GamepadSlot;                                       // 0x0BA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_49;                                          // 0x0BB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_93;                                      // 0x0BB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          UseIcon;                                           // 0x0BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C91[0x3];                                     // 0x0BC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWidgetTransform                       IconTransform;                                     // 0x0BC4(0x001C)(Edit, BlueprintVisible, NoDestructor)
	struct FSlateBrush                            Checked_IconBrush;                                 // 0x0BE0(0x0088)(Edit, BlueprintVisible)
	struct FSlateBrush                            UnChecked_IconBrush;                               // 0x0C68(0x0088)(Edit, BlueprintVisible)
	bool                                          UseText;                                           // 0x0CF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C92[0x7];                                     // 0x0CF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0CF8(0x0018)(Edit, BlueprintVisible)
	struct FWidgetTransform                       TextTransform;                                     // 0x0D10(0x001C)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_6C93[0x4];                                     // 0x0D2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         TextFont;                                          // 0x0D30(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateColor                            Checked_Color;                                     // 0x0D88(0x0028)(Edit, BlueprintVisible)
	struct FSlateColor                            UnChecked_Color;                                   // 0x0DB0(0x0028)(Edit, BlueprintVisible)
	bool                                          EnableGamepadSlot;                                 // 0x0DD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void SequenceEvent__ENTRYPOINTUI_RadioBox_1();
	void SequenceEvent__ENTRYPOINTUI_RadioBox_0();
	void SetText();
	void SetIcon();
	void SequenceEvent_0();
	void SequenceEvent_2();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__UI_RadioBox_RadioBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__UI_RadioBox_RadioBox_K2Node_ComponentBoundEvent_1_OnUnSelectedDelegate__DelegateSignature(class UWidget* InWidget);
	void BndEvt__UI_RadioBox_RadioBox_K2Node_ComponentBoundEvent_2_OnSelectedDelegate__DelegateSignature(class UWidget* InWidget);
	void EvalutaGamepadSlot();
	void ExecuteUbergraph_UI_RadioBox(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_RadioBox_C">();
	}
	static class UUI_RadioBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_RadioBox_C>();
	}
};
static_assert(alignof(UUI_RadioBox_C) == 0x000008, "Wrong alignment on UUI_RadioBox_C");
static_assert(sizeof(UUI_RadioBox_C) == 0x000DE0, "Wrong size on UUI_RadioBox_C");
static_assert(offsetof(UUI_RadioBox_C, UberGraphFrame) == 0x000B98, "Member 'UUI_RadioBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, Xunhuan) == 0x000BA0, "Member 'UUI_RadioBox_C::Xunhuan' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, GamepadSlot) == 0x000BA8, "Member 'UUI_RadioBox_C::GamepadSlot' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, Image_49) == 0x000BB0, "Member 'UUI_RadioBox_C::Image_49' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, TextBlock_93) == 0x000BB8, "Member 'UUI_RadioBox_C::TextBlock_93' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, UseIcon) == 0x000BC0, "Member 'UUI_RadioBox_C::UseIcon' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, IconTransform) == 0x000BC4, "Member 'UUI_RadioBox_C::IconTransform' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, Checked_IconBrush) == 0x000BE0, "Member 'UUI_RadioBox_C::Checked_IconBrush' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, UnChecked_IconBrush) == 0x000C68, "Member 'UUI_RadioBox_C::UnChecked_IconBrush' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, UseText) == 0x000CF0, "Member 'UUI_RadioBox_C::UseText' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, Text) == 0x000CF8, "Member 'UUI_RadioBox_C::Text' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, TextTransform) == 0x000D10, "Member 'UUI_RadioBox_C::TextTransform' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, TextFont) == 0x000D30, "Member 'UUI_RadioBox_C::TextFont' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, Checked_Color) == 0x000D88, "Member 'UUI_RadioBox_C::Checked_Color' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, UnChecked_Color) == 0x000DB0, "Member 'UUI_RadioBox_C::UnChecked_Color' has a wrong offset!");
static_assert(offsetof(UUI_RadioBox_C, EnableGamepadSlot) == 0x000DD8, "Member 'UUI_RadioBox_C::EnableGamepadSlot' has a wrong offset!");

}

