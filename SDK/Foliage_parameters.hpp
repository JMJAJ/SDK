#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Foliage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Foliage.FoliageInstancedStaticMeshComponent.IsInstanceCanBeBurn
// 0x0001 (0x0001 - 0x0000)
struct FoliageInstancedStaticMeshComponent_IsInstanceCanBeBurn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FoliageInstancedStaticMeshComponent_IsInstanceCanBeBurn) == 0x000001, "Wrong alignment on FoliageInstancedStaticMeshComponent_IsInstanceCanBeBurn");
static_assert(sizeof(FoliageInstancedStaticMeshComponent_IsInstanceCanBeBurn) == 0x000001, "Wrong size on FoliageInstancedStaticMeshComponent_IsInstanceCanBeBurn");
static_assert(offsetof(FoliageInstancedStaticMeshComponent_IsInstanceCanBeBurn, ReturnValue) == 0x000000, "Member 'FoliageInstancedStaticMeshComponent_IsInstanceCanBeBurn::ReturnValue' has a wrong offset!");

// Function Foliage.FoliageInstancedStaticMeshComponent.IsInstanceCanBeCut
// 0x0001 (0x0001 - 0x0000)
struct FoliageInstancedStaticMeshComponent_IsInstanceCanBeCut final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FoliageInstancedStaticMeshComponent_IsInstanceCanBeCut) == 0x000001, "Wrong alignment on FoliageInstancedStaticMeshComponent_IsInstanceCanBeCut");
static_assert(sizeof(FoliageInstancedStaticMeshComponent_IsInstanceCanBeCut) == 0x000001, "Wrong size on FoliageInstancedStaticMeshComponent_IsInstanceCanBeCut");
static_assert(offsetof(FoliageInstancedStaticMeshComponent_IsInstanceCanBeCut, ReturnValue) == 0x000000, "Member 'FoliageInstancedStaticMeshComponent_IsInstanceCanBeCut::ReturnValue' has a wrong offset!");

// Function Foliage.FoliageInstancedStaticMeshComponent.IsInstanceCanCutDown
// 0x0001 (0x0001 - 0x0000)
struct FoliageInstancedStaticMeshComponent_IsInstanceCanCutDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FoliageInstancedStaticMeshComponent_IsInstanceCanCutDown) == 0x000001, "Wrong alignment on FoliageInstancedStaticMeshComponent_IsInstanceCanCutDown");
static_assert(sizeof(FoliageInstancedStaticMeshComponent_IsInstanceCanCutDown) == 0x000001, "Wrong size on FoliageInstancedStaticMeshComponent_IsInstanceCanCutDown");
static_assert(offsetof(FoliageInstancedStaticMeshComponent_IsInstanceCanCutDown, ReturnValue) == 0x000000, "Member 'FoliageInstancedStaticMeshComponent_IsInstanceCanCutDown::ReturnValue' has a wrong offset!");

// Function Foliage.FoliageStatistics.FoliageOverlappingBoxCount
// 0x0030 (0x0030 - 0x0000)
struct FoliageStatistics_FoliageOverlappingBoxCount final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UStaticMesh*                      StaticMesh;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                   Box;                                               // 0x0010(0x001C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FoliageStatistics_FoliageOverlappingBoxCount) == 0x000008, "Wrong alignment on FoliageStatistics_FoliageOverlappingBoxCount");
static_assert(sizeof(FoliageStatistics_FoliageOverlappingBoxCount) == 0x000030, "Wrong size on FoliageStatistics_FoliageOverlappingBoxCount");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxCount, WorldContextObject) == 0x000000, "Member 'FoliageStatistics_FoliageOverlappingBoxCount::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxCount, StaticMesh) == 0x000008, "Member 'FoliageStatistics_FoliageOverlappingBoxCount::StaticMesh' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxCount, Box) == 0x000010, "Member 'FoliageStatistics_FoliageOverlappingBoxCount::Box' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxCount, ReturnValue) == 0x00002C, "Member 'FoliageStatistics_FoliageOverlappingBoxCount::ReturnValue' has a wrong offset!");

// Function Foliage.FoliageStatistics.FoliageOverlappingSphereCount
// 0x0028 (0x0028 - 0x0000)
struct FoliageStatistics_FoliageOverlappingSphereCount final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UStaticMesh*                      StaticMesh;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterPosition;                                    // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5262[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FoliageStatistics_FoliageOverlappingSphereCount) == 0x000008, "Wrong alignment on FoliageStatistics_FoliageOverlappingSphereCount");
static_assert(sizeof(FoliageStatistics_FoliageOverlappingSphereCount) == 0x000028, "Wrong size on FoliageStatistics_FoliageOverlappingSphereCount");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingSphereCount, WorldContextObject) == 0x000000, "Member 'FoliageStatistics_FoliageOverlappingSphereCount::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingSphereCount, StaticMesh) == 0x000008, "Member 'FoliageStatistics_FoliageOverlappingSphereCount::StaticMesh' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingSphereCount, CenterPosition) == 0x000010, "Member 'FoliageStatistics_FoliageOverlappingSphereCount::CenterPosition' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingSphereCount, Radius) == 0x00001C, "Member 'FoliageStatistics_FoliageOverlappingSphereCount::Radius' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingSphereCount, ReturnValue) == 0x000020, "Member 'FoliageStatistics_FoliageOverlappingSphereCount::ReturnValue' has a wrong offset!");

// Function Foliage.IFBurnInstancedStaticMeshComponent.BurnGrassInstance
// 0x0004 (0x0004 - 0x0000)
struct IFBurnInstancedStaticMeshComponent_BurnGrassInstance final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IFBurnInstancedStaticMeshComponent_BurnGrassInstance) == 0x000004, "Wrong alignment on IFBurnInstancedStaticMeshComponent_BurnGrassInstance");
static_assert(sizeof(IFBurnInstancedStaticMeshComponent_BurnGrassInstance) == 0x000004, "Wrong size on IFBurnInstancedStaticMeshComponent_BurnGrassInstance");
static_assert(offsetof(IFBurnInstancedStaticMeshComponent_BurnGrassInstance, InstanceIndex) == 0x000000, "Member 'IFBurnInstancedStaticMeshComponent_BurnGrassInstance::InstanceIndex' has a wrong offset!");

// Function Foliage.IFBurnInstancedStaticMeshComponent.IsInstanceInBurnState
// 0x0008 (0x0008 - 0x0000)
struct IFBurnInstancedStaticMeshComponent_IsInstanceInBurnState final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_527D[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IFBurnInstancedStaticMeshComponent_IsInstanceInBurnState) == 0x000004, "Wrong alignment on IFBurnInstancedStaticMeshComponent_IsInstanceInBurnState");
static_assert(sizeof(IFBurnInstancedStaticMeshComponent_IsInstanceInBurnState) == 0x000008, "Wrong size on IFBurnInstancedStaticMeshComponent_IsInstanceInBurnState");
static_assert(offsetof(IFBurnInstancedStaticMeshComponent_IsInstanceInBurnState, InstanceIndex) == 0x000000, "Member 'IFBurnInstancedStaticMeshComponent_IsInstanceInBurnState::InstanceIndex' has a wrong offset!");
static_assert(offsetof(IFBurnInstancedStaticMeshComponent_IsInstanceInBurnState, ReturnValue) == 0x000004, "Member 'IFBurnInstancedStaticMeshComponent_IsInstanceInBurnState::ReturnValue' has a wrong offset!");

// Function Foliage.IFBurnInstancedStaticMeshComponent.SpreadFireOnInstance
// 0x000C (0x000C - 0x0000)
struct IFBurnInstancedStaticMeshComponent_SpreadFireOnInstance final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IFBurnInstancedStaticMeshComponent_SpreadFireOnInstance) == 0x000004, "Wrong alignment on IFBurnInstancedStaticMeshComponent_SpreadFireOnInstance");
static_assert(sizeof(IFBurnInstancedStaticMeshComponent_SpreadFireOnInstance) == 0x00000C, "Wrong size on IFBurnInstancedStaticMeshComponent_SpreadFireOnInstance");
static_assert(offsetof(IFBurnInstancedStaticMeshComponent_SpreadFireOnInstance, Center) == 0x000000, "Member 'IFBurnInstancedStaticMeshComponent_SpreadFireOnInstance::Center' has a wrong offset!");

// Function Foliage.IFTreeInstancedStaticMeshComponent.CutTreeInstance
// 0x0010 (0x0010 - 0x0000)
struct IFTreeInstancedStaticMeshComponent_CutTreeInstance final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_527F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IFTreeInstancedStaticMeshComponent_CutTreeInstance) == 0x000008, "Wrong alignment on IFTreeInstancedStaticMeshComponent_CutTreeInstance");
static_assert(sizeof(IFTreeInstancedStaticMeshComponent_CutTreeInstance) == 0x000010, "Wrong size on IFTreeInstancedStaticMeshComponent_CutTreeInstance");
static_assert(offsetof(IFTreeInstancedStaticMeshComponent_CutTreeInstance, InstanceIndex) == 0x000000, "Member 'IFTreeInstancedStaticMeshComponent_CutTreeInstance::InstanceIndex' has a wrong offset!");
static_assert(offsetof(IFTreeInstancedStaticMeshComponent_CutTreeInstance, ReturnValue) == 0x000008, "Member 'IFTreeInstancedStaticMeshComponent_CutTreeInstance::ReturnValue' has a wrong offset!");

// Function Foliage.IFTreeInstancedStaticMeshComponent.InstancedCompBeginOverlap
// 0x00B0 (0x00B0 - 0x0000)
struct IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap final
{
public:
	class UPrimitiveComponent*                    InOverlappedComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 InOtherActor;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    InOtherComponent;                                  // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InOtherBodyIndex;                                  // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInFromSweep;                                      // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5280[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             InSweepResult;                                     // 0x0020(0x008C)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_5281[0x4];                                     // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap) == 0x000008, "Wrong alignment on IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap");
static_assert(sizeof(IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap) == 0x0000B0, "Wrong size on IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap");
static_assert(offsetof(IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap, InOverlappedComponent) == 0x000000, "Member 'IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap::InOverlappedComponent' has a wrong offset!");
static_assert(offsetof(IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap, InOtherActor) == 0x000008, "Member 'IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap::InOtherActor' has a wrong offset!");
static_assert(offsetof(IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap, InOtherComponent) == 0x000010, "Member 'IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap::InOtherComponent' has a wrong offset!");
static_assert(offsetof(IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap, InOtherBodyIndex) == 0x000018, "Member 'IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap::InOtherBodyIndex' has a wrong offset!");
static_assert(offsetof(IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap, bInFromSweep) == 0x00001C, "Member 'IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap::bInFromSweep' has a wrong offset!");
static_assert(offsetof(IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap, InSweepResult) == 0x000020, "Member 'IFTreeInstancedStaticMeshComponent_InstancedCompBeginOverlap::InSweepResult' has a wrong offset!");

// Function Foliage.InteractiveFoliageActor.CapsuleTouched
// 0x00B0 (0x00B0 - 0x0000)
struct InteractiveFoliageActor_CapsuleTouched final
{
public:
	class UPrimitiveComponent*                    OverlappedComp;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5284[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OverlapInfo;                                       // 0x0020(0x008C)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_5285[0x4];                                     // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InteractiveFoliageActor_CapsuleTouched) == 0x000008, "Wrong alignment on InteractiveFoliageActor_CapsuleTouched");
static_assert(sizeof(InteractiveFoliageActor_CapsuleTouched) == 0x0000B0, "Wrong size on InteractiveFoliageActor_CapsuleTouched");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, OverlappedComp) == 0x000000, "Member 'InteractiveFoliageActor_CapsuleTouched::OverlappedComp' has a wrong offset!");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, Other) == 0x000008, "Member 'InteractiveFoliageActor_CapsuleTouched::Other' has a wrong offset!");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, OtherComp) == 0x000010, "Member 'InteractiveFoliageActor_CapsuleTouched::OtherComp' has a wrong offset!");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, OtherBodyIndex) == 0x000018, "Member 'InteractiveFoliageActor_CapsuleTouched::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, bFromSweep) == 0x00001C, "Member 'InteractiveFoliageActor_CapsuleTouched::bFromSweep' has a wrong offset!");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, OverlapInfo) == 0x000020, "Member 'InteractiveFoliageActor_CapsuleTouched::OverlapInfo' has a wrong offset!");

// Function Foliage.ProceduralFoliageSpawner.Simulate
// 0x0004 (0x0004 - 0x0000)
struct ProceduralFoliageSpawner_Simulate final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ProceduralFoliageSpawner_Simulate) == 0x000004, "Wrong alignment on ProceduralFoliageSpawner_Simulate");
static_assert(sizeof(ProceduralFoliageSpawner_Simulate) == 0x000004, "Wrong size on ProceduralFoliageSpawner_Simulate");
static_assert(offsetof(ProceduralFoliageSpawner_Simulate, NumSteps) == 0x000000, "Member 'ProceduralFoliageSpawner_Simulate::NumSteps' has a wrong offset!");

}

