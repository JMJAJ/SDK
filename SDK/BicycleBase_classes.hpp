#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BicycleBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HottaFramework_structs.hpp"
#include "QRSL_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BicycleBase.BicycleBase_C
// 0x0030 (0x2C70 - 0x2C40)
class ABicycleBase_C final : public AQRSLBicycleCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2C40(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_SetupTrailComponent_C*              BP_SetupTrailComponent;                            // 0x2C48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayIceSkatingParticle;                            // 0x2C50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BAF[0x7];                                     // 0x2C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        SkidParticle;                                      // 0x2C58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ActiveSkidParticleComp;                            // 0x2C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_CanDrawTrail(bool* DrawTrail);
	void CalculateSkidDirection(const struct FVector& Velocity, const struct FRotator& WheelForward, struct FRotator* MarkDirection);
	void TryDrawBrakeTrail(const struct FVector& TyreDownLocation);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BicycleBase(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BicycleBase_C">();
	}
	static class ABicycleBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABicycleBase_C>();
	}
};
static_assert(alignof(ABicycleBase_C) == 0x000010, "Wrong alignment on ABicycleBase_C");
static_assert(sizeof(ABicycleBase_C) == 0x002C70, "Wrong size on ABicycleBase_C");
static_assert(offsetof(ABicycleBase_C, UberGraphFrame) == 0x002C40, "Member 'ABicycleBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABicycleBase_C, BP_SetupTrailComponent) == 0x002C48, "Member 'ABicycleBase_C::BP_SetupTrailComponent' has a wrong offset!");
static_assert(offsetof(ABicycleBase_C, PlayIceSkatingParticle) == 0x002C50, "Member 'ABicycleBase_C::PlayIceSkatingParticle' has a wrong offset!");
static_assert(offsetof(ABicycleBase_C, SkidParticle) == 0x002C58, "Member 'ABicycleBase_C::SkidParticle' has a wrong offset!");
static_assert(offsetof(ABicycleBase_C, ActiveSkidParticleComp) == 0x002C60, "Member 'ABicycleBase_C::ActiveSkidParticleComp' has a wrong offset!");

}

