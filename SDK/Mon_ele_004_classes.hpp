#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mon_ele_004

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MonsterCharacterBP_Base_classes.hpp"
#include "HottaFramework_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass mon_ele_004.mon_ele_004_C
// 0x0060 (0x3B90 - 0x3B30)
class AMon_ele_004_C : public AMonsterCharacterBP_Base_C
{
public:
	uint8                                         Pad_6C3D[0x4];                                     // 0x3B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_Mon_ele_004_C;                      // 0x3B28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule4;                                          // 0x3B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule3;                                          // 0x3B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule2;                                          // 0x3B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule1;                                          // 0x3B48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem_pe;                                 // 0x3B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasMoving;                                        // 0x3B58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C3E[0x3];                                     // 0x3B59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HuntCD;                                            // 0x3B5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FirstHuntDelay;                                    // 0x3B60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextHuntTime;                                      // 0x3B64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaAICharacter*                      HuntTarget;                                        // 0x3B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HuntRange;                                         // 0x3B70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C3F[0x4];                                     // 0x3B74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         ExcludeHuntTargetTypes;                            // 0x3B78(0x0010)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_mon_ele_004(int32 EntryPoint);
	void OnDamaged(float DamageAmount, const struct FHitResult& HitInfo, const struct FGameplayTagContainer& DamageTags, TSubclassOf<class UGameplayEffect> DamageGameplayEffect, class AHottaCharacter* InstigatorCharacter, class AActor* DamageCauser);
	void BPOnCharacterDead();
	void Set_particle();
	void HunterXhunter();
	void OnBeginBattle();
	void ReceiveBeginPlay();
	void OnHuntSkillUsed(bool bSuccess);
	void FindHuntTarget(class AHottaAICharacter** Target);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"mon_ele_004_C">();
	}
	static class AMon_ele_004_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMon_ele_004_C>();
	}
};
static_assert(alignof(AMon_ele_004_C) == 0x000010, "Wrong alignment on AMon_ele_004_C");
static_assert(sizeof(AMon_ele_004_C) == 0x003B90, "Wrong size on AMon_ele_004_C");
static_assert(offsetof(AMon_ele_004_C, UberGraphFrame_Mon_ele_004_C) == 0x003B28, "Member 'AMon_ele_004_C::UberGraphFrame_Mon_ele_004_C' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, Capsule4) == 0x003B30, "Member 'AMon_ele_004_C::Capsule4' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, Capsule3) == 0x003B38, "Member 'AMon_ele_004_C::Capsule3' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, Capsule2) == 0x003B40, "Member 'AMon_ele_004_C::Capsule2' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, Capsule1) == 0x003B48, "Member 'AMon_ele_004_C::Capsule1' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, ParticleSystem_pe) == 0x003B50, "Member 'AMon_ele_004_C::ParticleSystem_pe' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, bWasMoving) == 0x003B58, "Member 'AMon_ele_004_C::bWasMoving' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, HuntCD) == 0x003B5C, "Member 'AMon_ele_004_C::HuntCD' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, FirstHuntDelay) == 0x003B60, "Member 'AMon_ele_004_C::FirstHuntDelay' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, NextHuntTime) == 0x003B64, "Member 'AMon_ele_004_C::NextHuntTime' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, HuntTarget) == 0x003B68, "Member 'AMon_ele_004_C::HuntTarget' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, HuntRange) == 0x003B70, "Member 'AMon_ele_004_C::HuntRange' has a wrong offset!");
static_assert(offsetof(AMon_ele_004_C, ExcludeHuntTargetTypes) == 0x003B78, "Member 'AMon_ele_004_C::ExcludeHuntTargetTypes' has a wrong offset!");

}

