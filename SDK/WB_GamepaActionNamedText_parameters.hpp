#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_GamepaActionNamedText

#include "Basic.hpp"

#include "HottaFramework_structs.hpp"


namespace SDK::Params
{

// Function WB_GamepaActionNamedText.WB_GamepaActionNamedText_C.ExecuteUbergraph_WB_GamepaActionNamedText
// 0x0008 (0x0008 - 0x0000)
struct WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText) == 0x000004, "Wrong alignment on WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText");
static_assert(sizeof(WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText) == 0x000008, "Wrong size on WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText");
static_assert(offsetof(WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText, EntryPoint) == 0x000000, "Member 'WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000005, "Member 'WB_GamepaActionNamedText_C_ExecuteUbergraph_WB_GamepaActionNamedText::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_GamepaActionNamedText.WB_GamepaActionNamedText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_GamepaActionNamedText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_GamepaActionNamedText_C_PreConstruct) == 0x000001, "Wrong alignment on WB_GamepaActionNamedText_C_PreConstruct");
static_assert(sizeof(WB_GamepaActionNamedText_C_PreConstruct) == 0x000001, "Wrong size on WB_GamepaActionNamedText_C_PreConstruct");
static_assert(offsetof(WB_GamepaActionNamedText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_GamepaActionNamedText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_GamepaActionNamedText.WB_GamepaActionNamedText_C.Init
// 0x0048 (0x0048 - 0x0000)
struct WB_GamepaActionNamedText_C_Init final
{
public:
	EGamepadInputActionsType                      InInputActionType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E49[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ActionText;                                        // 0x0008(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E4A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQRSLHandleOperationManager*            CallFunc_K2_GetHandleOperatorManager_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalizationActionNameFromKey_ReturnValue; // 0x0030(0x0018)()
};
static_assert(alignof(WB_GamepaActionNamedText_C_Init) == 0x000008, "Wrong alignment on WB_GamepaActionNamedText_C_Init");
static_assert(sizeof(WB_GamepaActionNamedText_C_Init) == 0x000048, "Wrong size on WB_GamepaActionNamedText_C_Init");
static_assert(offsetof(WB_GamepaActionNamedText_C_Init, InInputActionType) == 0x000000, "Member 'WB_GamepaActionNamedText_C_Init::InInputActionType' has a wrong offset!");
static_assert(offsetof(WB_GamepaActionNamedText_C_Init, ActionText) == 0x000008, "Member 'WB_GamepaActionNamedText_C_Init::ActionText' has a wrong offset!");
static_assert(offsetof(WB_GamepaActionNamedText_C_Init, CallFunc_TextIsEmpty_ReturnValue) == 0x000020, "Member 'WB_GamepaActionNamedText_C_Init::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepaActionNamedText_C_Init, CallFunc_K2_GetHandleOperatorManager_ReturnValue) == 0x000028, "Member 'WB_GamepaActionNamedText_C_Init::CallFunc_K2_GetHandleOperatorManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GamepaActionNamedText_C_Init, CallFunc_GetLocalizationActionNameFromKey_ReturnValue) == 0x000030, "Member 'WB_GamepaActionNamedText_C_Init::CallFunc_GetLocalizationActionNameFromKey_ReturnValue' has a wrong offset!");

}

