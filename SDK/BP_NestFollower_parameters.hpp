#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NestFollower

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "HottaFramework_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_NestFollower.BP_NestFollower_C.ExecuteUbergraph_BP_NestFollower
// 0x0060 (0x0060 - 0x0000)
struct BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CE0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          ___struct_Variable;                                // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> ___delegate_Variable;                              // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHeardOrLost;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CE1[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HeardLocation;                        // 0x0030(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CE2[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Target_1;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSeenOrLost;                          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CE3[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Target;                               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower) == 0x000008, "Wrong alignment on BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower");
static_assert(sizeof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower) == 0x000060, "Wrong size on BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, EntryPoint) == 0x000000, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, ___struct_Variable) == 0x000008, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::___struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, ___delegate_Variable) == 0x000018, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::___delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, CallFunc_PostAkEvent_ReturnValue) == 0x000028, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, K2Node_Event_bHeardOrLost) == 0x00002C, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::K2Node_Event_bHeardOrLost' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, K2Node_Event_HeardLocation) == 0x000030, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::K2Node_Event_HeardLocation' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, K2Node_Event_Target_1) == 0x000040, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, K2Node_Event_bSeenOrLost) == 0x000048, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::K2Node_Event_bSeenOrLost' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, K2Node_Event_Target) == 0x000050, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, CallFunc_SwitchNetMode_OutNetMode) == 0x000058, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::CallFunc_SwitchNetMode_OutNetMode' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'BP_NestFollower_C_ExecuteUbergraph_BP_NestFollower::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_NestFollower.BP_NestFollower_C.OnSeenTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_NestFollower_C_OnSeenTarget final
{
public:
	bool                                          bSeenOrLost;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CE4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NestFollower_C_OnSeenTarget) == 0x000008, "Wrong alignment on BP_NestFollower_C_OnSeenTarget");
static_assert(sizeof(BP_NestFollower_C_OnSeenTarget) == 0x000010, "Wrong size on BP_NestFollower_C_OnSeenTarget");
static_assert(offsetof(BP_NestFollower_C_OnSeenTarget, bSeenOrLost) == 0x000000, "Member 'BP_NestFollower_C_OnSeenTarget::bSeenOrLost' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_OnSeenTarget, Target) == 0x000008, "Member 'BP_NestFollower_C_OnSeenTarget::Target' has a wrong offset!");

// Function BP_NestFollower.BP_NestFollower_C.OnHeardTarget
// 0x0018 (0x0018 - 0x0000)
struct BP_NestFollower_C_OnHeardTarget final
{
public:
	bool                                          bHeardOrLost;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CE5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HeardLocation;                                     // 0x0004(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NestFollower_C_OnHeardTarget) == 0x000008, "Wrong alignment on BP_NestFollower_C_OnHeardTarget");
static_assert(sizeof(BP_NestFollower_C_OnHeardTarget) == 0x000018, "Wrong size on BP_NestFollower_C_OnHeardTarget");
static_assert(offsetof(BP_NestFollower_C_OnHeardTarget, bHeardOrLost) == 0x000000, "Member 'BP_NestFollower_C_OnHeardTarget::bHeardOrLost' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_OnHeardTarget, HeardLocation) == 0x000004, "Member 'BP_NestFollower_C_OnHeardTarget::HeardLocation' has a wrong offset!");
static_assert(offsetof(BP_NestFollower_C_OnHeardTarget, Target) == 0x000010, "Member 'BP_NestFollower_C_OnHeardTarget::Target' has a wrong offset!");

}

