#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CheatManager

#include "Basic.hpp"

#include "BP_CheatManager_classes.hpp"
#include "BP_CheatManager_parameters.hpp"


namespace SDK
{

// Function BP_CheatManager.BP_CheatManager_C.ExecuteUbergraph_BP_CheatManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CheatManager_C::ExecuteUbergraph_BP_CheatManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatManager_C", "ExecuteUbergraph_BP_CheatManager");

	Params::BP_CheatManager_C_ExecuteUbergraph_BP_CheatManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatManager.BP_CheatManager_C.AddNoticeMessage
// (Exec, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Content                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CheatManager_C::AddNoticeMessage(const class FText& Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatManager_C", "AddNoticeMessage");

	Params::BP_CheatManager_C_AddNoticeMessage Parms{};

	Parms.Content = std::move(Content);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatManager.BP_CheatManager_C.AddSystemMessage
// (Exec, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Param_Name                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CheatManager_C::AddSystemMessage(const class FText& Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatManager_C", "AddSystemMessage");

	Params::BP_CheatManager_C_AddSystemMessage Parms{};

	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);
}

}

