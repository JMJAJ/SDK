#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MiniGame_CactusGem_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MiniGame_CactusGem_Base.BP_MiniGame_CactusGem_Base_C.TargetIsBroken__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_MiniGame_CactusGem_Base_C_TargetIsBroken__DelegateSignature final
{
public:
	class AQRSLPlayerCharacter*                   Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MiniGame_CactusGem_Base_C_TargetIsBroken__DelegateSignature) == 0x000008, "Wrong alignment on BP_MiniGame_CactusGem_Base_C_TargetIsBroken__DelegateSignature");
static_assert(sizeof(BP_MiniGame_CactusGem_Base_C_TargetIsBroken__DelegateSignature) == 0x000008, "Wrong size on BP_MiniGame_CactusGem_Base_C_TargetIsBroken__DelegateSignature");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_TargetIsBroken__DelegateSignature, Player) == 0x000000, "Member 'BP_MiniGame_CactusGem_Base_C_TargetIsBroken__DelegateSignature::Player' has a wrong offset!");

// Function BP_MiniGame_CactusGem_Base.BP_MiniGame_CactusGem_Base_C.ExecuteUbergraph_BP_MiniGame_CactusGem_Base
// 0x0170 (0x0170 - 0x0000)
struct BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CDC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0010(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_bRealDamaged;                         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CDD[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CDE[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaPlayerCharacter*                  CallFunc_GetClientPlayerCharacter_ReturnValue;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AQRSLPlayerCharacter*                   K2Node_DynamicCast_AsQRSLPlayer_Character;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CDF[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00E0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base) == 0x000008, "Wrong alignment on BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base");
static_assert(sizeof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base) == 0x000170, "Wrong size on BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, EntryPoint) == 0x000000, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, K2Node_Event_DamageCauser) == 0x000008, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, K2Node_Event_HitResult) == 0x000010, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, K2Node_Event_bRealDamaged) == 0x00009C, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::K2Node_Event_bRealDamaged' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A0, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, CallFunc_GetClientPlayerCharacter_ReturnValue) == 0x0000B0, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::CallFunc_GetClientPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000B8, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, K2Node_DynamicCast_AsQRSLPlayer_Character) == 0x0000C0, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::K2Node_DynamicCast_AsQRSLPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, CallFunc_GetSplineLength_ReturnValue) == 0x0000CC, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0000D4, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000E0, "Member 'BP_MiniGame_CactusGem_Base_C_ExecuteUbergraph_BP_MiniGame_CactusGem_Base::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_MiniGame_CactusGem_Base.BP_MiniGame_CactusGem_Base_C.ReceiveOnTakeDamage
// 0x0098 (0x0098 - 0x0000)
struct BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bRealDamaged;                                      // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage) == 0x000008, "Wrong alignment on BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage");
static_assert(sizeof(BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage) == 0x000098, "Wrong size on BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage, DamageCauser) == 0x000000, "Member 'BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage, HitResult) == 0x000008, "Member 'BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage::HitResult' has a wrong offset!");
static_assert(offsetof(BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage, bRealDamaged) == 0x000094, "Member 'BP_MiniGame_CactusGem_Base_C_ReceiveOnTakeDamage::bRealDamaged' has a wrong offset!");

}

