#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FishActorBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "QRSL_classes.hpp"
#include "HottaFramework_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FishActorBase.BP_FishActorBase_C
// 0x0160 (0x0FE0 - 0x0E80)
class ABP_FishActorBase_C : public AQRSLFishActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E80(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera2;                                           // 0x0E88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0E90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera1;                                           // 0x0E98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0EA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FInteractEntry                         Interact_Entry;                                    // 0x0EA8(0x00E0)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          DownSpring;                                        // 0x0F88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55FA[0x3];                                     // 0x0F89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotationY;                                         // 0x0F8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartRotationY;                                    // 0x0F90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndRotationY;                                      // 0x0F94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpSpring;                                          // 0x0F98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55FB[0x7];                                     // 0x0F99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             JumpCameraTransform;                               // 0x0FA0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bChangeLoc;                                        // 0x0FD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ReceiveBeginPlay();
	void BPSetJumpCamera(bool JumpCamera);
	void ReceiveTick(float DeltaSeconds);
	void SpringDown();
	void SpringUp();
	void BPStartSpringArm();
	void BPEventTick(float DeltaTime);
	void ExecuteUbergraph_BP_FishActorBase(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FishActorBase_C">();
	}
	static class ABP_FishActorBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FishActorBase_C>();
	}
};
static_assert(alignof(ABP_FishActorBase_C) == 0x000010, "Wrong alignment on ABP_FishActorBase_C");
static_assert(sizeof(ABP_FishActorBase_C) == 0x000FE0, "Wrong size on ABP_FishActorBase_C");
static_assert(offsetof(ABP_FishActorBase_C, UberGraphFrame) == 0x000E80, "Member 'ABP_FishActorBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, Camera2) == 0x000E88, "Member 'ABP_FishActorBase_C::Camera2' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, SpringArm) == 0x000E90, "Member 'ABP_FishActorBase_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, Camera1) == 0x000E98, "Member 'ABP_FishActorBase_C::Camera1' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, Arrow) == 0x000EA0, "Member 'ABP_FishActorBase_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, Interact_Entry) == 0x000EA8, "Member 'ABP_FishActorBase_C::Interact_Entry' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, DownSpring) == 0x000F88, "Member 'ABP_FishActorBase_C::DownSpring' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, RotationY) == 0x000F8C, "Member 'ABP_FishActorBase_C::RotationY' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, StartRotationY) == 0x000F90, "Member 'ABP_FishActorBase_C::StartRotationY' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, EndRotationY) == 0x000F94, "Member 'ABP_FishActorBase_C::EndRotationY' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, UpSpring) == 0x000F98, "Member 'ABP_FishActorBase_C::UpSpring' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, JumpCameraTransform) == 0x000FA0, "Member 'ABP_FishActorBase_C::JumpCameraTransform' has a wrong offset!");
static_assert(offsetof(ABP_FishActorBase_C, bChangeLoc) == 0x000FD0, "Member 'ABP_FishActorBase_C::bChangeLoc' has a wrong offset!");

}

