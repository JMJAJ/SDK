#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mon_ele_005

#include "Basic.hpp"

#include "HottaFramework_structs.hpp"


namespace SDK::Params
{

// Function mon_ele_005.mon_ele_005_C.ExecuteUbergraph_mon_ele_005
// 0x0090 (0x0090 - 0x0000)
struct Mon_ele_005_C_ExecuteUbergraph_mon_ele_005 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EElementalAreaType ElementalAreaType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EElementalAreaType ElementalAreaType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeatherState                                 K2Node_CustomEvent_NewWeather;                     // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRainWeather_ReturnValue;                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ApplyGameplayEffect_ReturnValue;          // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ApplyGameplayEffect_ReturnValue_1;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode_1;               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_579F[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAreaType                            K2Node_CustomEvent_ElementalAreaType_1;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EElementalAreaType                            K2Node_CustomEvent_ElementalAreaType;              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyGameplayEffect_ReturnValue_2;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57A0[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EWeatherState NewWeather)>     K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode_2;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57A1[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaPlayerCharacter*                  K2Node_Event_ByPlayer;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyGameplayEffect_ReturnValue_3;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57A2[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue_2; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode_3;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57A3[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_HitComp;                              // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue_3; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005) == 0x000008, "Wrong alignment on Mon_ele_005_C_ExecuteUbergraph_mon_ele_005");
static_assert(sizeof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005) == 0x000090, "Wrong size on Mon_ele_005_C_ExecuteUbergraph_mon_ele_005");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, EntryPoint) == 0x000000, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_CustomEvent_NewWeather) == 0x000025, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_CustomEvent_NewWeather' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_IsRainWeather_ReturnValue) == 0x000026, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_IsRainWeather_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_ApplyGameplayEffect_ReturnValue) == 0x000027, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_ApplyGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_SwitchNetMode_OutNetMode) == 0x000028, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_SwitchNetMode_OutNetMode' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_ApplyGameplayEffect_ReturnValue_1) == 0x00002A, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_ApplyGameplayEffect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_SwitchNetMode_OutNetMode_1) == 0x00002B, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_SwitchNetMode_OutNetMode_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_SwitchEnum_CmpSuccess_1) == 0x00002C, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_RemoveActiveEffectsWithTags_ReturnValue) == 0x000030, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_RemoveActiveEffectsWithTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_RemoveActiveEffectsWithTags_ReturnValue_1) == 0x000034, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_RemoveActiveEffectsWithTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_CustomEvent_ElementalAreaType_1) == 0x000038, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_CustomEvent_ElementalAreaType_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003A, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_CustomEvent_ElementalAreaType) == 0x00003B, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_CustomEvent_ElementalAreaType' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_ApplyGameplayEffect_ReturnValue_2) == 0x00003C, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_ApplyGameplayEffect_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_SwitchNetMode_OutNetMode_2) == 0x000050, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_SwitchNetMode_OutNetMode_2' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_SwitchEnum_CmpSuccess_2) == 0x000051, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_Event_ByPlayer) == 0x000058, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_Event_ByPlayer' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_ApplyGameplayEffect_ReturnValue_3) == 0x000060, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_ApplyGameplayEffect_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_RemoveActiveEffectsWithTags_ReturnValue_2) == 0x000064, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_RemoveActiveEffectsWithTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_SwitchNetMode_OutNetMode_3) == 0x000068, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_SwitchNetMode_OutNetMode_3' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_SwitchEnum_CmpSuccess_3) == 0x000069, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_Event_HitComp) == 0x000070, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_Event_HitComp' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_Event_OtherActor) == 0x000078, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, K2Node_Event_OtherComp) == 0x000080, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_RemoveActiveEffectsWithTags_ReturnValue_3) == 0x000088, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_RemoveActiveEffectsWithTags_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_ExecuteUbergraph_mon_ele_005, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00008C, "Member 'Mon_ele_005_C_ExecuteUbergraph_mon_ele_005::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function mon_ele_005.mon_ele_005_C.BPOnThrowingHit
// 0x0018 (0x0018 - 0x0000)
struct Mon_ele_005_C_BPOnThrowingHit final
{
public:
	class UPrimitiveComponent*                    HitComp;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_ele_005_C_BPOnThrowingHit) == 0x000008, "Wrong alignment on Mon_ele_005_C_BPOnThrowingHit");
static_assert(sizeof(Mon_ele_005_C_BPOnThrowingHit) == 0x000018, "Wrong size on Mon_ele_005_C_BPOnThrowingHit");
static_assert(offsetof(Mon_ele_005_C_BPOnThrowingHit, HitComp) == 0x000000, "Member 'Mon_ele_005_C_BPOnThrowingHit::HitComp' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_BPOnThrowingHit, OtherActor) == 0x000008, "Member 'Mon_ele_005_C_BPOnThrowingHit::OtherActor' has a wrong offset!");
static_assert(offsetof(Mon_ele_005_C_BPOnThrowingHit, OtherComp) == 0x000010, "Member 'Mon_ele_005_C_BPOnThrowingHit::OtherComp' has a wrong offset!");

// Function mon_ele_005.mon_ele_005_C.BPOnThrow
// 0x0008 (0x0008 - 0x0000)
struct Mon_ele_005_C_BPOnThrow final
{
public:
	class AHottaPlayerCharacter*                  ByPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_ele_005_C_BPOnThrow) == 0x000008, "Wrong alignment on Mon_ele_005_C_BPOnThrow");
static_assert(sizeof(Mon_ele_005_C_BPOnThrow) == 0x000008, "Wrong size on Mon_ele_005_C_BPOnThrow");
static_assert(offsetof(Mon_ele_005_C_BPOnThrow, ByPlayer) == 0x000000, "Member 'Mon_ele_005_C_BPOnThrow::ByPlayer' has a wrong offset!");

// Function mon_ele_005.mon_ele_005_C.LeaveAreaEffect
// 0x0001 (0x0001 - 0x0000)
struct Mon_ele_005_C_LeaveAreaEffect final
{
public:
	EElementalAreaType                            ElementalAreaType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_ele_005_C_LeaveAreaEffect) == 0x000001, "Wrong alignment on Mon_ele_005_C_LeaveAreaEffect");
static_assert(sizeof(Mon_ele_005_C_LeaveAreaEffect) == 0x000001, "Wrong size on Mon_ele_005_C_LeaveAreaEffect");
static_assert(offsetof(Mon_ele_005_C_LeaveAreaEffect, ElementalAreaType) == 0x000000, "Member 'Mon_ele_005_C_LeaveAreaEffect::ElementalAreaType' has a wrong offset!");

// Function mon_ele_005.mon_ele_005_C.ElementAreaEffect
// 0x0001 (0x0001 - 0x0000)
struct Mon_ele_005_C_ElementAreaEffect final
{
public:
	EElementalAreaType                            ElementalAreaType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_ele_005_C_ElementAreaEffect) == 0x000001, "Wrong alignment on Mon_ele_005_C_ElementAreaEffect");
static_assert(sizeof(Mon_ele_005_C_ElementAreaEffect) == 0x000001, "Wrong size on Mon_ele_005_C_ElementAreaEffect");
static_assert(offsetof(Mon_ele_005_C_ElementAreaEffect, ElementalAreaType) == 0x000000, "Member 'Mon_ele_005_C_ElementAreaEffect::ElementalAreaType' has a wrong offset!");

// Function mon_ele_005.mon_ele_005_C.WeatherEffect
// 0x0001 (0x0001 - 0x0000)
struct Mon_ele_005_C_WeatherEffect final
{
public:
	EWeatherState                                 NewWeather;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_ele_005_C_WeatherEffect) == 0x000001, "Wrong alignment on Mon_ele_005_C_WeatherEffect");
static_assert(sizeof(Mon_ele_005_C_WeatherEffect) == 0x000001, "Wrong size on Mon_ele_005_C_WeatherEffect");
static_assert(offsetof(Mon_ele_005_C_WeatherEffect, NewWeather) == 0x000000, "Member 'Mon_ele_005_C_WeatherEffect::NewWeather' has a wrong offset!");

}

