#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UIMiniMapContianer

#include "Basic.hpp"

#include "HottaFramework_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_UIMiniMapContianer.BP_UIMiniMapContianer_C.CollapsePCkey
// 0x0001 (0x0001 - 0x0000)
struct BP_UIMiniMapContianer_C_CollapsePCkey final
{
public:
	bool                                          CallFunc_IsLevelScene_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIMiniMapContianer_C_CollapsePCkey) == 0x000001, "Wrong alignment on BP_UIMiniMapContianer_C_CollapsePCkey");
static_assert(sizeof(BP_UIMiniMapContianer_C_CollapsePCkey) == 0x000001, "Wrong size on BP_UIMiniMapContianer_C_CollapsePCkey");
static_assert(offsetof(BP_UIMiniMapContianer_C_CollapsePCkey, CallFunc_IsLevelScene_ReturnValue) == 0x000000, "Member 'BP_UIMiniMapContianer_C_CollapsePCkey::CallFunc_IsLevelScene_ReturnValue' has a wrong offset!");

// Function BP_UIMiniMapContianer.BP_UIMiniMapContianer_C.CollapseImgFrame
// 0x0001 (0x0001 - 0x0000)
struct BP_UIMiniMapContianer_C_CollapseImgFrame final
{
public:
	bool                                          CallFunc_IsLevelScene_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIMiniMapContianer_C_CollapseImgFrame) == 0x000001, "Wrong alignment on BP_UIMiniMapContianer_C_CollapseImgFrame");
static_assert(sizeof(BP_UIMiniMapContianer_C_CollapseImgFrame) == 0x000001, "Wrong size on BP_UIMiniMapContianer_C_CollapseImgFrame");
static_assert(offsetof(BP_UIMiniMapContianer_C_CollapseImgFrame, CallFunc_IsLevelScene_ReturnValue) == 0x000000, "Member 'BP_UIMiniMapContianer_C_CollapseImgFrame::CallFunc_IsLevelScene_ReturnValue' has a wrong offset!");

// Function BP_UIMiniMapContianer.BP_UIMiniMapContianer_C.CollapseWeatherPreview
// 0x0003 (0x0003 - 0x0000)
struct BP_UIMiniMapContianer_C_CollapseWeatherPreview final
{
public:
	bool                                          CallFunc_IsLevelScene_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelScene_ReturnValue_1;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIMiniMapContianer_C_CollapseWeatherPreview) == 0x000001, "Wrong alignment on BP_UIMiniMapContianer_C_CollapseWeatherPreview");
static_assert(sizeof(BP_UIMiniMapContianer_C_CollapseWeatherPreview) == 0x000003, "Wrong size on BP_UIMiniMapContianer_C_CollapseWeatherPreview");
static_assert(offsetof(BP_UIMiniMapContianer_C_CollapseWeatherPreview, CallFunc_IsLevelScene_ReturnValue) == 0x000000, "Member 'BP_UIMiniMapContianer_C_CollapseWeatherPreview::CallFunc_IsLevelScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_CollapseWeatherPreview, CallFunc_IsLevelScene_ReturnValue_1) == 0x000001, "Member 'BP_UIMiniMapContianer_C_CollapseWeatherPreview::CallFunc_IsLevelScene_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_CollapseWeatherPreview, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_UIMiniMapContianer_C_CollapseWeatherPreview::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_UIMiniMapContianer.BP_UIMiniMapContianer_C.CollapseSurvivalGuidePanel
// 0x0005 (0x0005 - 0x0000)
struct BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel final
{
public:
	bool                                          CallFunc_IsLevelScene_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelScene_ReturnValue_1;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBreakFateMap_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel) == 0x000001, "Wrong alignment on BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel");
static_assert(sizeof(BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel) == 0x000005, "Wrong size on BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel");
static_assert(offsetof(BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel, CallFunc_IsLevelScene_ReturnValue) == 0x000000, "Member 'BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel::CallFunc_IsLevelScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel, CallFunc_IsLevelScene_ReturnValue_1) == 0x000001, "Member 'BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel::CallFunc_IsLevelScene_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel, CallFunc_IsBreakFateMap_ReturnValue) == 0x000002, "Member 'BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel::CallFunc_IsBreakFateMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel, CallFunc_BooleanOR_ReturnValue_1) == 0x000004, "Member 'BP_UIMiniMapContianer_C_CollapseSurvivalGuidePanel::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_UIMiniMapContianer.BP_UIMiniMapContianer_C.BndEvt__OpenMapButton_K2Node_ComponentBoundEvent_0_UIButtonDelegate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_UIMiniMapContianer_C_BndEvt__OpenMapButton_K2Node_ComponentBoundEvent_0_UIButtonDelegate__DelegateSignature final
{
public:
	class UWidget*                                BtnWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIMiniMapContianer_C_BndEvt__OpenMapButton_K2Node_ComponentBoundEvent_0_UIButtonDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_UIMiniMapContianer_C_BndEvt__OpenMapButton_K2Node_ComponentBoundEvent_0_UIButtonDelegate__DelegateSignature");
static_assert(sizeof(BP_UIMiniMapContianer_C_BndEvt__OpenMapButton_K2Node_ComponentBoundEvent_0_UIButtonDelegate__DelegateSignature) == 0x000008, "Wrong size on BP_UIMiniMapContianer_C_BndEvt__OpenMapButton_K2Node_ComponentBoundEvent_0_UIButtonDelegate__DelegateSignature");
static_assert(offsetof(BP_UIMiniMapContianer_C_BndEvt__OpenMapButton_K2Node_ComponentBoundEvent_0_UIButtonDelegate__DelegateSignature, BtnWidget) == 0x000000, "Member 'BP_UIMiniMapContianer_C_BndEvt__OpenMapButton_K2Node_ComponentBoundEvent_0_UIButtonDelegate__DelegateSignature::BtnWidget' has a wrong offset!");

// Function BP_UIMiniMapContianer.BP_UIMiniMapContianer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_UIMiniMapContianer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIMiniMapContianer_C_PreConstruct) == 0x000001, "Wrong alignment on BP_UIMiniMapContianer_C_PreConstruct");
static_assert(sizeof(BP_UIMiniMapContianer_C_PreConstruct) == 0x000001, "Wrong size on BP_UIMiniMapContianer_C_PreConstruct");
static_assert(offsetof(BP_UIMiniMapContianer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_UIMiniMapContianer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_UIMiniMapContianer.BP_UIMiniMapContianer_C.BPOnGamepadInputChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_UIMiniMapContianer_C_BPOnGamepadInputChanged final
{
public:
	bool                                          bGamepad;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIMiniMapContianer_C_BPOnGamepadInputChanged) == 0x000001, "Wrong alignment on BP_UIMiniMapContianer_C_BPOnGamepadInputChanged");
static_assert(sizeof(BP_UIMiniMapContianer_C_BPOnGamepadInputChanged) == 0x000001, "Wrong size on BP_UIMiniMapContianer_C_BPOnGamepadInputChanged");
static_assert(offsetof(BP_UIMiniMapContianer_C_BPOnGamepadInputChanged, bGamepad) == 0x000000, "Member 'BP_UIMiniMapContianer_C_BPOnGamepadInputChanged::bGamepad' has a wrong offset!");

// Function BP_UIMiniMapContianer.BP_UIMiniMapContianer_C.ExecuteUbergraph_BP_UIMiniMapContianer
// 0x00C0 (0x00C0 - 0x0000)
struct BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHottaPlatformType                            CallFunc_SwitchPlatform_OutPlatformType;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ___byte_Variable;                                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              ___byte_Variable_1;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              ___byte_Variable_2;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ___byte_Variable_3;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_1;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              ___byte_Variable_4;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ___byte_Variable_5;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_2;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              ___byte_Variable_6;                                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ___byte_Variable_7;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ___byte_Variable_8;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_3;                                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBreakFateMap_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              ___byte_Variable_9;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_4;                                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              ___byte_Variable_10;                               // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ___byte_Variable_11;                               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5630[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_ComponentBoundEvent_BtnWidget;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AQRSLPlayerController*                  CallFunc_GetPC_ReturnValue;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHottaUIBase*                           CallFunc_ShowUIByClass_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AQRSLPlayerController*                  CallFunc_GetPC_ReturnValue_1;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHottaUIBase*                           CallFunc_ShowUIByClass_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBreakFateMap_ReturnValue_1;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5631[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHottaLocalPlayer*                      CallFunc_GetLocalPlayer_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaPlayerCharacter*                  CallFunc_BP_GetPlayer_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameFunctionOpen_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Variable_5;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5632[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaPlayerCharacter*                  CallFunc_BP_GetPlayer_ReturnValue_1;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWorld*                                 CallFunc_K2_GetWorld_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5633[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHottaHandleOperationManager*           CallFunc_GetManager_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGamepadConnected_ReturnValue;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5634[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaPlayerCharacter*                  CallFunc_BP_GetPlayer_ReturnValue_2;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bGamepad;                             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5635[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 CallFunc_K2_GetWorld_ReturnValue_1;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5636[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHottaHandleOperationManager*           CallFunc_GetManager_ReturnValue_1;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGamepadConnected_ReturnValue_1;        // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBreakFateMap_ReturnValue_2;             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHottaPlatformType                            CallFunc_SwitchPlatform_OutPlatformType_1;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHottaPlatformType                            CallFunc_SwitchPlatform_OutPlatformType_2;         // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer) == 0x000008, "Wrong alignment on BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer");
static_assert(sizeof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer) == 0x0000C0, "Wrong size on BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, EntryPoint) == 0x000000, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_SwitchPlatform_OutPlatformType) == 0x000004, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_SwitchPlatform_OutPlatformType' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable) == 0x000005, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_1) == 0x000007, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___bool_Variable) == 0x000008, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_2) == 0x000009, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_3) == 0x00000A, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___bool_Variable_1) == 0x00000B, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_4) == 0x00000C, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_5) == 0x00000D, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___bool_Variable_2) == 0x00000E, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_6) == 0x00000F, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_7) == 0x000010, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_8) == 0x000011, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_Select_Default) == 0x000012, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___bool_Variable_3) == 0x000013, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_IsBreakFateMap_ReturnValue) == 0x000014, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_IsBreakFateMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_9) == 0x000015, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___bool_Variable_4) == 0x000016, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_10) == 0x000017, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_Select_Default_1) == 0x000018, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___byte_Variable_11) == 0x000019, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_ComponentBoundEvent_BtnWidget) == 0x000020, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_ComponentBoundEvent_BtnWidget' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_GetPC_ReturnValue) == 0x000028, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_GetPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_ShowUIByClass_ReturnValue) == 0x000030, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_ShowUIByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_GetPC_ReturnValue_1) == 0x000038, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_GetPC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_ShowUIByClass_ReturnValue_1) == 0x000040, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_ShowUIByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_IsBreakFateMap_ReturnValue_1) == 0x000048, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_IsBreakFateMap_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_GetLocalPlayer_ReturnValue) == 0x000050, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_GetLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_BP_GetPlayer_ReturnValue) == 0x000058, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_BP_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_IsGameFunctionOpen_ReturnValue) == 0x000060, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_IsGameFunctionOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_Event_IsDesignTime) == 0x000061, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, ___bool_Variable_5) == 0x000062, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::___bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_IsVisible_ReturnValue) == 0x000063, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_IsVisible_ReturnValue_1) == 0x000064, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000065, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_BP_GetPlayer_ReturnValue_1) == 0x000068, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_BP_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_K2_GetWorld_ReturnValue) == 0x000070, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_K2_GetWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_Select_Default_2) == 0x000078, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_GetManager_ReturnValue) == 0x000080, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_GetManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000089, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_GetGamepadConnected_ReturnValue) == 0x00008A, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_GetGamepadConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_Select_Default_3) == 0x00008B, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_Select_Default_4) == 0x00008C, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_BP_GetPlayer_ReturnValue_2) == 0x000090, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_BP_GetPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_Event_bGamepad) == 0x000098, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_Event_bGamepad' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_K2_GetWorld_ReturnValue_1) == 0x0000A0, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_K2_GetWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_IsValid_ReturnValue_2) == 0x0000A8, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_GetManager_ReturnValue_1) == 0x0000B0, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_GetManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_IsValid_ReturnValue_3) == 0x0000B8, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_GetGamepadConnected_ReturnValue_1) == 0x0000B9, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_GetGamepadConnected_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_IsBreakFateMap_ReturnValue_2) == 0x0000BA, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_IsBreakFateMap_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_Select_Default_5) == 0x0000BB, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_SwitchPlatform_OutPlatformType_1) == 0x0000BC, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_SwitchPlatform_OutPlatformType_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000BD, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, CallFunc_SwitchPlatform_OutPlatformType_2) == 0x0000BE, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::CallFunc_SwitchPlatform_OutPlatformType_2' has a wrong offset!");
static_assert(offsetof(BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000BF, "Member 'BP_UIMiniMapContianer_C_ExecuteUbergraph_BP_UIMiniMapContianer::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

}

