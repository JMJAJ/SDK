#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mon_lift_base

#include "Basic.hpp"

#include "HottaFramework_structs.hpp"


namespace SDK::Params
{

// Function mon_lift_base.mon_lift_base_C.ExecuteUbergraph_mon_lift_base
// 0x0078 (0x0078 - 0x0000)
struct Mon_lift_base_C_ExecuteUbergraph_mon_lift_base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaPlayerCharacter*                  K2Node_Event_ByPlayer_2;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaPlayerCharacter*                  K2Node_Event_ByPlayer_1;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaPlayerCharacter*                  K2Node_Event_ByPlayer;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58DA[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontageEx_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58DB[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58DC[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaAIController*                     K2Node_DynamicCast_AsHotta_AIController;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangeBossStage_ReturnValue;              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ApplyGameplayEffect_ReturnValue;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveGameplayEffect_ReturnValue;         // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ApplyGameplayEffect_ReturnValue_1;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58DD[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58DE[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontageEx_ReturnValue_1;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode_1;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode_2;               // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58DF[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NewStageIndex;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode_3;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHottaNetMode                                 CallFunc_SwitchNetMode_OutNetMode_4;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLifting_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopSimulatePhysics_ReturnValue;          // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base) == 0x000008, "Wrong alignment on Mon_lift_base_C_ExecuteUbergraph_mon_lift_base");
static_assert(sizeof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base) == 0x000078, "Wrong size on Mon_lift_base_C_ExecuteUbergraph_mon_lift_base");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, EntryPoint) == 0x000000, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_Event_ByPlayer_2) == 0x000008, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_Event_ByPlayer_2' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_Event_ByPlayer_1) == 0x000010, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_Event_ByPlayer_1' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_Event_ByPlayer) == 0x000018, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_Event_ByPlayer' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_PlayAnimMontageEx_ReturnValue) == 0x000024, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_PlayAnimMontageEx_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_DynamicCast_AsHotta_AIController) == 0x000040, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_DynamicCast_AsHotta_AIController' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_ChangeBossStage_ReturnValue) == 0x00004A, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_ChangeBossStage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_IsValid_ReturnValue_3) == 0x00004B, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_HasAuthority_ReturnValue_1) == 0x00004C, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_HasAuthority_ReturnValue_2) == 0x00004D, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_ApplyGameplayEffect_ReturnValue) == 0x00004E, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_ApplyGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_RemoveGameplayEffect_ReturnValue) == 0x00004F, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_RemoveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_ApplyGameplayEffect_ReturnValue_1) == 0x000050, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_ApplyGameplayEffect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_PlayAnimMontage_ReturnValue) == 0x000054, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_SwitchInteger_CmpSuccess) == 0x000058, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_PlayAnimMontageEx_ReturnValue_1) == 0x00005C, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_PlayAnimMontageEx_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_SwitchNetMode_OutNetMode) == 0x000060, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_SwitchNetMode_OutNetMode' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_SwitchEnum_CmpSuccess) == 0x000061, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_SwitchNetMode_OutNetMode_1) == 0x000062, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_SwitchNetMode_OutNetMode_1' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_SwitchNetMode_OutNetMode_2) == 0x000063, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_SwitchNetMode_OutNetMode_2' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_SwitchEnum_CmpSuccess_1) == 0x000064, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_SwitchEnum_CmpSuccess_2) == 0x000065, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_Event_NewStageIndex) == 0x000068, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_Event_NewStageIndex' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_SwitchNetMode_OutNetMode_3) == 0x00006C, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_SwitchNetMode_OutNetMode_3' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_SwitchInteger_CmpSuccess_1) == 0x00006D, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_SwitchEnum_CmpSuccess_3) == 0x00006E, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_HasAuthority_ReturnValue_3) == 0x00006F, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_SwitchNetMode_OutNetMode_4) == 0x000070, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_SwitchNetMode_OutNetMode_4' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, K2Node_SwitchEnum_CmpSuccess_4) == 0x000071, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_IsLifting_ReturnValue) == 0x000072, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_IsLifting_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mon_lift_base_C_ExecuteUbergraph_mon_lift_base, CallFunc_StopSimulatePhysics_ReturnValue) == 0x000073, "Member 'Mon_lift_base_C_ExecuteUbergraph_mon_lift_base::CallFunc_StopSimulatePhysics_ReturnValue' has a wrong offset!");

// Function mon_lift_base.mon_lift_base_C.BPOnBossStageChanged
// 0x0004 (0x0004 - 0x0000)
struct Mon_lift_base_C_BPOnBossStageChanged final
{
public:
	int32                                         NewStageIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_lift_base_C_BPOnBossStageChanged) == 0x000004, "Wrong alignment on Mon_lift_base_C_BPOnBossStageChanged");
static_assert(sizeof(Mon_lift_base_C_BPOnBossStageChanged) == 0x000004, "Wrong size on Mon_lift_base_C_BPOnBossStageChanged");
static_assert(offsetof(Mon_lift_base_C_BPOnBossStageChanged, NewStageIndex) == 0x000000, "Member 'Mon_lift_base_C_BPOnBossStageChanged::NewStageIndex' has a wrong offset!");

// Function mon_lift_base.mon_lift_base_C.BPOnLift
// 0x0008 (0x0008 - 0x0000)
struct Mon_lift_base_C_BPOnLift final
{
public:
	class AHottaPlayerCharacter*                  ByPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_lift_base_C_BPOnLift) == 0x000008, "Wrong alignment on Mon_lift_base_C_BPOnLift");
static_assert(sizeof(Mon_lift_base_C_BPOnLift) == 0x000008, "Wrong size on Mon_lift_base_C_BPOnLift");
static_assert(offsetof(Mon_lift_base_C_BPOnLift, ByPlayer) == 0x000000, "Member 'Mon_lift_base_C_BPOnLift::ByPlayer' has a wrong offset!");

// Function mon_lift_base.mon_lift_base_C.BPOnPutDown
// 0x0008 (0x0008 - 0x0000)
struct Mon_lift_base_C_BPOnPutDown final
{
public:
	class AHottaPlayerCharacter*                  ByPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_lift_base_C_BPOnPutDown) == 0x000008, "Wrong alignment on Mon_lift_base_C_BPOnPutDown");
static_assert(sizeof(Mon_lift_base_C_BPOnPutDown) == 0x000008, "Wrong size on Mon_lift_base_C_BPOnPutDown");
static_assert(offsetof(Mon_lift_base_C_BPOnPutDown, ByPlayer) == 0x000000, "Member 'Mon_lift_base_C_BPOnPutDown::ByPlayer' has a wrong offset!");

// Function mon_lift_base.mon_lift_base_C.BPOnThrow
// 0x0008 (0x0008 - 0x0000)
struct Mon_lift_base_C_BPOnThrow final
{
public:
	class AHottaPlayerCharacter*                  ByPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_lift_base_C_BPOnThrow) == 0x000008, "Wrong alignment on Mon_lift_base_C_BPOnThrow");
static_assert(sizeof(Mon_lift_base_C_BPOnThrow) == 0x000008, "Wrong size on Mon_lift_base_C_BPOnThrow");
static_assert(offsetof(Mon_lift_base_C_BPOnThrow, ByPlayer) == 0x000000, "Member 'Mon_lift_base_C_BPOnThrow::ByPlayer' has a wrong offset!");

}

