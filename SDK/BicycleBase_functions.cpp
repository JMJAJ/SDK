#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BicycleBase

#include "Basic.hpp"

#include "BicycleBase_classes.hpp"
#include "BicycleBase_parameters.hpp"


namespace SDK
{

// Function BicycleBase.BicycleBase_C.BP_CanDrawTrail
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DrawTrail                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABicycleBase_C::BP_CanDrawTrail(bool* DrawTrail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BicycleBase_C", "BP_CanDrawTrail");

	Params::BicycleBase_C_BP_CanDrawTrail Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DrawTrail != nullptr)
		*DrawTrail = Parms.DrawTrail;
}


// Function BicycleBase.BicycleBase_C.CalculateSkidDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         WheelForward                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         MarkDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABicycleBase_C::CalculateSkidDirection(const struct FVector& Velocity, const struct FRotator& WheelForward, struct FRotator* MarkDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BicycleBase_C", "CalculateSkidDirection");

	Params::BicycleBase_C_CalculateSkidDirection Parms{};

	Parms.Velocity = std::move(Velocity);
	Parms.WheelForward = std::move(WheelForward);

	UObject::ProcessEvent(Func, &Parms);

	if (MarkDirection != nullptr)
		*MarkDirection = std::move(Parms.MarkDirection);
}


// Function BicycleBase.BicycleBase_C.TryDrawBrakeTrail
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TyreDownLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABicycleBase_C::TryDrawBrakeTrail(const struct FVector& TyreDownLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BicycleBase_C", "TryDrawBrakeTrail");

	Params::BicycleBase_C_TryDrawBrakeTrail Parms{};

	Parms.TyreDownLocation = std::move(TyreDownLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BicycleBase.BicycleBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABicycleBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BicycleBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BicycleBase.BicycleBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABicycleBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BicycleBase_C", "ReceiveTick");

	Params::BicycleBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BicycleBase.BicycleBase_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABicycleBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BicycleBase_C", "ReceiveEndPlay");

	Params::BicycleBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BicycleBase.BicycleBase_C.ExecuteUbergraph_BicycleBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABicycleBase_C::ExecuteUbergraph_BicycleBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BicycleBase_C", "ExecuteUbergraph_BicycleBase");

	Params::BicycleBase_C_ExecuteUbergraph_BicycleBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

