#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MonsterAnimBP_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MonsterAnimBP_Base.MonsterAnimBP_Base_C.ExecuteUbergraph_MonsterAnimBP_Base
// 0x0004 (0x0004 - 0x0000)
struct MonsterAnimBP_Base_C_ExecuteUbergraph_MonsterAnimBP_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterAnimBP_Base_C_ExecuteUbergraph_MonsterAnimBP_Base) == 0x000004, "Wrong alignment on MonsterAnimBP_Base_C_ExecuteUbergraph_MonsterAnimBP_Base");
static_assert(sizeof(MonsterAnimBP_Base_C_ExecuteUbergraph_MonsterAnimBP_Base) == 0x000004, "Wrong size on MonsterAnimBP_Base_C_ExecuteUbergraph_MonsterAnimBP_Base");
static_assert(offsetof(MonsterAnimBP_Base_C_ExecuteUbergraph_MonsterAnimBP_Base, EntryPoint) == 0x000000, "Member 'MonsterAnimBP_Base_C_ExecuteUbergraph_MonsterAnimBP_Base::EntryPoint' has a wrong offset!");

// Function MonsterAnimBP_Base.MonsterAnimBP_Base_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct MonsterAnimBP_Base_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MonsterAnimBP_Base_C_AnimGraph) == 0x000008, "Wrong alignment on MonsterAnimBP_Base_C_AnimGraph");
static_assert(sizeof(MonsterAnimBP_Base_C_AnimGraph) == 0x000010, "Wrong size on MonsterAnimBP_Base_C_AnimGraph");
static_assert(offsetof(MonsterAnimBP_Base_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'MonsterAnimBP_Base_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function MonsterAnimBP_Base.MonsterAnimBP_Base_C.BoneShakeLayer
// 0x0028 (0x0028 - 0x0000)
struct MonsterAnimBP_Base_C_BoneShakeLayer final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         Param_PushScale;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_BlendAlpha;                                  // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPoseLink                              Param_BoneShakeLayer;                              // 0x0018(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MonsterAnimBP_Base_C_BoneShakeLayer) == 0x000008, "Wrong alignment on MonsterAnimBP_Base_C_BoneShakeLayer");
static_assert(sizeof(MonsterAnimBP_Base_C_BoneShakeLayer) == 0x000028, "Wrong size on MonsterAnimBP_Base_C_BoneShakeLayer");
static_assert(offsetof(MonsterAnimBP_Base_C_BoneShakeLayer, InPose) == 0x000000, "Member 'MonsterAnimBP_Base_C_BoneShakeLayer::InPose' has a wrong offset!");
static_assert(offsetof(MonsterAnimBP_Base_C_BoneShakeLayer, Param_PushScale) == 0x000010, "Member 'MonsterAnimBP_Base_C_BoneShakeLayer::Param_PushScale' has a wrong offset!");
static_assert(offsetof(MonsterAnimBP_Base_C_BoneShakeLayer, Param_BlendAlpha) == 0x000014, "Member 'MonsterAnimBP_Base_C_BoneShakeLayer::Param_BlendAlpha' has a wrong offset!");
static_assert(offsetof(MonsterAnimBP_Base_C_BoneShakeLayer, Param_BoneShakeLayer) == 0x000018, "Member 'MonsterAnimBP_Base_C_BoneShakeLayer::Param_BoneShakeLayer' has a wrong offset!");

// Function MonsterAnimBP_Base.MonsterAnimBP_Base_C.IKAnimationLayer
// 0x0028 (0x0028 - 0x0000)
struct MonsterAnimBP_Base_C_IKAnimationLayer final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         PowerIKAlpha;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5530[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              Param_IKAnimationLayer;                            // 0x0018(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MonsterAnimBP_Base_C_IKAnimationLayer) == 0x000008, "Wrong alignment on MonsterAnimBP_Base_C_IKAnimationLayer");
static_assert(sizeof(MonsterAnimBP_Base_C_IKAnimationLayer) == 0x000028, "Wrong size on MonsterAnimBP_Base_C_IKAnimationLayer");
static_assert(offsetof(MonsterAnimBP_Base_C_IKAnimationLayer, InPose) == 0x000000, "Member 'MonsterAnimBP_Base_C_IKAnimationLayer::InPose' has a wrong offset!");
static_assert(offsetof(MonsterAnimBP_Base_C_IKAnimationLayer, PowerIKAlpha) == 0x000010, "Member 'MonsterAnimBP_Base_C_IKAnimationLayer::PowerIKAlpha' has a wrong offset!");
static_assert(offsetof(MonsterAnimBP_Base_C_IKAnimationLayer, Param_IKAnimationLayer) == 0x000018, "Member 'MonsterAnimBP_Base_C_IKAnimationLayer::Param_IKAnimationLayer' has a wrong offset!");

}

