#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: H5UIWin

#include "Basic.hpp"


namespace SDK
{

// Enum H5UIWin.EH5UILogLevel
// NumValues: 0x0006
enum class EH5UILogLevel : uint8
{
	Verbose                                  = 0,
	Debug                                    = 1,
	Info                                     = 2,
	Warning                                  = 3,
	Error                                    = 4,
	EH5UILogLevel_MAX                        = 5,
};

// ScriptStruct H5UIWin.H5UIShareInfo
// 0x0060 (0x0060 - 0x0000)
struct FH5UIShareInfo final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppID;                                             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Content;                                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Link;                                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Image;                                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FH5UIShareInfo) == 0x000008, "Wrong alignment on FH5UIShareInfo");
static_assert(sizeof(FH5UIShareInfo) == 0x000060, "Wrong size on FH5UIShareInfo");
static_assert(offsetof(FH5UIShareInfo, Channel) == 0x000000, "Member 'FH5UIShareInfo::Channel' has a wrong offset!");
static_assert(offsetof(FH5UIShareInfo, AppID) == 0x000010, "Member 'FH5UIShareInfo::AppID' has a wrong offset!");
static_assert(offsetof(FH5UIShareInfo, Content) == 0x000020, "Member 'FH5UIShareInfo::Content' has a wrong offset!");
static_assert(offsetof(FH5UIShareInfo, Link) == 0x000030, "Member 'FH5UIShareInfo::Link' has a wrong offset!");
static_assert(offsetof(FH5UIShareInfo, Image) == 0x000040, "Member 'FH5UIShareInfo::Image' has a wrong offset!");
static_assert(offsetof(FH5UIShareInfo, URL) == 0x000050, "Member 'FH5UIShareInfo::URL' has a wrong offset!");

// ScriptStruct H5UIWin.H5UILoggerInfo
// 0x00A8 (0x00A8 - 0x0000)
struct FH5UILoggerInfo final
{
public:
	int64                                         Timestamp;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Level;                                             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 File;                                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Line;                                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_188D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Function;                                          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Sence;                                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_188E[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Pid;                                               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Uid;                                               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Did;                                               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Os;                                                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Role;                                              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FH5UILoggerInfo) == 0x000008, "Wrong alignment on FH5UILoggerInfo");
static_assert(sizeof(FH5UILoggerInfo) == 0x0000A8, "Wrong size on FH5UILoggerInfo");
static_assert(offsetof(FH5UILoggerInfo, Timestamp) == 0x000000, "Member 'FH5UILoggerInfo::Timestamp' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, Level) == 0x000008, "Member 'FH5UILoggerInfo::Level' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, File) == 0x000018, "Member 'FH5UILoggerInfo::File' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, Line) == 0x000028, "Member 'FH5UILoggerInfo::Line' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, Function) == 0x000030, "Member 'FH5UILoggerInfo::Function' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, Sence) == 0x000040, "Member 'FH5UILoggerInfo::Sence' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, Message) == 0x000048, "Member 'FH5UILoggerInfo::Message' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, Pid) == 0x000058, "Member 'FH5UILoggerInfo::Pid' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, Uid) == 0x000068, "Member 'FH5UILoggerInfo::Uid' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, Did) == 0x000078, "Member 'FH5UILoggerInfo::Did' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, Os) == 0x000088, "Member 'FH5UILoggerInfo::Os' has a wrong offset!");
static_assert(offsetof(FH5UILoggerInfo, Role) == 0x000098, "Member 'FH5UILoggerInfo::Role' has a wrong offset!");

// ScriptStruct H5UIWin.H5UIBasicConfigure
// 0x00D0 (0x00D0 - 0x0000)
struct FH5UIBasicConfigure final
{
public:
	class FString                                 ServerAddress;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Version;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GameId;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeviceID;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ChannelID;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Role;                                              // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Area;                                              // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Os;                                                // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Seq;                                               // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoggerServer;                                      // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_188F[0x10];                                    // 0x00C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FH5UIBasicConfigure) == 0x000008, "Wrong alignment on FH5UIBasicConfigure");
static_assert(sizeof(FH5UIBasicConfigure) == 0x0000D0, "Wrong size on FH5UIBasicConfigure");
static_assert(offsetof(FH5UIBasicConfigure, ServerAddress) == 0x000000, "Member 'FH5UIBasicConfigure::ServerAddress' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, Version) == 0x000010, "Member 'FH5UIBasicConfigure::Version' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, GameId) == 0x000020, "Member 'FH5UIBasicConfigure::GameId' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, DeviceID) == 0x000030, "Member 'FH5UIBasicConfigure::DeviceID' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, ChannelID) == 0x000040, "Member 'FH5UIBasicConfigure::ChannelID' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, UserId) == 0x000050, "Member 'FH5UIBasicConfigure::UserId' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, Role) == 0x000060, "Member 'FH5UIBasicConfigure::Role' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, Area) == 0x000070, "Member 'FH5UIBasicConfigure::Area' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, Os) == 0x000080, "Member 'FH5UIBasicConfigure::Os' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, Seq) == 0x000090, "Member 'FH5UIBasicConfigure::Seq' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, Token) == 0x0000A0, "Member 'FH5UIBasicConfigure::Token' has a wrong offset!");
static_assert(offsetof(FH5UIBasicConfigure, LoggerServer) == 0x0000B0, "Member 'FH5UIBasicConfigure::LoggerServer' has a wrong offset!");

// ScriptStruct H5UIWin.H5UICacheEntry
// 0x0078 (0x0078 - 0x0000)
struct FH5UICacheEntry final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FileHash;                                          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ExpirationTime;                                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            MetaData;                                          // 0x0028(0x0050)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FH5UICacheEntry) == 0x000008, "Wrong alignment on FH5UICacheEntry");
static_assert(sizeof(FH5UICacheEntry) == 0x000078, "Wrong size on FH5UICacheEntry");
static_assert(offsetof(FH5UICacheEntry, Filename) == 0x000000, "Member 'FH5UICacheEntry::Filename' has a wrong offset!");
static_assert(offsetof(FH5UICacheEntry, FileHash) == 0x000010, "Member 'FH5UICacheEntry::FileHash' has a wrong offset!");
static_assert(offsetof(FH5UICacheEntry, ExpirationTime) == 0x000020, "Member 'FH5UICacheEntry::ExpirationTime' has a wrong offset!");
static_assert(offsetof(FH5UICacheEntry, MetaData) == 0x000028, "Member 'FH5UICacheEntry::MetaData' has a wrong offset!");

// ScriptStruct H5UIWin.H5UICacheMeta
// 0x0050 (0x0050 - 0x0000)
struct FH5UICacheMeta final
{
public:
	TMap<class FString, struct FH5UICacheEntry>   DiskCache;                                         // 0x0000(0x0050)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FH5UICacheMeta) == 0x000008, "Wrong alignment on FH5UICacheMeta");
static_assert(sizeof(FH5UICacheMeta) == 0x000050, "Wrong size on FH5UICacheMeta");
static_assert(offsetof(FH5UICacheMeta, DiskCache) == 0x000000, "Member 'FH5UICacheMeta::DiskCache' has a wrong offset!");

// ScriptStruct H5UIWin.H5UIConfigure
// 0x0050 (0x0050 - 0x0000)
struct FH5UIConfigure final
{
public:
	bool                                          Prerender;                                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1890[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Index;                                             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoggerEndpoint;                                    // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoggerLevel;                                       // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BackgroundColor;                                   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReserveStatusBar;                                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisableHitAnimation;                               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1891[0x6];                                     // 0x004A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FH5UIConfigure) == 0x000008, "Wrong alignment on FH5UIConfigure");
static_assert(sizeof(FH5UIConfigure) == 0x000050, "Wrong size on FH5UIConfigure");
static_assert(offsetof(FH5UIConfigure, Prerender) == 0x000000, "Member 'FH5UIConfigure::Prerender' has a wrong offset!");
static_assert(offsetof(FH5UIConfigure, Index) == 0x000008, "Member 'FH5UIConfigure::Index' has a wrong offset!");
static_assert(offsetof(FH5UIConfigure, LoggerEndpoint) == 0x000018, "Member 'FH5UIConfigure::LoggerEndpoint' has a wrong offset!");
static_assert(offsetof(FH5UIConfigure, LoggerLevel) == 0x000028, "Member 'FH5UIConfigure::LoggerLevel' has a wrong offset!");
static_assert(offsetof(FH5UIConfigure, BackgroundColor) == 0x000038, "Member 'FH5UIConfigure::BackgroundColor' has a wrong offset!");
static_assert(offsetof(FH5UIConfigure, ReserveStatusBar) == 0x000048, "Member 'FH5UIConfigure::ReserveStatusBar' has a wrong offset!");
static_assert(offsetof(FH5UIConfigure, DisableHitAnimation) == 0x000049, "Member 'FH5UIConfigure::DisableHitAnimation' has a wrong offset!");

// ScriptStruct H5UIWin.H5UICacheFileItem
// 0x0028 (0x0028 - 0x0000)
struct FH5UICacheFileItem final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Hash;                                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Expire;                                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FH5UICacheFileItem) == 0x000008, "Wrong alignment on FH5UICacheFileItem");
static_assert(sizeof(FH5UICacheFileItem) == 0x000028, "Wrong size on FH5UICacheFileItem");
static_assert(offsetof(FH5UICacheFileItem, URL) == 0x000000, "Member 'FH5UICacheFileItem::URL' has a wrong offset!");
static_assert(offsetof(FH5UICacheFileItem, Hash) == 0x000010, "Member 'FH5UICacheFileItem::Hash' has a wrong offset!");
static_assert(offsetof(FH5UICacheFileItem, Expire) == 0x000020, "Member 'FH5UICacheFileItem::Expire' has a wrong offset!");

// ScriptStruct H5UIWin.H5UITaskConfigure
// 0x00B0 (0x00B0 - 0x0000)
struct FH5UITaskConfigure final
{
public:
	class FString                                 Command;                                           // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReserveCount;                                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1892[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Expire;                                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Urls;                                              // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int64                                         ActualSize;                                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Domain;                                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FH5UICacheFileItem>             Files;                                             // 0x0058(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 Hash;                                              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Size;                                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AllowAnonymous;                                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1893[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Stage;                                             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReserveSize;                                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReserveAge;                                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FH5UITaskConfigure) == 0x000008, "Wrong alignment on FH5UITaskConfigure");
static_assert(sizeof(FH5UITaskConfigure) == 0x0000B0, "Wrong size on FH5UITaskConfigure");
static_assert(offsetof(FH5UITaskConfigure, Command) == 0x000000, "Member 'FH5UITaskConfigure::Command' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, Name) == 0x000010, "Member 'FH5UITaskConfigure::Name' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, ReserveCount) == 0x000020, "Member 'FH5UITaskConfigure::ReserveCount' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, Expire) == 0x000028, "Member 'FH5UITaskConfigure::Expire' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, Urls) == 0x000030, "Member 'FH5UITaskConfigure::Urls' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, ActualSize) == 0x000040, "Member 'FH5UITaskConfigure::ActualSize' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, Domain) == 0x000048, "Member 'FH5UITaskConfigure::Domain' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, Files) == 0x000058, "Member 'FH5UITaskConfigure::Files' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, Hash) == 0x000068, "Member 'FH5UITaskConfigure::Hash' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, Size) == 0x000078, "Member 'FH5UITaskConfigure::Size' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, URL) == 0x000080, "Member 'FH5UITaskConfigure::URL' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, AllowAnonymous) == 0x000090, "Member 'FH5UITaskConfigure::AllowAnonymous' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, Stage) == 0x000098, "Member 'FH5UITaskConfigure::Stage' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, ReserveSize) == 0x0000A8, "Member 'FH5UITaskConfigure::ReserveSize' has a wrong offset!");
static_assert(offsetof(FH5UITaskConfigure, ReserveAge) == 0x0000AC, "Member 'FH5UITaskConfigure::ReserveAge' has a wrong offset!");

// ScriptStruct H5UIWin.H5UIManifestConfigure
// 0x0068 (0x0068 - 0x0000)
struct FH5UIManifestConfigure final
{
public:
	int32                                         Version;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1894[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FH5UIConfigure                         Configure;                                         // 0x0008(0x0050)(NativeAccessSpecifierPublic)
	TArray<struct FH5UITaskConfigure>             Tasks;                                             // 0x0058(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FH5UIManifestConfigure) == 0x000008, "Wrong alignment on FH5UIManifestConfigure");
static_assert(sizeof(FH5UIManifestConfigure) == 0x000068, "Wrong size on FH5UIManifestConfigure");
static_assert(offsetof(FH5UIManifestConfigure, Version) == 0x000000, "Member 'FH5UIManifestConfigure::Version' has a wrong offset!");
static_assert(offsetof(FH5UIManifestConfigure, Configure) == 0x000008, "Member 'FH5UIManifestConfigure::Configure' has a wrong offset!");
static_assert(offsetof(FH5UIManifestConfigure, Tasks) == 0x000058, "Member 'FH5UIManifestConfigure::Tasks' has a wrong offset!");

// ScriptStruct H5UIWin.H5UIServerAPIResponse
// 0x0080 (0x0080 - 0x0000)
struct FH5UIServerAPIResponse final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1895[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FH5UIManifestConfigure                 Data;                                              // 0x0018(0x0068)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FH5UIServerAPIResponse) == 0x000008, "Wrong alignment on FH5UIServerAPIResponse");
static_assert(sizeof(FH5UIServerAPIResponse) == 0x000080, "Wrong size on FH5UIServerAPIResponse");
static_assert(offsetof(FH5UIServerAPIResponse, Code) == 0x000000, "Member 'FH5UIServerAPIResponse::Code' has a wrong offset!");
static_assert(offsetof(FH5UIServerAPIResponse, Message) == 0x000008, "Member 'FH5UIServerAPIResponse::Message' has a wrong offset!");
static_assert(offsetof(FH5UIServerAPIResponse, Data) == 0x000018, "Member 'FH5UIServerAPIResponse::Data' has a wrong offset!");

}

