#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AsukaATFieldLimitMult

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HottaFramework_structs.hpp"


namespace SDK::Params
{

// Function AsukaATFieldLimitMult.AsukaATFieldLimitMult_C.HottaCalculateBaseMagnitude
// 0x0050 (0x0050 - 0x0000)
struct AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude final
{
public:
	const class AActor*                           OwnerActor;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           HitActor;                                          // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           InstigatorActor;                                   // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569E[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569F[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaPlayerCharacter*                  K2Node_DynamicCast_AsHotta_Player_Character;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponOccupation                             CallFunc_GetCurrentActiveWeaponOccupation_ReturnValue; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_HaveGameplayEffectWithClass_ReturnValue; // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_1;        // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56A0[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBalanceServerMode_ReturnValue;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_2;        // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56A1[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBalanceServerMode_ReturnValue_1;        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_3;        // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56A2[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_3;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude) == 0x000008, "Wrong alignment on AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude");
static_assert(sizeof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude) == 0x000050, "Wrong size on AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, OwnerActor) == 0x000000, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::OwnerActor' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, HitActor) == 0x000008, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::HitActor' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, InstigatorActor) == 0x000010, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::InstigatorActor' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, ReturnValue) == 0x000018, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::ReturnValue' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_EvaluateCurveTableRow_OutResult) == 0x00001C, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000020, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, K2Node_DynamicCast_AsHotta_Player_Character) == 0x000028, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::K2Node_DynamicCast_AsHotta_Player_Character' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_GetCurrentActiveWeaponOccupation_ReturnValue) == 0x000031, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_GetCurrentActiveWeaponOccupation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_K2_HaveGameplayEffectWithClass_ReturnValue) == 0x000033, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_K2_HaveGameplayEffectWithClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_EvaluateCurveTableRow_OutResult_1) == 0x000036, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_EvaluateCurveTableRow_OutResult_1' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_EvaluateCurveTableRow_OutXY_1) == 0x000038, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_EvaluateCurveTableRow_OutXY_1' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, K2Node_SwitchEnum_CmpSuccess_1) == 0x00003C, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_IsBalanceServerMode_ReturnValue) == 0x00003D, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_IsBalanceServerMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_EvaluateCurveTableRow_OutResult_2) == 0x00003E, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_EvaluateCurveTableRow_OutResult_2' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_EvaluateCurveTableRow_OutXY_2) == 0x000040, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_EvaluateCurveTableRow_OutXY_2' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, K2Node_SwitchEnum_CmpSuccess_2) == 0x000044, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_IsBalanceServerMode_ReturnValue_1) == 0x000045, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_IsBalanceServerMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_EvaluateCurveTableRow_OutResult_3) == 0x000046, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_EvaluateCurveTableRow_OutResult_3' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, CallFunc_EvaluateCurveTableRow_OutXY_3) == 0x000048, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::CallFunc_EvaluateCurveTableRow_OutXY_3' has a wrong offset!");
static_assert(offsetof(AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude, K2Node_SwitchEnum_CmpSuccess_3) == 0x00004C, "Member 'AsukaATFieldLimitMult_C_HottaCalculateBaseMagnitude::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");

}

