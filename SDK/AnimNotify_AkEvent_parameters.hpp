#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotify_AkEvent

#include "Basic.hpp"


namespace SDK::Params
{

// Function AnimNotify_AkEvent.AnimNotify_AkEvent_C.Received_Notify
// 0x0030 (0x0030 - 0x0000)
struct AnimNotify_AkEvent_C_Received_Notify final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5602[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          TriggerEvent;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimNotify_AkEvent_C_Received_Notify) == 0x000008, "Wrong alignment on AnimNotify_AkEvent_C_Received_Notify");
static_assert(sizeof(AnimNotify_AkEvent_C_Received_Notify) == 0x000030, "Wrong size on AnimNotify_AkEvent_C_Received_Notify");
static_assert(offsetof(AnimNotify_AkEvent_C_Received_Notify, MeshComp) == 0x000000, "Member 'AnimNotify_AkEvent_C_Received_Notify::MeshComp' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEvent_C_Received_Notify, Animation) == 0x000008, "Member 'AnimNotify_AkEvent_C_Received_Notify::Animation' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEvent_C_Received_Notify, ReturnValue) == 0x000010, "Member 'AnimNotify_AkEvent_C_Received_Notify::ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEvent_C_Received_Notify, TriggerEvent) == 0x000018, "Member 'AnimNotify_AkEvent_C_Received_Notify::TriggerEvent' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEvent_C_Received_Notify, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'AnimNotify_AkEvent_C_Received_Notify::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEvent_C_Received_Notify, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000028, "Member 'AnimNotify_AkEvent_C_Received_Notify::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");

}

