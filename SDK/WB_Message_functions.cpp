#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Message

#include "Basic.hpp"

#include "WB_Message_classes.hpp"
#include "WB_Message_parameters.hpp"


namespace SDK
{

// Function WB_Message.WB_Message_C.ExecuteUbergraph_WB_Message
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Message_C::ExecuteUbergraph_WB_Message(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "ExecuteUbergraph_WB_Message");

	Params::WB_Message_C_ExecuteUbergraph_WB_Message Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Message.WB_Message_C.BP_StopBroadcastMsg
// (Event, Protected, BlueprintEvent)

void UWB_Message_C::BP_StopBroadcastMsg()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "BP_StopBroadcastMsg");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Message.WB_Message_C.BP_ShowBroadcastMsg
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InContent                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Interval                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Message_C::BP_ShowBroadcastMsg(const class FText& InContent, int32 Interval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "BP_ShowBroadcastMsg");

	Params::WB_Message_C_BP_ShowBroadcastMsg Parms{};

	Parms.InContent = std::move(InContent);
	Parms.Interval = Interval;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Message.WB_Message_C.AddSystemMessage_1
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             MessageText                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_Message_C::AddSystemMessage_1(const class FText& MessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "AddSystemMessage_1");

	Params::WB_Message_C_AddSystemMessage_1 Parms{};

	Parms.MessageText = std::move(MessageText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Message.WB_Message_C.AddNoticeMessage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             MessageText                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EUIMessageEffectType                    EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Message_C::AddNoticeMessage(const class FText& MessageText, EUIMessageEffectType EffectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "AddNoticeMessage");

	Params::WB_Message_C_AddNoticeMessage Parms{};

	Parms.MessageText = std::move(MessageText);
	Parms.EffectType = EffectType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Message.WB_Message_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Message_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "Tick");

	Params::WB_Message_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Message.WB_Message_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_Message_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Message.WB_Message_C.OnSystemMessageFadeOutFinish
// (BlueprintCallable, BlueprintEvent)

void UWB_Message_C::OnSystemMessageFadeOutFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "OnSystemMessageFadeOutFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Message.WB_Message_C.SpawnSystemMessageItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_Message_C::SpawnSystemMessageItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "SpawnSystemMessageItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Message.WB_Message_C.ScrollSystemMessage
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_Message_C::ScrollSystemMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "ScrollSystemMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Message.WB_Message_C.CreateEmptySystemMessageItem
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_Message_C::CreateEmptySystemMessageItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "CreateEmptySystemMessageItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Message.WB_Message_C.SystemMessageTick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void()>                       Delegate                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)

void UWB_Message_C::SystemMessageTick(const TDelegate<void()>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "SystemMessageTick");

	Params::WB_Message_C_SystemMessageTick Parms{};

	Parms.Delegate = Delegate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Message.WB_Message_C.PlayBroadcastMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDeltaSec                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Message_C::PlayBroadcastMessage(float InDeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Message_C", "PlayBroadcastMessage");

	Params::WB_Message_C_PlayBroadcastMessage Parms{};

	Parms.InDeltaSec = InDeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}

}

