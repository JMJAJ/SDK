#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicGravityCharacter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum DynamicGravityCharacter.EViewRotationBaseMode
// NumValues: 0x0008
enum class EViewRotationBaseMode : uint8
{
	VRM_Gravity                              = 0,
	VRM_WorldGravity                         = 1,
	VRM_DynamicGravity                       = 2,
	VRM_VerticalDirection                    = 3,
	VRM_CharacterRotation                    = 4,
	VRM_ControlRotation                      = 5,
	VRM_Custom                               = 6,
	VRM_MAX                                  = 7,
};

// Enum DynamicGravityCharacter.EPhysicsRotationVerticalDirectionMode
// NumValues: 0x0006
enum class EPhysicsRotationVerticalDirectionMode : uint8
{
	PRVDM_Gravity                            = 0,
	PRVDM_WorldGravity                       = 1,
	PRVDM_DynamicGravity                     = 2,
	PRVDM_VerticalDirection                  = 3,
	PRVDM_Custom                             = 4,
	PRVDM_MAX                                = 5,
};

// Enum DynamicGravityCharacter.EJumpDirectionMode
// NumValues: 0x0006
enum class EJumpDirectionMode : uint8
{
	JDM_Gravity                              = 0,
	JDM_WorldGravity                         = 1,
	JDM_DynamicGravity                       = 2,
	JDM_VerticalDirection                    = 3,
	JDM_Custom                               = 4,
	JDM_MAX                                  = 5,
};

// Enum DynamicGravityCharacter.EWalkableFloorNormalMode
// NumValues: 0x0008
enum class EWalkableFloorNormalMode : uint8
{
	WFN_Gravity                              = 0,
	WFN_WorldGravity                         = 1,
	WFN_DynamicGravity                       = 2,
	WFN_CharacterRotation                    = 3,
	WFN_FloorImpactNormal                    = 4,
	WFN_NoFloor                              = 5,
	WFN_Custom                               = 6,
	WFN_MAX                                  = 7,
};

// ScriptStruct DynamicGravityCharacter.HorizontalAndVerticalVelocities
// 0x0018 (0x0018 - 0x0000)
struct DynamicGravityCharacter::FHorizontalAndVerticalVelocities final
{
public:
	struct FVector                                HorizontalVelocity;                                // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VerticalVelocity;                                  // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicGravityCharacter::FHorizontalAndVerticalVelocities) == 0x000004, "Wrong alignment on DynamicGravityCharacter::FHorizontalAndVerticalVelocities");
static_assert(sizeof(DynamicGravityCharacter::FHorizontalAndVerticalVelocities) == 0x000018, "Wrong size on DynamicGravityCharacter::FHorizontalAndVerticalVelocities");
static_assert(offsetof(DynamicGravityCharacter::FHorizontalAndVerticalVelocities, HorizontalVelocity) == 0x000000, "Member 'DynamicGravityCharacter::FHorizontalAndVerticalVelocities::HorizontalVelocity' has a wrong offset!");
static_assert(offsetof(DynamicGravityCharacter::FHorizontalAndVerticalVelocities, VerticalVelocity) == 0x00000C, "Member 'DynamicGravityCharacter::FHorizontalAndVerticalVelocities::VerticalVelocity' has a wrong offset!");

}

