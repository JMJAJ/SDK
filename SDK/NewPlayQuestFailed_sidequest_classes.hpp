#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NewPlayQuestFailed_sidequest

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "HottaFramework_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass NewPlayQuestFailed_sidequest.NewPlayQuestFailed_sidequest_C
// 0x0028 (0x0268 - 0x0240)
class ANewPlayQuestFailed_sidequest_C final : public ATriggerBox
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class FName>                           QuestArray;                                        // 0x0248(0x0010)(Edit, BlueprintVisible)
	bool                                          IsNeedEnterGroupLevel;                             // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5686[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GroupLevelId;                                      // 0x025C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DonotFade;                                         // 0x0264(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkipFailedQuest;                                   // 0x0265(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_NewPlayQuestFailed_sidequest(int32 EntryPoint);
	void TrackQusetChange(const class FName& QuestID, bool bCustom);
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NewPlayQuestFailed_sidequest_C">();
	}
	static class ANewPlayQuestFailed_sidequest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANewPlayQuestFailed_sidequest_C>();
	}
};
static_assert(alignof(ANewPlayQuestFailed_sidequest_C) == 0x000008, "Wrong alignment on ANewPlayQuestFailed_sidequest_C");
static_assert(sizeof(ANewPlayQuestFailed_sidequest_C) == 0x000268, "Wrong size on ANewPlayQuestFailed_sidequest_C");
static_assert(offsetof(ANewPlayQuestFailed_sidequest_C, UberGraphFrame) == 0x000240, "Member 'ANewPlayQuestFailed_sidequest_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ANewPlayQuestFailed_sidequest_C, QuestArray) == 0x000248, "Member 'ANewPlayQuestFailed_sidequest_C::QuestArray' has a wrong offset!");
static_assert(offsetof(ANewPlayQuestFailed_sidequest_C, IsNeedEnterGroupLevel) == 0x000258, "Member 'ANewPlayQuestFailed_sidequest_C::IsNeedEnterGroupLevel' has a wrong offset!");
static_assert(offsetof(ANewPlayQuestFailed_sidequest_C, GroupLevelId) == 0x00025C, "Member 'ANewPlayQuestFailed_sidequest_C::GroupLevelId' has a wrong offset!");
static_assert(offsetof(ANewPlayQuestFailed_sidequest_C, DonotFade) == 0x000264, "Member 'ANewPlayQuestFailed_sidequest_C::DonotFade' has a wrong offset!");
static_assert(offsetof(ANewPlayQuestFailed_sidequest_C, SkipFailedQuest) == 0x000265, "Member 'ANewPlayQuestFailed_sidequest_C::SkipFailedQuest' has a wrong offset!");

}

