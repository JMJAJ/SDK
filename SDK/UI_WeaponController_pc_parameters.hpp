#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WeaponController_pc

#include "Basic.hpp"


namespace SDK::Params
{

// Function UI_WeaponController_pc.UI_WeaponController_pc_C.ExecuteUbergraph_UI_WeaponController_pc
// 0x0038 (0x0038 - 0x0000)
struct UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57F5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_SpawnAkComponentAtLocation_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_SpawnAkComponentAtLocation_ReturnValue_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 K2Node_CustomEvent_AnimationIn0;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 K2Node_CustomEvent_AnimationIn1;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bGamepad;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57F6[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ButtonIndex;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_WeaponSlot;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc) == 0x000008, "Wrong alignment on UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc");
static_assert(sizeof(UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc) == 0x000038, "Wrong size on UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc");
static_assert(offsetof(UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc, EntryPoint) == 0x000000, "Member 'UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc, CallFunc_SpawnAkComponentAtLocation_ReturnValue) == 0x000008, "Member 'UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc::CallFunc_SpawnAkComponentAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc, CallFunc_SpawnAkComponentAtLocation_ReturnValue_1) == 0x000010, "Member 'UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc::CallFunc_SpawnAkComponentAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc, K2Node_CustomEvent_AnimationIn0) == 0x000018, "Member 'UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc::K2Node_CustomEvent_AnimationIn0' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc, K2Node_CustomEvent_AnimationIn1) == 0x000020, "Member 'UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc::K2Node_CustomEvent_AnimationIn1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc, K2Node_Event_bGamepad) == 0x000028, "Member 'UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc::K2Node_Event_bGamepad' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc, K2Node_Event_ButtonIndex) == 0x00002C, "Member 'UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc::K2Node_Event_ButtonIndex' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc, K2Node_Event_WeaponSlot) == 0x000030, "Member 'UI_WeaponController_pc_C_ExecuteUbergraph_UI_WeaponController_pc::K2Node_Event_WeaponSlot' has a wrong offset!");

// Function UI_WeaponController_pc.UI_WeaponController_pc_C.ChangeWeaponShortcutKey
// 0x0008 (0x0008 - 0x0000)
struct UI_WeaponController_pc_C_ChangeWeaponShortcutKey final
{
public:
	int32                                         ButtonIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WeaponSlot;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeaponController_pc_C_ChangeWeaponShortcutKey) == 0x000004, "Wrong alignment on UI_WeaponController_pc_C_ChangeWeaponShortcutKey");
static_assert(sizeof(UI_WeaponController_pc_C_ChangeWeaponShortcutKey) == 0x000008, "Wrong size on UI_WeaponController_pc_C_ChangeWeaponShortcutKey");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeWeaponShortcutKey, ButtonIndex) == 0x000000, "Member 'UI_WeaponController_pc_C_ChangeWeaponShortcutKey::ButtonIndex' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeWeaponShortcutKey, WeaponSlot) == 0x000004, "Member 'UI_WeaponController_pc_C_ChangeWeaponShortcutKey::WeaponSlot' has a wrong offset!");

// Function UI_WeaponController_pc.UI_WeaponController_pc_C.BPOnGamepadInputChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_WeaponController_pc_C_BPOnGamepadInputChanged final
{
public:
	bool                                          bGamepad;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WeaponController_pc_C_BPOnGamepadInputChanged) == 0x000001, "Wrong alignment on UI_WeaponController_pc_C_BPOnGamepadInputChanged");
static_assert(sizeof(UI_WeaponController_pc_C_BPOnGamepadInputChanged) == 0x000001, "Wrong size on UI_WeaponController_pc_C_BPOnGamepadInputChanged");
static_assert(offsetof(UI_WeaponController_pc_C_BPOnGamepadInputChanged, bGamepad) == 0x000000, "Member 'UI_WeaponController_pc_C_BPOnGamepadInputChanged::bGamepad' has a wrong offset!");

// Function UI_WeaponController_pc.UI_WeaponController_pc_C.AnimationIn1_Event_0
// 0x0008 (0x0008 - 0x0000)
struct UI_WeaponController_pc_C_AnimationIn1_Event_0 final
{
public:
	class UImage*                                 Param_AnimationIn1;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeaponController_pc_C_AnimationIn1_Event_0) == 0x000008, "Wrong alignment on UI_WeaponController_pc_C_AnimationIn1_Event_0");
static_assert(sizeof(UI_WeaponController_pc_C_AnimationIn1_Event_0) == 0x000008, "Wrong size on UI_WeaponController_pc_C_AnimationIn1_Event_0");
static_assert(offsetof(UI_WeaponController_pc_C_AnimationIn1_Event_0, Param_AnimationIn1) == 0x000000, "Member 'UI_WeaponController_pc_C_AnimationIn1_Event_0::Param_AnimationIn1' has a wrong offset!");

// Function UI_WeaponController_pc.UI_WeaponController_pc_C.AnimationIn0_Event_0
// 0x0008 (0x0008 - 0x0000)
struct UI_WeaponController_pc_C_AnimationIn0_Event_0 final
{
public:
	class UImage*                                 Param_AnimationIn0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeaponController_pc_C_AnimationIn0_Event_0) == 0x000008, "Wrong alignment on UI_WeaponController_pc_C_AnimationIn0_Event_0");
static_assert(sizeof(UI_WeaponController_pc_C_AnimationIn0_Event_0) == 0x000008, "Wrong size on UI_WeaponController_pc_C_AnimationIn0_Event_0");
static_assert(offsetof(UI_WeaponController_pc_C_AnimationIn0_Event_0, Param_AnimationIn0) == 0x000000, "Member 'UI_WeaponController_pc_C_AnimationIn0_Event_0::Param_AnimationIn0' has a wrong offset!");

// Function UI_WeaponController_pc.UI_WeaponController_pc_C.GetWeaponShortcutKey
// 0x0048 (0x0048 - 0x0000)
struct UI_WeaponController_pc_C_GetWeaponShortcutKey final
{
public:
	int32                                         ButtonIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_1;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBreakFateMap_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57F7[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHottaShortcutKeyTipsWidget*            K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBindEventName_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHottaShortcutKeyTipsWidget*            K2Node_Select_Default_1;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetRealShortcutKey_RealEventName;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBindEventName_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetRealShortcutKey_RealEventName_1;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeaponController_pc_C_GetWeaponShortcutKey) == 0x000008, "Wrong alignment on UI_WeaponController_pc_C_GetWeaponShortcutKey");
static_assert(sizeof(UI_WeaponController_pc_C_GetWeaponShortcutKey) == 0x000048, "Wrong size on UI_WeaponController_pc_C_GetWeaponShortcutKey");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, ButtonIndex) == 0x000000, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::ButtonIndex' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, ReturnValue) == 0x000004, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, ___int_Variable) == 0x00000C, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::___int_Variable' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, ___int_Variable_1) == 0x000010, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, CallFunc_IsBreakFateMap_ReturnValue) == 0x000014, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::CallFunc_IsBreakFateMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, K2Node_Select_Default) == 0x000018, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, CallFunc_GetBindEventName_ReturnValue) == 0x000020, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::CallFunc_GetBindEventName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, K2Node_Select_Default_1) == 0x000028, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, CallFunc_GetRealShortcutKey_RealEventName) == 0x000030, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::CallFunc_GetRealShortcutKey_RealEventName' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, CallFunc_GetBindEventName_ReturnValue_1) == 0x000038, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::CallFunc_GetBindEventName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetWeaponShortcutKey, CallFunc_GetRealShortcutKey_RealEventName_1) == 0x000040, "Member 'UI_WeaponController_pc_C_GetWeaponShortcutKey::CallFunc_GetRealShortcutKey_RealEventName_1' has a wrong offset!");

// Function UI_WeaponController_pc.UI_WeaponController_pc_C.ChangeShortcutKey
// 0x00E8 (0x00E8 - 0x0000)
struct UI_WeaponController_pc_C_ChangeShortcutKey final
{
public:
	int32                                         ButtonIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WeaponSlot;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57F8[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ___name_Variable;                                  // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57F9[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ___name_Variable_1;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_1;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57FA[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ___name_Variable_2;                                // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ___name_Variable_3;                                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_2;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57FB[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ___name_Variable_4;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ___name_Variable_5;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_3;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57FC[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable;                                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHottaShortcutKeyTipsWidget*            ___object_Variable;                                // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_4;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57FD[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ___name_Variable_6;                                // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_5;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57FE[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ___name_Variable_7;                                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_6;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57FF[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ___name_Variable_8;                                // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_1;                                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHottaShortcutKeyTipsWidget*            ___object_Variable_1;                              // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_2;                                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBreakFateMap_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5800[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHottaShortcutKeyTipsWidget*            K2Node_Select_Default_3;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_4;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_5;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_6;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_7;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHottaShortcutKeyTipsWidget*            K2Node_Select_Default_8;                           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHottaShortcutKeyTipsWidget*            K2Node_Select_Default_9;                           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WeaponController_pc_C_ChangeShortcutKey) == 0x000008, "Wrong alignment on UI_WeaponController_pc_C_ChangeShortcutKey");
static_assert(sizeof(UI_WeaponController_pc_C_ChangeShortcutKey) == 0x0000E8, "Wrong size on UI_WeaponController_pc_C_ChangeShortcutKey");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ButtonIndex) == 0x000000, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::ButtonIndex' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, WeaponSlot) == 0x000004, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::WeaponSlot' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___bool_Variable) == 0x000008, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000009, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00000A, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___name_Variable) == 0x00000C, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___name_Variable' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___name_Variable_1) == 0x000018, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___name_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___bool_Variable_1) == 0x000020, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___name_Variable_2) == 0x000024, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___name_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___name_Variable_3) == 0x00002C, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___name_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___bool_Variable_2) == 0x000034, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___name_Variable_4) == 0x000038, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___name_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___name_Variable_5) == 0x000040, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___name_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___bool_Variable_3) == 0x000048, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___int_Variable) == 0x00004C, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___int_Variable' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___object_Variable) == 0x000050, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___object_Variable' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___bool_Variable_4) == 0x000058, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___name_Variable_6) == 0x00005C, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___name_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___bool_Variable_5) == 0x000064, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___name_Variable_7) == 0x000068, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___name_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___bool_Variable_6) == 0x000070, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___name_Variable_8) == 0x000074, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___name_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___int_Variable_1) == 0x00007C, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___object_Variable_1) == 0x000080, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, ___int_Variable_2) == 0x000088, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::___int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, CallFunc_IsBreakFateMap_ReturnValue) == 0x00008C, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::CallFunc_IsBreakFateMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, K2Node_Select_Default) == 0x000090, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, K2Node_Select_Default_1) == 0x000098, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, K2Node_Select_Default_2) == 0x0000A0, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, K2Node_Select_Default_3) == 0x0000A8, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, K2Node_Select_Default_4) == 0x0000B0, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, K2Node_Select_Default_5) == 0x0000B8, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, K2Node_Select_Default_6) == 0x0000C0, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, K2Node_Select_Default_7) == 0x0000C8, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, K2Node_Select_Default_8) == 0x0000D0, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, K2Node_Select_Default_9) == 0x0000D8, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_ChangeShortcutKey, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'UI_WeaponController_pc_C_ChangeShortcutKey::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_WeaponController_pc.UI_WeaponController_pc_C.GetRealShortcutKey
// 0x0088 (0x0088 - 0x0000)
struct UI_WeaponController_pc_C_GetRealShortcutKey final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RealEventName;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5801[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ___string_Variable;                                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ___string_Variable_1;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_1;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBreakFateMap_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5802[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5803[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeaponController_pc_C_GetRealShortcutKey) == 0x000008, "Wrong alignment on UI_WeaponController_pc_C_GetRealShortcutKey");
static_assert(sizeof(UI_WeaponController_pc_C_GetRealShortcutKey) == 0x000088, "Wrong size on UI_WeaponController_pc_C_GetRealShortcutKey");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, EventName) == 0x000000, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::EventName' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, RealEventName) == 0x000008, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::RealEventName' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, ___bool_Variable) == 0x000010, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::___bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, ___string_Variable) == 0x000018, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::___string_Variable' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, ___string_Variable_1) == 0x000028, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::___string_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, ___bool_Variable_1) == 0x000038, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::___bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, CallFunc_IsBreakFateMap_ReturnValue) == 0x000039, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::CallFunc_IsBreakFateMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, CallFunc_Map_Find_Value) == 0x00003C, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, CallFunc_Map_Find_ReturnValue) == 0x000044, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, K2Node_Select_Default) == 0x000048, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, K2Node_Select_Default_1) == 0x000050, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, CallFunc_Conv_NameToString_ReturnValue) == 0x000060, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponController_pc_C_GetRealShortcutKey, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'UI_WeaponController_pc_C_GetRealShortcutKey::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function UI_WeaponController_pc.UI_WeaponController_pc_C.SequenceEvent__ENTRYPOINTUI_WeaponController_pc_0
// 0x0008 (0x0008 - 0x0000)
struct UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_0 final
{
public:
	class UImage*                                 Param_AnimationIn0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_0) == 0x000008, "Wrong alignment on UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_0");
static_assert(sizeof(UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_0) == 0x000008, "Wrong size on UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_0");
static_assert(offsetof(UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_0, Param_AnimationIn0) == 0x000000, "Member 'UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_0::Param_AnimationIn0' has a wrong offset!");

// Function UI_WeaponController_pc.UI_WeaponController_pc_C.SequenceEvent__ENTRYPOINTUI_WeaponController_pc_1
// 0x0008 (0x0008 - 0x0000)
struct UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_1 final
{
public:
	class UImage*                                 Param_AnimationIn1;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_1) == 0x000008, "Wrong alignment on UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_1");
static_assert(sizeof(UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_1) == 0x000008, "Wrong size on UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_1");
static_assert(offsetof(UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_1, Param_AnimationIn1) == 0x000000, "Member 'UI_WeaponController_pc_C_SequenceEvent__ENTRYPOINTUI_WeaponController_pc_1::Param_AnimationIn1' has a wrong offset!");

}

