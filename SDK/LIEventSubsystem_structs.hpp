#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LIEventSubsystem

#include "Basic.hpp"


namespace SDK
{

// Enum LIEventSubsystem.EEventRegistrationResult
// NumValues: 0x0006
enum class EEventRegistrationResult : uint8
{
	Success                                  = 0,
	AlreadyRegistered                        = 1,
	FailedToFindHandler                      = 2,
	NoHandlersFound                          = 3,
	InvalidInput                             = 4,
	EEventRegistrationResult_MAX             = 5,
};

// Enum LIEventSubsystem.EListenerPriority
// NumValues: 0x0007
enum class EListenerPriority : uint8
{
	Lowest                                   = 0,
	Low                                      = 1,
	Normal                                   = 2,
	High                                     = 3,
	Highest                                  = 4,
	Monitor                                  = 5,
	EListenerPriority_MAX                    = 6,
};

// ScriptStruct LIEventSubsystem.EventBase
// 0x0001 (0x0001 - 0x0000)
struct FEventBase
{
public:
	uint8                                         Pad_53BB[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEventBase) == 0x000001, "Wrong alignment on FEventBase");
static_assert(sizeof(FEventBase) == 0x000001, "Wrong size on FEventBase");

// ScriptStruct LIEventSubsystem.EventHandler
// 0x0010 (0x0010 - 0x0000)
struct FEventHandler final
{
public:
	class UFunction*                              Function;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                 Object;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEventHandler) == 0x000008, "Wrong alignment on FEventHandler");
static_assert(sizeof(FEventHandler) == 0x000010, "Wrong size on FEventHandler");
static_assert(offsetof(FEventHandler, Function) == 0x000000, "Member 'FEventHandler::Function' has a wrong offset!");
static_assert(offsetof(FEventHandler, Object) == 0x000008, "Member 'FEventHandler::Object' has a wrong offset!");

// ScriptStruct LIEventSubsystem.Dummy
// 0x0010 (0x0010 - 0x0000)
struct FDummy final
{
public:
	TArray<struct FEventHandler>                  Dummy;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDummy) == 0x000008, "Wrong alignment on FDummy");
static_assert(sizeof(FDummy) == 0x000010, "Wrong size on FDummy");
static_assert(offsetof(FDummy, Dummy) == 0x000000, "Member 'FDummy::Dummy' has a wrong offset!");

// ScriptStruct LIEventSubsystem.EventSection
// 0x0010 (0x0010 - 0x0000)
struct FEventSection final
{
public:
	TArray<struct FDummy>                         EventHandlersWithPriorities;                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEventSection) == 0x000008, "Wrong alignment on FEventSection");
static_assert(sizeof(FEventSection) == 0x000010, "Wrong size on FEventSection");
static_assert(offsetof(FEventSection, EventHandlersWithPriorities) == 0x000000, "Member 'FEventSection::EventHandlersWithPriorities' has a wrong offset!");

}

