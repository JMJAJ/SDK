#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CustomGamepadKeyList

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "HottaFramework_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_CustomGamepadKeyList.WB_CustomGamepadKeyList_C.ExecuteUbergraph_WB_CustomGamepadKeyList
// 0x0030 (0x0030 - 0x0000)
struct WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E56[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_InPosition;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaHUD*                              CallFunc_BP_GetHottaHUD_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList) == 0x000008, "Wrong alignment on WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList");
static_assert(sizeof(WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList) == 0x000030, "Wrong size on WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList");
static_assert(offsetof(WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList, EntryPoint) == 0x000000, "Member 'WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList, CallFunc_Conv_NameToString_ReturnValue) == 0x000008, "Member 'WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList, K2Node_CustomEvent_InPosition) == 0x000018, "Member 'WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList::K2Node_CustomEvent_InPosition' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList, CallFunc_BP_GetHottaHUD_ReturnValue) == 0x000028, "Member 'WB_CustomGamepadKeyList_C_ExecuteUbergraph_WB_CustomGamepadKeyList::CallFunc_BP_GetHottaHUD_ReturnValue' has a wrong offset!");

// Function WB_CustomGamepadKeyList.WB_CustomGamepadKeyList_C.SetPosition
// 0x0008 (0x0008 - 0x0000)
struct WB_CustomGamepadKeyList_C_SetPosition final
{
public:
	struct FVector2D                              InPosition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CustomGamepadKeyList_C_SetPosition) == 0x000004, "Wrong alignment on WB_CustomGamepadKeyList_C_SetPosition");
static_assert(sizeof(WB_CustomGamepadKeyList_C_SetPosition) == 0x000008, "Wrong size on WB_CustomGamepadKeyList_C_SetPosition");
static_assert(offsetof(WB_CustomGamepadKeyList_C_SetPosition, InPosition) == 0x000000, "Member 'WB_CustomGamepadKeyList_C_SetPosition::InPosition' has a wrong offset!");

// Function WB_CustomGamepadKeyList.WB_CustomGamepadKeyList_C.Setup
// 0x0100 (0x0100 - 0x0000)
struct WB_CustomGamepadKeyList_C_Setup final
{
public:
	EGamepadInputActionsType                      Param_InputActionTypes;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E57[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FKey>                InputActions;                                      // 0x0008(0x0050)(Edit, BlueprintVisible)
	TArray<struct FKey>                           CallFunc_Map_Values_Values;                        // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_GamepadButton_C*                    CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0078(0x0018)(HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E58[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E59[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQRSLHandleOperationManager*            CallFunc_K2_GetHandleOperatorManager_ReturnValue;  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FKey>                CallFunc_K2_GetInputActions_ReturnValue;           // 0x00B0(0x0050)()
};
static_assert(alignof(WB_CustomGamepadKeyList_C_Setup) == 0x000008, "Wrong alignment on WB_CustomGamepadKeyList_C_Setup");
static_assert(sizeof(WB_CustomGamepadKeyList_C_Setup) == 0x000100, "Wrong size on WB_CustomGamepadKeyList_C_Setup");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, Param_InputActionTypes) == 0x000000, "Member 'WB_CustomGamepadKeyList_C_Setup::Param_InputActionTypes' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, InputActions) == 0x000008, "Member 'WB_CustomGamepadKeyList_C_Setup::InputActions' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, CallFunc_Map_Values_Values) == 0x000058, "Member 'WB_CustomGamepadKeyList_C_Setup::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WB_CustomGamepadKeyList_C_Setup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, ___int_Array_Index_Variable) == 0x00006C, "Member 'WB_CustomGamepadKeyList_C_Setup::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, CallFunc_Create_ReturnValue) == 0x000070, "Member 'WB_CustomGamepadKeyList_C_Setup::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, CallFunc_Array_Get_Item) == 0x000078, "Member 'WB_CustomGamepadKeyList_C_Setup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, ___int_Loop_Counter_Variable) == 0x000090, "Member 'WB_CustomGamepadKeyList_C_Setup::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'WB_CustomGamepadKeyList_C_Setup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'WB_CustomGamepadKeyList_C_Setup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, CallFunc_AddChild_ReturnValue) == 0x0000A0, "Member 'WB_CustomGamepadKeyList_C_Setup::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, CallFunc_K2_GetHandleOperatorManager_ReturnValue) == 0x0000A8, "Member 'WB_CustomGamepadKeyList_C_Setup::CallFunc_K2_GetHandleOperatorManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_Setup, CallFunc_K2_GetInputActions_ReturnValue) == 0x0000B0, "Member 'WB_CustomGamepadKeyList_C_Setup::CallFunc_K2_GetInputActions_ReturnValue' has a wrong offset!");

// Function WB_CustomGamepadKeyList.WB_CustomGamepadKeyList_C.SelectKey
// 0x0020 (0x0020 - 0x0000)
struct WB_CustomGamepadKeyList_C_SelectKey final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReplaceKey_Result;                        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CustomGamepadKeyList_C_SelectKey) == 0x000008, "Wrong alignment on WB_CustomGamepadKeyList_C_SelectKey");
static_assert(sizeof(WB_CustomGamepadKeyList_C_SelectKey) == 0x000020, "Wrong size on WB_CustomGamepadKeyList_C_SelectKey");
static_assert(offsetof(WB_CustomGamepadKeyList_C_SelectKey, NewKey) == 0x000000, "Member 'WB_CustomGamepadKeyList_C_SelectKey::NewKey' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_SelectKey, Result) == 0x000018, "Member 'WB_CustomGamepadKeyList_C_SelectKey::Result' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_SelectKey, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WB_CustomGamepadKeyList_C_SelectKey::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CustomGamepadKeyList_C_SelectKey, CallFunc_ReplaceKey_Result) == 0x00001A, "Member 'WB_CustomGamepadKeyList_C_SelectKey::CallFunc_ReplaceKey_Result' has a wrong offset!");

}

