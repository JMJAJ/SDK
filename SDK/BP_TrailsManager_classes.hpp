#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TrailsManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TrailsManager.BP_TrailsManager_C
// 0x00E8 (0x0320 - 0x0238)
class ABP_TrailsManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      TrailsLocation;                                    // 0x0248(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	TArray<float>                                 TrailsRadius;                                      // 0x0258(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	TArray<float>                                 TrailsHardness;                                    // 0x0268(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	TArray<struct FVector>                        ColorChannels;                                     // 0x0278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 TrailsDepth;                                       // 0x0288(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	class UTextureRenderTarget2D*                 HistoryRenderTarget;                               // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDistance;                                       // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5739[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CurrentRenderTarget;                               // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 TrailsRenderTarget;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              TrailDrawer;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              HistoryMerge;                                      // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              HistoryCopy;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TrailDrawerInstance;                               // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               HistoryMergeInstance;                              // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               HistoryCopyInstance;                               // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HistoryLocation;                                   // 0x02E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLocation;                                   // 0x02F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationCalcHelper;                                // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocationCalculated;                              // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_573A[0x3];                                     // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SideFade;                                          // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SeedScale;                                         // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSpeed;                                         // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TrailsAttenuation;                                 // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TrailsAttenuationG;                                // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TrailsAttenuationB;                                // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Initialize();
	void CalculateLocation();
	void RenderTrails();
	void RegisterTrail(const struct FVector& Location, float Radius, float Depth, float Hardness, float DynamicIntensity, const struct FVector& ColorChannel);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_TrailsManager(int32 EntryPoint);

	void VisualizeTrailComponents(class AActor* Actor) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TrailsManager_C">();
	}
	static class ABP_TrailsManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TrailsManager_C>();
	}
};
static_assert(alignof(ABP_TrailsManager_C) == 0x000008, "Wrong alignment on ABP_TrailsManager_C");
static_assert(sizeof(ABP_TrailsManager_C) == 0x000320, "Wrong size on ABP_TrailsManager_C");
static_assert(offsetof(ABP_TrailsManager_C, UberGraphFrame) == 0x000238, "Member 'ABP_TrailsManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_TrailsManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TrailsLocation) == 0x000248, "Member 'ABP_TrailsManager_C::TrailsLocation' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TrailsRadius) == 0x000258, "Member 'ABP_TrailsManager_C::TrailsRadius' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TrailsHardness) == 0x000268, "Member 'ABP_TrailsManager_C::TrailsHardness' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, ColorChannels) == 0x000278, "Member 'ABP_TrailsManager_C::ColorChannels' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TrailsDepth) == 0x000288, "Member 'ABP_TrailsManager_C::TrailsDepth' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, HistoryRenderTarget) == 0x000298, "Member 'ABP_TrailsManager_C::HistoryRenderTarget' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, MaxDistance) == 0x0002A0, "Member 'ABP_TrailsManager_C::MaxDistance' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, CurrentRenderTarget) == 0x0002A8, "Member 'ABP_TrailsManager_C::CurrentRenderTarget' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TrailsRenderTarget) == 0x0002B0, "Member 'ABP_TrailsManager_C::TrailsRenderTarget' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TrailDrawer) == 0x0002B8, "Member 'ABP_TrailsManager_C::TrailDrawer' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, HistoryMerge) == 0x0002C0, "Member 'ABP_TrailsManager_C::HistoryMerge' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, HistoryCopy) == 0x0002C8, "Member 'ABP_TrailsManager_C::HistoryCopy' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TrailDrawerInstance) == 0x0002D0, "Member 'ABP_TrailsManager_C::TrailDrawerInstance' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, HistoryMergeInstance) == 0x0002D8, "Member 'ABP_TrailsManager_C::HistoryMergeInstance' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, HistoryCopyInstance) == 0x0002E0, "Member 'ABP_TrailsManager_C::HistoryCopyInstance' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, HistoryLocation) == 0x0002E8, "Member 'ABP_TrailsManager_C::HistoryLocation' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, CurrentLocation) == 0x0002F4, "Member 'ABP_TrailsManager_C::CurrentLocation' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, LocationCalcHelper) == 0x000300, "Member 'ABP_TrailsManager_C::LocationCalcHelper' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, IsLocationCalculated) == 0x000304, "Member 'ABP_TrailsManager_C::IsLocationCalculated' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, SideFade) == 0x000308, "Member 'ABP_TrailsManager_C::SideFade' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, SeedScale) == 0x00030C, "Member 'ABP_TrailsManager_C::SeedScale' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TimeSpeed) == 0x000310, "Member 'ABP_TrailsManager_C::TimeSpeed' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TrailsAttenuation) == 0x000314, "Member 'ABP_TrailsManager_C::TrailsAttenuation' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TrailsAttenuationG) == 0x000318, "Member 'ABP_TrailsManager_C::TrailsAttenuationG' has a wrong offset!");
static_assert(offsetof(ABP_TrailsManager_C, TrailsAttenuationB) == 0x00031C, "Member 'ABP_TrailsManager_C::TrailsAttenuationB' has a wrong offset!");

}

