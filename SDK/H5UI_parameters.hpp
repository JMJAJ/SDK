#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: H5UI

#include "Basic.hpp"


namespace SDK::Params
{

// Function H5UI.CallJS.CallJS
// 0x0028 (0x0028 - 0x0000)
struct CallJS_CallJS final
{
public:
	class UH5UIScene*                             Scene;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 JsCode;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCallJS*                                ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallJS_CallJS) == 0x000008, "Wrong alignment on CallJS_CallJS");
static_assert(sizeof(CallJS_CallJS) == 0x000028, "Wrong size on CallJS_CallJS");
static_assert(offsetof(CallJS_CallJS, Scene) == 0x000000, "Member 'CallJS_CallJS::Scene' has a wrong offset!");
static_assert(offsetof(CallJS_CallJS, WorldContextObject) == 0x000008, "Member 'CallJS_CallJS::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CallJS_CallJS, JsCode) == 0x000010, "Member 'CallJS_CallJS::JsCode' has a wrong offset!");
static_assert(offsetof(CallJS_CallJS, ReturnValue) == 0x000020, "Member 'CallJS_CallJS::ReturnValue' has a wrong offset!");

// Function H5UI.H5UIScene.GetId
// 0x0004 (0x0004 - 0x0000)
struct H5UIScene_GetId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(H5UIScene_GetId) == 0x000004, "Wrong alignment on H5UIScene_GetId");
static_assert(sizeof(H5UIScene_GetId) == 0x000004, "Wrong size on H5UIScene_GetId");
static_assert(offsetof(H5UIScene_GetId, ReturnValue) == 0x000000, "Member 'H5UIScene_GetId::ReturnValue' has a wrong offset!");

// Function H5UI.H5UIScene.Show
// 0x0008 (0x0008 - 0x0000)
struct H5UIScene_Show final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(H5UIScene_Show) == 0x000008, "Wrong alignment on H5UIScene_Show");
static_assert(sizeof(H5UIScene_Show) == 0x000008, "Wrong size on H5UIScene_Show");
static_assert(offsetof(H5UIScene_Show, WorldContextObject) == 0x000000, "Member 'H5UIScene_Show::WorldContextObject' has a wrong offset!");

// Function H5UI.H5UISubsystem.GetLanguage
// 0x0018 (0x0018 - 0x0000)
struct H5UISubsystem_GetLanguage final
{
public:
	class UObject*                                WCO;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(H5UISubsystem_GetLanguage) == 0x000008, "Wrong alignment on H5UISubsystem_GetLanguage");
static_assert(sizeof(H5UISubsystem_GetLanguage) == 0x000018, "Wrong size on H5UISubsystem_GetLanguage");
static_assert(offsetof(H5UISubsystem_GetLanguage, WCO) == 0x000000, "Member 'H5UISubsystem_GetLanguage::WCO' has a wrong offset!");
static_assert(offsetof(H5UISubsystem_GetLanguage, ReturnValue) == 0x000008, "Member 'H5UISubsystem_GetLanguage::ReturnValue' has a wrong offset!");

// Function H5UI.H5UISubsystem.SetLanguage
// 0x0018 (0x0018 - 0x0000)
struct H5UISubsystem_SetLanguage final
{
public:
	class UObject*                                WCO;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Language;                                          // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(H5UISubsystem_SetLanguage) == 0x000008, "Wrong alignment on H5UISubsystem_SetLanguage");
static_assert(sizeof(H5UISubsystem_SetLanguage) == 0x000018, "Wrong size on H5UISubsystem_SetLanguage");
static_assert(offsetof(H5UISubsystem_SetLanguage, WCO) == 0x000000, "Member 'H5UISubsystem_SetLanguage::WCO' has a wrong offset!");
static_assert(offsetof(H5UISubsystem_SetLanguage, Language) == 0x000008, "Member 'H5UISubsystem_SetLanguage::Language' has a wrong offset!");

// Function H5UI.H5UISubsystem.Setup
// 0x0048 (0x0048 - 0x0000)
struct H5UISubsystem_Setup final
{
public:
	class UObject*                                WCO;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Language;                                          // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Region;                                            // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeviceID;                                          // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0038(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(H5UISubsystem_Setup) == 0x000008, "Wrong alignment on H5UISubsystem_Setup");
static_assert(sizeof(H5UISubsystem_Setup) == 0x000048, "Wrong size on H5UISubsystem_Setup");
static_assert(offsetof(H5UISubsystem_Setup, WCO) == 0x000000, "Member 'H5UISubsystem_Setup::WCO' has a wrong offset!");
static_assert(offsetof(H5UISubsystem_Setup, Language) == 0x000008, "Member 'H5UISubsystem_Setup::Language' has a wrong offset!");
static_assert(offsetof(H5UISubsystem_Setup, Region) == 0x000018, "Member 'H5UISubsystem_Setup::Region' has a wrong offset!");
static_assert(offsetof(H5UISubsystem_Setup, DeviceID) == 0x000028, "Member 'H5UISubsystem_Setup::DeviceID' has a wrong offset!");
static_assert(offsetof(H5UISubsystem_Setup, UserId) == 0x000038, "Member 'H5UISubsystem_Setup::UserId' has a wrong offset!");

// Function H5UI.LoadScene.LoadScene
// 0x0028 (0x0028 - 0x0000)
struct LoadScene_LoadScene final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SceneID;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_188C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExtraArgs;                                         // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoadScene*                             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadScene_LoadScene) == 0x000008, "Wrong alignment on LoadScene_LoadScene");
static_assert(sizeof(LoadScene_LoadScene) == 0x000028, "Wrong size on LoadScene_LoadScene");
static_assert(offsetof(LoadScene_LoadScene, WorldContextObject) == 0x000000, "Member 'LoadScene_LoadScene::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LoadScene_LoadScene, SceneID) == 0x000008, "Member 'LoadScene_LoadScene::SceneID' has a wrong offset!");
static_assert(offsetof(LoadScene_LoadScene, ExtraArgs) == 0x000010, "Member 'LoadScene_LoadScene::ExtraArgs' has a wrong offset!");
static_assert(offsetof(LoadScene_LoadScene, ReturnValue) == 0x000020, "Member 'LoadScene_LoadScene::ReturnValue' has a wrong offset!");

}

