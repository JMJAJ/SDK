#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NestFollower

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_DialogueNpcBase_classes.hpp"
#include "HottaFramework_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NestFollower.BP_NestFollower_C
// 0x0030 (0x3B10 - 0x3AE0)
class ABP_NestFollower_C final : public ABP_DialogueNpcBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_NestFollower_C;                  // 0x3AD8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           AK;                                                // 0x3AE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x3AE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AlarmMesh;                                         // 0x3AF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x3AF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               SandParti;                                         // 0x3B00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_NestFollower(int32 EntryPoint);
	void OnSeenTarget(bool bSeenOrLost, class AActor* Target);
	void OnHeardTarget(bool bHeardOrLost, const struct FVector& HeardLocation, class AActor* Target);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NestFollower_C">();
	}
	static class ABP_NestFollower_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NestFollower_C>();
	}
};
static_assert(alignof(ABP_NestFollower_C) == 0x000010, "Wrong alignment on ABP_NestFollower_C");
static_assert(sizeof(ABP_NestFollower_C) == 0x003B10, "Wrong size on ABP_NestFollower_C");
static_assert(offsetof(ABP_NestFollower_C, UberGraphFrame_BP_NestFollower_C) == 0x003AD8, "Member 'ABP_NestFollower_C::UberGraphFrame_BP_NestFollower_C' has a wrong offset!");
static_assert(offsetof(ABP_NestFollower_C, AK) == 0x003AE0, "Member 'ABP_NestFollower_C::AK' has a wrong offset!");
static_assert(offsetof(ABP_NestFollower_C, ParticleSystem) == 0x003AE8, "Member 'ABP_NestFollower_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_NestFollower_C, AlarmMesh) == 0x003AF0, "Member 'ABP_NestFollower_C::AlarmMesh' has a wrong offset!");
static_assert(offsetof(ABP_NestFollower_C, Sphere) == 0x003AF8, "Member 'ABP_NestFollower_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_NestFollower_C, SandParti) == 0x003B00, "Member 'ABP_NestFollower_C::SandParti' has a wrong offset!");

}

