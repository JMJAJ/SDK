#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TaskTriggerMinusclient

#include "Basic.hpp"

#include "TaskTriggerMinusclient_classes.hpp"
#include "TaskTriggerMinusclient_parameters.hpp"


namespace SDK
{

// Function TaskTrigger-client.TaskTrigger-client_C.ExecuteUbergraph_TaskTrigger-client
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATaskTriggerMinusclient_C::ExecuteUbergraph_TaskTriggerMinusclient(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskTrigger-client_C", "ExecuteUbergraph_TaskTrigger-client");

	Params::TaskTriggerMinusclient_C_ExecuteUbergraph_TaskTriggerMinusclient Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskTrigger-client.TaskTrigger-client_C.TryUpdateQuestProgess
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             QuestID                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHottaPlayerCharacter*            ThePlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATaskTriggerMinusclient_C::TryUpdateQuestProgess(const class FName& QuestID, class AHottaPlayerCharacter* ThePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskTrigger-client_C", "TryUpdateQuestProgess");

	Params::TaskTriggerMinusclient_C_TryUpdateQuestProgess Parms{};

	Parms.QuestID = QuestID;
	Parms.ThePlayer = ThePlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskTrigger-client.TaskTrigger-client_C.ReceiveActorEndOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATaskTriggerMinusclient_C::ReceiveActorEndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskTrigger-client_C", "ReceiveActorEndOverlap");

	Params::TaskTriggerMinusclient_C_ReceiveActorEndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskTrigger-client.TaskTrigger-client_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATaskTriggerMinusclient_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskTrigger-client_C", "ReceiveActorBeginOverlap");

	Params::TaskTriggerMinusclient_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskTrigger-client.TaskTrigger-client_C.UpdateQuestProgress
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHottaPlayerCharacter*            PlayerCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATaskTriggerMinusclient_C::UpdateQuestProgress(class AHottaPlayerCharacter* PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskTrigger-client_C", "UpdateQuestProgress");

	Params::TaskTriggerMinusclient_C_UpdateQuestProgress Parms{};

	Parms.PlayerCharacter = PlayerCharacter;

	UObject::ProcessEvent(Func, &Parms);
}

}

