#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_GamepadSettings_Common

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HottaFramework_structs.hpp"
#include "HottaFramework_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_GamepadSettings_Common.WB_GamepadSettings_Common_C
// 0x0168 (0x06E0 - 0x0578)
class UWB_GamepadSettings_Common_C final : public UHottaUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0578(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 GamepadImage_PS4;                                  // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GamepadImage_PS5;                                  // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GamepadImage_XBOX;                                 // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        GamepadKeysTipsGroup;                              // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_GamepaActionNamedText_C*            LeftTrigger_PS4;                                   // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_GamepaActionNamedText_C*            LeftTrigger_PS5;                                   // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_GamepaActionNamedText_C*            LeftTrigger_XBOX;                                  // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PS4GamepadInPC;                                    // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PS4KeysGroup_1;                                    // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PS4Touchpad;                                       // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PS5GamepadInPC;                                    // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PS5KeysGroup;                                      // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PS5Touchpad;                                       // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS5Touchpad_1;                                     // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS5Touchpad_2;                                     // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS5Touchpad_3;                                     // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS5Touchpad_5;                                     // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS5Touchpad_6;                                     // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS5Touchpad_7;                                     // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_0;                                       // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_6;                                         // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_7;                                         // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxKeySelector;                            // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherLB_PS4;                              // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherLB_PS5;                              // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherLB_XBOX;                             // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherLT_PS4;                              // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherLT_PS5;                              // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherLT_XBOX;                             // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherSpecialLeft_PS4;                     // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherSpecialLeft_PS5;                     // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherSpecialLeft_XBOX;                    // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           XBOXKeysGroup;                                     // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EGamepadInputActionsType                      InputActionsType;                                  // 0x0688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DB[0x7];                                     // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EGamepadType, TSoftObjectPtr<class UTexture2D>> GampeadImageMap;                                   // 0x0690(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WB_GamepadSettings_Common(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void EvaluateSpecialLeft();
	void EvaluateLBTEXT();
	void EvaluateLTText();
	void Construct();
	void Setup();
	void SetupKeys();
	void Setup_Keys_Tips();
	void RefreshKeys();
	void ScrollWidgetIntoView(class UWidget* WidgetToFind);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_GamepadSettings_Common_C">();
	}
	static class UWB_GamepadSettings_Common_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_GamepadSettings_Common_C>();
	}
};
static_assert(alignof(UWB_GamepadSettings_Common_C) == 0x000008, "Wrong alignment on UWB_GamepadSettings_Common_C");
static_assert(sizeof(UWB_GamepadSettings_Common_C) == 0x0006E0, "Wrong size on UWB_GamepadSettings_Common_C");
static_assert(offsetof(UWB_GamepadSettings_Common_C, UberGraphFrame) == 0x000578, "Member 'UWB_GamepadSettings_Common_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, GamepadImage_PS4) == 0x000580, "Member 'UWB_GamepadSettings_Common_C::GamepadImage_PS4' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, GamepadImage_PS5) == 0x000588, "Member 'UWB_GamepadSettings_Common_C::GamepadImage_PS5' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, GamepadImage_XBOX) == 0x000590, "Member 'UWB_GamepadSettings_Common_C::GamepadImage_XBOX' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, GamepadKeysTipsGroup) == 0x000598, "Member 'UWB_GamepadSettings_Common_C::GamepadKeysTipsGroup' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, LeftTrigger_PS4) == 0x0005A0, "Member 'UWB_GamepadSettings_Common_C::LeftTrigger_PS4' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, LeftTrigger_PS5) == 0x0005A8, "Member 'UWB_GamepadSettings_Common_C::LeftTrigger_PS5' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, LeftTrigger_XBOX) == 0x0005B0, "Member 'UWB_GamepadSettings_Common_C::LeftTrigger_XBOX' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS4GamepadInPC) == 0x0005B8, "Member 'UWB_GamepadSettings_Common_C::PS4GamepadInPC' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS4KeysGroup_1) == 0x0005C0, "Member 'UWB_GamepadSettings_Common_C::PS4KeysGroup_1' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS4Touchpad) == 0x0005C8, "Member 'UWB_GamepadSettings_Common_C::PS4Touchpad' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS5GamepadInPC) == 0x0005D0, "Member 'UWB_GamepadSettings_Common_C::PS5GamepadInPC' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS5KeysGroup) == 0x0005D8, "Member 'UWB_GamepadSettings_Common_C::PS5KeysGroup' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS5Touchpad) == 0x0005E0, "Member 'UWB_GamepadSettings_Common_C::PS5Touchpad' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS5Touchpad_1) == 0x0005E8, "Member 'UWB_GamepadSettings_Common_C::PS5Touchpad_1' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS5Touchpad_2) == 0x0005F0, "Member 'UWB_GamepadSettings_Common_C::PS5Touchpad_2' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS5Touchpad_3) == 0x0005F8, "Member 'UWB_GamepadSettings_Common_C::PS5Touchpad_3' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS5Touchpad_5) == 0x000600, "Member 'UWB_GamepadSettings_Common_C::PS5Touchpad_5' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS5Touchpad_6) == 0x000608, "Member 'UWB_GamepadSettings_Common_C::PS5Touchpad_6' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, PS5Touchpad_7) == 0x000610, "Member 'UWB_GamepadSettings_Common_C::PS5Touchpad_7' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, ScrollBox_0) == 0x000618, "Member 'UWB_GamepadSettings_Common_C::ScrollBox_0' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, SizeBox_6) == 0x000620, "Member 'UWB_GamepadSettings_Common_C::SizeBox_6' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, SizeBox_7) == 0x000628, "Member 'UWB_GamepadSettings_Common_C::SizeBox_7' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, VerticalBoxKeySelector) == 0x000630, "Member 'UWB_GamepadSettings_Common_C::VerticalBoxKeySelector' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, WidgetSwitcherLB_PS4) == 0x000638, "Member 'UWB_GamepadSettings_Common_C::WidgetSwitcherLB_PS4' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, WidgetSwitcherLB_PS5) == 0x000640, "Member 'UWB_GamepadSettings_Common_C::WidgetSwitcherLB_PS5' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, WidgetSwitcherLB_XBOX) == 0x000648, "Member 'UWB_GamepadSettings_Common_C::WidgetSwitcherLB_XBOX' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, WidgetSwitcherLT_PS4) == 0x000650, "Member 'UWB_GamepadSettings_Common_C::WidgetSwitcherLT_PS4' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, WidgetSwitcherLT_PS5) == 0x000658, "Member 'UWB_GamepadSettings_Common_C::WidgetSwitcherLT_PS5' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, WidgetSwitcherLT_XBOX) == 0x000660, "Member 'UWB_GamepadSettings_Common_C::WidgetSwitcherLT_XBOX' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, WidgetSwitcherSpecialLeft_PS4) == 0x000668, "Member 'UWB_GamepadSettings_Common_C::WidgetSwitcherSpecialLeft_PS4' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, WidgetSwitcherSpecialLeft_PS5) == 0x000670, "Member 'UWB_GamepadSettings_Common_C::WidgetSwitcherSpecialLeft_PS5' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, WidgetSwitcherSpecialLeft_XBOX) == 0x000678, "Member 'UWB_GamepadSettings_Common_C::WidgetSwitcherSpecialLeft_XBOX' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, XBOXKeysGroup) == 0x000680, "Member 'UWB_GamepadSettings_Common_C::XBOXKeysGroup' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, InputActionsType) == 0x000688, "Member 'UWB_GamepadSettings_Common_C::InputActionsType' has a wrong offset!");
static_assert(offsetof(UWB_GamepadSettings_Common_C, GampeadImageMap) == 0x000690, "Member 'UWB_GamepadSettings_Common_C::GampeadImageMap' has a wrong offset!");

}

