#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MarkRobAniBP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MarkRobAniBP.MarkRobAniBP_C.ExecuteUbergraph_MarkRobAniBP
// 0x0028 (0x0028 - 0x0000)
struct MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5972[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeaponBase*                            K2Node_DynamicCast_AsWeapon_Base;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5973[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP) == 0x000008, "Wrong alignment on MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP");
static_assert(sizeof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP) == 0x000028, "Wrong size on MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, EntryPoint) == 0x000000, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, CallFunc_Montage_Play_ReturnValue) == 0x000004, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000009, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, K2Node_Event_DeltaTimeX) == 0x00000C, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, CallFunc_GetOwningActor_ReturnValue) == 0x000010, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, K2Node_DynamicCast_AsWeapon_Base) == 0x000018, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::K2Node_DynamicCast_AsWeapon_Base' has a wrong offset!");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000021, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000022, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP, CallFunc_Montage_Play_ReturnValue_1) == 0x000024, "Member 'MarkRobAniBP_C_ExecuteUbergraph_MarkRobAniBP::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");

// Function MarkRobAniBP.MarkRobAniBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct MarkRobAniBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MarkRobAniBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on MarkRobAniBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(MarkRobAniBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on MarkRobAniBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(MarkRobAniBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'MarkRobAniBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function MarkRobAniBP.MarkRobAniBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct MarkRobAniBP_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MarkRobAniBP_C_AnimGraph) == 0x000008, "Wrong alignment on MarkRobAniBP_C_AnimGraph");
static_assert(sizeof(MarkRobAniBP_C_AnimGraph) == 0x000010, "Wrong size on MarkRobAniBP_C_AnimGraph");
static_assert(offsetof(MarkRobAniBP_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'MarkRobAniBP_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

