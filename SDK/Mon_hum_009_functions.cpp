#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mon_hum_009

#include "Basic.hpp"

#include "Mon_hum_009_classes.hpp"
#include "Mon_hum_009_parameters.hpp"


namespace SDK
{

// Function mon_hum_009.mon_hum_009_C.ExecuteUbergraph_mon_hum_009
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMon_hum_009_C::ExecuteUbergraph_mon_hum_009(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mon_hum_009_C", "ExecuteUbergraph_mon_hum_009");

	Params::Mon_hum_009_C_ExecuteUbergraph_mon_hum_009 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mon_hum_009.mon_hum_009_C.OnTimeHourChange_‹ö_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InTimeHour                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMon_hum_009_C::OnTimeHourChange____0(int32 InTimeHour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mon_hum_009_C", "OnTimeHourChange_‹ö_0");

	Params::Mon_hum_009_C_OnTimeHourChange____0 Parms{};

	Parms.InTimeHour = InTimeHour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mon_hum_009.mon_hum_009_C.OnUnsilent_‹ö_0
// (BlueprintCallable, BlueprintEvent)

void AMon_hum_009_C::OnUnsilent____0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mon_hum_009_C", "OnUnsilent_‹ö_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mon_hum_009.mon_hum_009_C.OnDamaged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TSubclassOf<class UGameplayEffect>      DamageGameplayEffect                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AHottaCharacter*                  InstigatorCharacter                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMon_hum_009_C::OnDamaged(float DamageAmount, const struct FHitResult& HitInfo, const struct FGameplayTagContainer& DamageTags, TSubclassOf<class UGameplayEffect> DamageGameplayEffect, class AHottaCharacter* InstigatorCharacter, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mon_hum_009_C", "OnDamaged");

	Params::Mon_hum_009_C_OnDamaged Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.HitInfo = std::move(HitInfo);
	Parms.DamageTags = std::move(DamageTags);
	Parms.DamageGameplayEffect = DamageGameplayEffect;
	Parms.InstigatorCharacter = InstigatorCharacter;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mon_hum_009.mon_hum_009_C.OnDeadStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bDeadState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHottaCharacter*                  InstigatorCharacter                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMon_hum_009_C::OnDeadStateChanged(bool bDeadState, class AHottaCharacter* InstigatorCharacter, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mon_hum_009_C", "OnDeadStateChanged");

	Params::Mon_hum_009_C_OnDeadStateChanged Parms{};

	Parms.bDeadState = bDeadState;
	Parms.InstigatorCharacter = InstigatorCharacter;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mon_hum_009.mon_hum_009_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMon_hum_009_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mon_hum_009_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mon_hum_009.mon_hum_009_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMon_hum_009_C::BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mon_hum_009_C", "BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::Mon_hum_009_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mon_hum_009.mon_hum_009_C.ChangeBehaviorTreeByState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsSleep                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMon_hum_009_C::ChangeBehaviorTreeByState(bool Param_IsSleep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mon_hum_009_C", "ChangeBehaviorTreeByState");

	Params::Mon_hum_009_C_ChangeBehaviorTreeByState Parms{};

	Parms.Param_IsSleep = Param_IsSleep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mon_hum_009.mon_hum_009_C.ChangeColorByState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsSleep                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMon_hum_009_C::ChangeColorByState(bool Param_IsSleep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mon_hum_009_C", "ChangeColorByState");

	Params::Mon_hum_009_C_ChangeColorByState Parms{};

	Parms.Param_IsSleep = Param_IsSleep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mon_hum_009.mon_hum_009_C.ChangeDropBuffByState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsSleep                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMon_hum_009_C::ChangeDropBuffByState(bool Param_IsSleep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mon_hum_009_C", "ChangeDropBuffByState");

	Params::Mon_hum_009_C_ChangeDropBuffByState Parms{};

	Parms.Param_IsSleep = Param_IsSleep;

	UObject::ProcessEvent(Func, &Parms);
}

}

