#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FPlayerMarkRobotChangeMeleePhy

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_FPlayerMarkRobotChangeMeleePhy.GA_FPlayerMarkRobotChangeMeleePhy_C.AfterAimmingForceSetStartSectionName
// 0x0018 (0x0018 - 0x0000)
struct GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName final
{
public:
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaPlayerCharacter*                  K2Node_DynamicCast_AsHotta_Player_Character;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName) == 0x000008, "Wrong alignment on GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName");
static_assert(sizeof(GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName) == 0x000018, "Wrong size on GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName, K2Node_DynamicCast_AsHotta_Player_Character) == 0x000008, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName::K2Node_DynamicCast_AsHotta_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingForceSetStartSectionName::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_FPlayerMarkRobotChangeMeleePhy.GA_FPlayerMarkRobotChangeMeleePhy_C.AfterAimmingNeedTriggerReleaseTask
// 0x0001 (0x0001 - 0x0000)
struct GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingNeedTriggerReleaseTask final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingNeedTriggerReleaseTask) == 0x000001, "Wrong alignment on GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingNeedTriggerReleaseTask");
static_assert(sizeof(GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingNeedTriggerReleaseTask) == 0x000001, "Wrong size on GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingNeedTriggerReleaseTask");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingNeedTriggerReleaseTask, ReturnValue) == 0x000000, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_AfterAimmingNeedTriggerReleaseTask::ReturnValue' has a wrong offset!");

// Function GA_FPlayerMarkRobotChangeMeleePhy.GA_FPlayerMarkRobotChangeMeleePhy_C.PressHoldNeedEnterAimming
// 0x0070 (0x0070 - 0x0000)
struct GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_595F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0008(0x0048)(ContainsInstancedReference)
	class AHottaPlayerCharacter*                  K2Node_DynamicCast_AsHotta_Player_Character;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5960[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHottaCharacterMovementComponent*       K2Node_DynamicCast_AsHotta_Character_Movement_Component; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUnderWater_ReturnValue;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming) == 0x000008, "Wrong alignment on GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming");
static_assert(sizeof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming) == 0x000070, "Wrong size on GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming, Result) == 0x000000, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming::Result' has a wrong offset!");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming, CallFunc_GetActorInfo_ReturnValue) == 0x000008, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming, K2Node_DynamicCast_AsHotta_Player_Character) == 0x000050, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming::K2Node_DynamicCast_AsHotta_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming, K2Node_DynamicCast_AsHotta_Character_Movement_Component) == 0x000060, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming::K2Node_DynamicCast_AsHotta_Character_Movement_Component' has a wrong offset!");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming, CallFunc_IsUnderWater_ReturnValue) == 0x000069, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming::CallFunc_IsUnderWater_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming, CallFunc_IsWalking_ReturnValue) == 0x00006A, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming, CallFunc_BooleanOR_ReturnValue) == 0x00006B, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_PressHoldNeedEnterAimming::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function GA_FPlayerMarkRobotChangeMeleePhy.GA_FPlayerMarkRobotChangeMeleePhy_C.WaitButtonReleaseToLeaveAimming
// 0x0001 (0x0001 - 0x0000)
struct GA_FPlayerMarkRobotChangeMeleePhy_C_WaitButtonReleaseToLeaveAimming final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_FPlayerMarkRobotChangeMeleePhy_C_WaitButtonReleaseToLeaveAimming) == 0x000001, "Wrong alignment on GA_FPlayerMarkRobotChangeMeleePhy_C_WaitButtonReleaseToLeaveAimming");
static_assert(sizeof(GA_FPlayerMarkRobotChangeMeleePhy_C_WaitButtonReleaseToLeaveAimming) == 0x000001, "Wrong size on GA_FPlayerMarkRobotChangeMeleePhy_C_WaitButtonReleaseToLeaveAimming");
static_assert(offsetof(GA_FPlayerMarkRobotChangeMeleePhy_C_WaitButtonReleaseToLeaveAimming, Result) == 0x000000, "Member 'GA_FPlayerMarkRobotChangeMeleePhy_C_WaitButtonReleaseToLeaveAimming::Result' has a wrong offset!");

}

