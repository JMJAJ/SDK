#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FireBoom_WeaponBatch_Mul

#include "Basic.hpp"


namespace SDK::Params
{

// Function FireBoom_WeaponBatch_Mul.FireBoom_WeaponBatch_Mul_C.HottaCalculateBaseMagnitude
// 0x0050 (0x0050 - 0x0000)
struct FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude final
{
public:
	const class AActor*                           OwnerActor;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           HitActor;                                          // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           InstigatorActor;                                   // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RealName;                                          // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C5[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaCharacter*                        K2Node_DynamicCast_AsHotta_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_ItemID_ReturnValue;                       // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C6[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_GetEquipBatchLevelDamageMult_BatchLevelDamageMult; // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude) == 0x000008, "Wrong alignment on FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude");
static_assert(sizeof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude) == 0x000050, "Wrong size on FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, OwnerActor) == 0x000000, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::OwnerActor' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, HitActor) == 0x000008, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::HitActor' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, InstigatorActor) == 0x000010, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::InstigatorActor' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, ReturnValue) == 0x000018, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::ReturnValue' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, RealName) == 0x00001C, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::RealName' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, K2Node_DynamicCast_AsHotta_Character) == 0x000028, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::K2Node_DynamicCast_AsHotta_Character' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000033, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, CallFunc_ItemID_ReturnValue) == 0x000034, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::CallFunc_ItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude, CallFunc_GetEquipBatchLevelDamageMult_BatchLevelDamageMult) == 0x000040, "Member 'FireBoom_WeaponBatch_Mul_C_HottaCalculateBaseMagnitude::CallFunc_GetEquipBatchLevelDamageMult_BatchLevelDamageMult' has a wrong offset!");

}

