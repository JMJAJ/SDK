#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MiniGame_CactusGem_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_BreakableBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MiniGame_CactusGem_Base.BP_MiniGame_CactusGem_Base_C
// 0x0080 (0x0C60 - 0x0BE0)
class ABP_MiniGame_CactusGem_Base_C final : public ABP_BreakableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MiniGame_CactusGem_Base_C;       // 0x0BE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       Spline;                                            // 0x0BE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0BF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0BF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CactusBallParticle;                                // 0x0C00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ____0_ZOffset_46E6240447B6ABF1801E5D98DBD7EBF0;    // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____0_XOffset_46E6240447B6ABF1801E5D98DBD7EBF0;    // 0x0C0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ____0__Direction_46E6240447B6ABF1801E5D98DBD7EBF0; // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CDA[0x7];                                     // 0x0C11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     __t_0;                                             // 0x0C18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             TargetIsBroken;                                    // 0x0C20(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector                                ShootTargetBeginOffset;                            // 0x0C30(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ShootTargetYahahaID;                               // 0x0C3C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CDB[0x4];                                     // 0x0C44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 RewardGemHarvest;                                  // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HarvestBase_C*                      HarvestGem;                                        // 0x0C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void TargetIsBroken__DelegateSignature(class AQRSLPlayerCharacter* Player);
	void ExecuteUbergraph_BP_MiniGame_CactusGem_Base(int32 EntryPoint);
	void ReceiveOnTakeDamage(class AActor* DamageCauser, const struct FHitResult& HitResult, bool bRealDamaged);
	void ReceiveBeginPlay();
	void __t_0__UpdateFunc();
	void __t_0__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MiniGame_CactusGem_Base_C">();
	}
	static class ABP_MiniGame_CactusGem_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MiniGame_CactusGem_Base_C>();
	}
};
static_assert(alignof(ABP_MiniGame_CactusGem_Base_C) == 0x000010, "Wrong alignment on ABP_MiniGame_CactusGem_Base_C");
static_assert(sizeof(ABP_MiniGame_CactusGem_Base_C) == 0x000C60, "Wrong size on ABP_MiniGame_CactusGem_Base_C");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, UberGraphFrame_BP_MiniGame_CactusGem_Base_C) == 0x000BE0, "Member 'ABP_MiniGame_CactusGem_Base_C::UberGraphFrame_BP_MiniGame_CactusGem_Base_C' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, Spline) == 0x000BE8, "Member 'ABP_MiniGame_CactusGem_Base_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, Sphere) == 0x000BF0, "Member 'ABP_MiniGame_CactusGem_Base_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, ParticleSystem) == 0x000BF8, "Member 'ABP_MiniGame_CactusGem_Base_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, CactusBallParticle) == 0x000C00, "Member 'ABP_MiniGame_CactusGem_Base_C::CactusBallParticle' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, ____0_ZOffset_46E6240447B6ABF1801E5D98DBD7EBF0) == 0x000C08, "Member 'ABP_MiniGame_CactusGem_Base_C::____0_ZOffset_46E6240447B6ABF1801E5D98DBD7EBF0' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, ____0_XOffset_46E6240447B6ABF1801E5D98DBD7EBF0) == 0x000C0C, "Member 'ABP_MiniGame_CactusGem_Base_C::____0_XOffset_46E6240447B6ABF1801E5D98DBD7EBF0' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, ____0__Direction_46E6240447B6ABF1801E5D98DBD7EBF0) == 0x000C10, "Member 'ABP_MiniGame_CactusGem_Base_C::____0__Direction_46E6240447B6ABF1801E5D98DBD7EBF0' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, __t_0) == 0x000C18, "Member 'ABP_MiniGame_CactusGem_Base_C::__t_0' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, TargetIsBroken) == 0x000C20, "Member 'ABP_MiniGame_CactusGem_Base_C::TargetIsBroken' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, ShootTargetBeginOffset) == 0x000C30, "Member 'ABP_MiniGame_CactusGem_Base_C::ShootTargetBeginOffset' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, ShootTargetYahahaID) == 0x000C3C, "Member 'ABP_MiniGame_CactusGem_Base_C::ShootTargetYahahaID' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, RewardGemHarvest) == 0x000C48, "Member 'ABP_MiniGame_CactusGem_Base_C::RewardGemHarvest' has a wrong offset!");
static_assert(offsetof(ABP_MiniGame_CactusGem_Base_C, HarvestGem) == 0x000C50, "Member 'ABP_MiniGame_CactusGem_Base_C::HarvestGem' has a wrong offset!");

}

