#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UIStaminaExpireTime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "HottaFramework_structs.hpp"


namespace SDK::Params
{

// Function BP_UIStaminaExpireTime.BP_UIStaminaExpireTime_C.StopRefresh
// 0x0010 (0x0010 - 0x0000)
struct BP_UIStaminaExpireTime_C_StopRefresh final
{
public:
	class AQRSLPlayerCharacter*                   CallFunc_GetPlayer_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemTotalAmount_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIStaminaExpireTime_C_StopRefresh) == 0x000008, "Wrong alignment on BP_UIStaminaExpireTime_C_StopRefresh");
static_assert(sizeof(BP_UIStaminaExpireTime_C_StopRefresh) == 0x000010, "Wrong size on BP_UIStaminaExpireTime_C_StopRefresh");
static_assert(offsetof(BP_UIStaminaExpireTime_C_StopRefresh, CallFunc_GetPlayer_ReturnValue) == 0x000000, "Member 'BP_UIStaminaExpireTime_C_StopRefresh::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_StopRefresh, CallFunc_GetItemTotalAmount_ReturnValue) == 0x000008, "Member 'BP_UIStaminaExpireTime_C_StopRefresh::CallFunc_GetItemTotalAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_StopRefresh, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UIStaminaExpireTime_C_StopRefresh::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UIStaminaExpireTime.BP_UIStaminaExpireTime_C.DetermineRefresh
// 0x0010 (0x0010 - 0x0000)
struct BP_UIStaminaExpireTime_C_DetermineRefresh final
{
public:
	class UHottaItem*                             Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIStaminaExpireTime_C_DetermineRefresh) == 0x000008, "Wrong alignment on BP_UIStaminaExpireTime_C_DetermineRefresh");
static_assert(sizeof(BP_UIStaminaExpireTime_C_DetermineRefresh) == 0x000010, "Wrong size on BP_UIStaminaExpireTime_C_DetermineRefresh");
static_assert(offsetof(BP_UIStaminaExpireTime_C_DetermineRefresh, Item) == 0x000000, "Member 'BP_UIStaminaExpireTime_C_DetermineRefresh::Item' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_DetermineRefresh, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_UIStaminaExpireTime_C_DetermineRefresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_DetermineRefresh, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000009, "Member 'BP_UIStaminaExpireTime_C_DetermineRefresh::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_UIStaminaExpireTime.BP_UIStaminaExpireTime_C.RefreshExpireTime
// 0x0078 (0x0078 - 0x0000)
struct BP_UIStaminaExpireTime_C_RefreshExpireTime final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55DF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_DateTimeMinValue_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExists_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_DateTimeDateTime_ReturnValue;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55E0[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_DateTimeMinValue_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_DateTimeMinValue_ReturnValue_2;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DateTimeDateTime_ReturnValue;  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55E1[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AQRSLPlayerCharacter*                   CallFunc_GetPlayer_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UHottaItem*>                     CallFunc_GetAllItemsByItemID_OutItems;             // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAllItemsByItemID_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55E2[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55E3[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHottaItem*                             CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_DateTimeDateTime_ReturnValue_1;  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DateTimeDateTime_ReturnValue;     // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIStaminaExpireTime_C_RefreshExpireTime) == 0x000008, "Wrong alignment on BP_UIStaminaExpireTime_C_RefreshExpireTime");
static_assert(sizeof(BP_UIStaminaExpireTime_C_RefreshExpireTime) == 0x000078, "Wrong size on BP_UIStaminaExpireTime_C_RefreshExpireTime");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_DateTimeMinValue_ReturnValue) == 0x000018, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_DateTimeMinValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_K2_TimerExists_ReturnValue) == 0x000020, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_K2_TimerExists_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_NotEqual_DateTimeDateTime_ReturnValue) == 0x000021, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_NotEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_DateTimeMinValue_ReturnValue_1) == 0x000028, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_DateTimeMinValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_DateTimeMinValue_ReturnValue_2) == 0x000030, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_DateTimeMinValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_EqualEqual_DateTimeDateTime_ReturnValue) == 0x000038, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_EqualEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_GetPlayer_ReturnValue) == 0x000040, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_GetAllItemsByItemID_OutItems) == 0x000048, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_GetAllItemsByItemID_OutItems' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_GetAllItemsByItemID_ReturnValue) == 0x000058, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_GetAllItemsByItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_NotEqual_DateTimeDateTime_ReturnValue_1) == 0x000071, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_NotEqual_DateTimeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_Greater_DateTimeDateTime_ReturnValue) == 0x000072, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_Greater_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_BooleanAND_ReturnValue) == 0x000073, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_RefreshExpireTime, CallFunc_BooleanOR_ReturnValue) == 0x000074, "Member 'BP_UIStaminaExpireTime_C_RefreshExpireTime::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_UIStaminaExpireTime.BP_UIStaminaExpireTime_C.OnUpdateItemInventory
// 0x0040 (0x0040 - 0x0000)
struct BP_UIStaminaExpireTime_C_OnUpdateItemInventory final
{
public:
	class UHottaInventoryComponent*               InventoryComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Slot;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemType;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUpdateType                               ItemUpdateType;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVarList                               UpdateParams;                                      // 0x0018(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_UIStaminaExpireTime_C_OnUpdateItemInventory) == 0x000008, "Wrong alignment on BP_UIStaminaExpireTime_C_OnUpdateItemInventory");
static_assert(sizeof(BP_UIStaminaExpireTime_C_OnUpdateItemInventory) == 0x000040, "Wrong size on BP_UIStaminaExpireTime_C_OnUpdateItemInventory");
static_assert(offsetof(BP_UIStaminaExpireTime_C_OnUpdateItemInventory, InventoryComponent) == 0x000000, "Member 'BP_UIStaminaExpireTime_C_OnUpdateItemInventory::InventoryComponent' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_OnUpdateItemInventory, Param_Slot) == 0x000008, "Member 'BP_UIStaminaExpireTime_C_OnUpdateItemInventory::Param_Slot' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_OnUpdateItemInventory, ItemType) == 0x00000C, "Member 'BP_UIStaminaExpireTime_C_OnUpdateItemInventory::ItemType' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_OnUpdateItemInventory, ItemUpdateType) == 0x000010, "Member 'BP_UIStaminaExpireTime_C_OnUpdateItemInventory::ItemUpdateType' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_OnUpdateItemInventory, UpdateParams) == 0x000018, "Member 'BP_UIStaminaExpireTime_C_OnUpdateItemInventory::UpdateParams' has a wrong offset!");

// Function BP_UIStaminaExpireTime.BP_UIStaminaExpireTime_C.OnRemoveItemInventory
// 0x0020 (0x0020 - 0x0000)
struct BP_UIStaminaExpireTime_C_OnRemoveItemInventory final
{
public:
	class UHottaInventoryComponent*               InventoryComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Slot;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHottaItem*                             HTItem;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemType;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIStaminaExpireTime_C_OnRemoveItemInventory) == 0x000008, "Wrong alignment on BP_UIStaminaExpireTime_C_OnRemoveItemInventory");
static_assert(sizeof(BP_UIStaminaExpireTime_C_OnRemoveItemInventory) == 0x000020, "Wrong size on BP_UIStaminaExpireTime_C_OnRemoveItemInventory");
static_assert(offsetof(BP_UIStaminaExpireTime_C_OnRemoveItemInventory, InventoryComponent) == 0x000000, "Member 'BP_UIStaminaExpireTime_C_OnRemoveItemInventory::InventoryComponent' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_OnRemoveItemInventory, Param_Slot) == 0x000008, "Member 'BP_UIStaminaExpireTime_C_OnRemoveItemInventory::Param_Slot' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_OnRemoveItemInventory, HTItem) == 0x000010, "Member 'BP_UIStaminaExpireTime_C_OnRemoveItemInventory::HTItem' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_OnRemoveItemInventory, ItemType) == 0x000018, "Member 'BP_UIStaminaExpireTime_C_OnRemoveItemInventory::ItemType' has a wrong offset!");

// Function BP_UIStaminaExpireTime.BP_UIStaminaExpireTime_C.ExecuteUbergraph_BP_UIStaminaExpireTime
// 0x0130 (0x0130 - 0x0000)
struct BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaGameState*                        CallFunc_K2_GetGameState_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetServerNow_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UHottaInventoryComponent* InventoryComponent, int32 Slot, int32 ItemType, EItemUpdateType ItemUpdateType, struct FVarList& UpdateParams)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UHottaInventoryComponent* InventoryComponent, int32 Slot, class UHottaItem* HTItem, int32 ItemType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class AQRSLPlayerCharacter*                   CallFunc_GetPlayer_ReturnValue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_DateTimeMinValue_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DateTimeDateTime_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55E7[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFormatLeftTimeText_ReturnValue;        // 0x0050(0x0018)()
	bool                                          CallFunc_IsBalanceServerMode_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55E8[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHottaInventoryComponent*               K2Node_CustomEvent_InventoryComponent_1;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Slot_1;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ItemType_1;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUpdateType                               K2Node_CustomEvent_ItemUpdateType;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E9[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVarList                               K2Node_CustomEvent_UpdateParams;                   // 0x0088(0x0028)(ConstParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x00B0(0x0018)()
	class UHottaItem*                             CallFunc_GetItemBySlot_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55EA[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHottaInventoryComponent*               K2Node_CustomEvent_InventoryComponent;             // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Slot;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55EB[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHottaItem*                             K2Node_CustomEvent_HTItem;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ItemType;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime) == 0x000008, "Wrong alignment on BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime");
static_assert(sizeof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime) == 0x000130, "Wrong size on BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, EntryPoint) == 0x000000, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_K2_GetGameState_ReturnValue) == 0x000008, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_K2_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_GetServerNow_ReturnValue) == 0x000010, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_GetServerNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_GetPlayer_ReturnValue) == 0x000038, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_DateTimeMinValue_ReturnValue) == 0x000040, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_DateTimeMinValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_NotEqual_DateTimeDateTime_ReturnValue) == 0x000048, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_NotEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_GetFormatLeftTimeText_ReturnValue) == 0x000050, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_GetFormatLeftTimeText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_IsBalanceServerMode_ReturnValue) == 0x000068, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_IsBalanceServerMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CustomEvent_InventoryComponent_1) == 0x000070, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CustomEvent_InventoryComponent_1' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CustomEvent_Slot_1) == 0x000078, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CustomEvent_Slot_1' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CustomEvent_ItemType_1) == 0x00007C, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CustomEvent_ItemType_1' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CustomEvent_ItemUpdateType) == 0x000080, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CustomEvent_ItemUpdateType' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CustomEvent_UpdateParams) == 0x000088, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CustomEvent_UpdateParams' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_GetText_ReturnValue) == 0x0000B0, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_GetItemBySlot_ReturnValue) == 0x0000C8, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_GetItemBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_TextIsEmpty_ReturnValue) == 0x0000D0, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CustomEvent_InventoryComponent) == 0x0000D8, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CustomEvent_InventoryComponent' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CustomEvent_Slot) == 0x0000E0, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CustomEvent_HTItem) == 0x0000E8, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CustomEvent_HTItem' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CustomEvent_ItemType) == 0x0000F0, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CustomEvent_ItemType' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000F4, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000F8, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000108, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000110, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_BreakTimespan_Days) == 0x000118, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_BreakTimespan_Hours) == 0x00011C, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_BreakTimespan_Minutes) == 0x000120, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_BreakTimespan_Seconds) == 0x000124, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_BreakTimespan_Milliseconds) == 0x000128, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00012C, "Member 'BP_UIStaminaExpireTime_C_ExecuteUbergraph_BP_UIStaminaExpireTime::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

}

