#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_RecoverRotation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTTask_RecoverRotation.BTTask_RecoverRotation_C.ExecuteUbergraph_BTTask_RecoverRotation
// 0x0058 (0x0058 - 0x0000)
struct BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5785[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaAICharacter*                      K2Node_DynamicCast_AsHotta_AICharacter;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5786[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaAIController*                     K2Node_DynamicCast_AsHotta_AIController;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5787[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetLeaveBattleBackRotation_ReturnValue;   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation) == 0x000008, "Wrong alignment on BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation");
static_assert(sizeof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation) == 0x000058, "Wrong size on BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, EntryPoint) == 0x000000, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, K2Node_Event_OwnerController) == 0x000008, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, K2Node_DynamicCast_AsHotta_AICharacter) == 0x000018, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::K2Node_DynamicCast_AsHotta_AICharacter' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, K2Node_DynamicCast_AsHotta_AIController) == 0x000028, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::K2Node_DynamicCast_AsHotta_AIController' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, CallFunc_GetLeaveBattleBackRotation_ReturnValue) == 0x000034, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::CallFunc_GetLeaveBattleBackRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, CallFunc_BreakRotator_Roll) == 0x000040, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, CallFunc_BreakRotator_Pitch) == 0x000044, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, CallFunc_BreakRotator_Yaw) == 0x000048, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation, CallFunc_MakeRotator_ReturnValue) == 0x00004C, "Member 'BTTask_RecoverRotation_C_ExecuteUbergraph_BTTask_RecoverRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BTTask_RecoverRotation.BTTask_RecoverRotation_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_RecoverRotation_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_RecoverRotation_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_RecoverRotation_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_RecoverRotation_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_RecoverRotation_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_RecoverRotation_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_RecoverRotation_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_RecoverRotation_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_RecoverRotation_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

