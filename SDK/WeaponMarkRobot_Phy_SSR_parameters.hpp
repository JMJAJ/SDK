#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponMarkRobot_Phy_SSR

#include "Basic.hpp"


namespace SDK::Params
{

// Function WeaponMarkRobot_Phy_SSR.WeaponMarkRobot_Phy_SSR_C.ExecuteUbergraph_WeaponMarkRobot_Phy_SSR
// 0x0060 (0x0060 - 0x0000)
struct WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bAimming)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_59BD[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaCharacter*                        K2Node_Event_CharacterOwner_1;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaCharacter*                        K2Node_Event_CharacterOwner;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59BE[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaPlayerCharacter*                  K2Node_DynamicCast_AsHotta_Player_Character;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59BF[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaPlayerCharacter*                  K2Node_DynamicCast_AsHotta_Player_Character_1;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59C0[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bAimming)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR) == 0x000008, "Wrong alignment on WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR");
static_assert(sizeof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR) == 0x000060, "Wrong size on WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, EntryPoint) == 0x000000, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, K2Node_Event_CharacterOwner_1) == 0x000018, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::K2Node_Event_CharacterOwner_1' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, K2Node_Event_CharacterOwner) == 0x000020, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::K2Node_Event_CharacterOwner' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, K2Node_DynamicCast_AsHotta_Player_Character) == 0x000030, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::K2Node_DynamicCast_AsHotta_Player_Character' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, K2Node_DynamicCast_AsHotta_Player_Character_1) == 0x000040, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::K2Node_DynamicCast_AsHotta_Player_Character_1' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR, K2Node_CreateDelegate_OutputDelegate_1) == 0x00004C, "Member 'WeaponMarkRobot_Phy_SSR_C_ExecuteUbergraph_WeaponMarkRobot_Phy_SSR::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WeaponMarkRobot_Phy_SSR.WeaponMarkRobot_Phy_SSR_C.K2_UnBindEventDelegate
// 0x0008 (0x0008 - 0x0000)
struct WeaponMarkRobot_Phy_SSR_C_K2_UnBindEventDelegate final
{
public:
	class AHottaCharacter*                        CharacterOwner;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponMarkRobot_Phy_SSR_C_K2_UnBindEventDelegate) == 0x000008, "Wrong alignment on WeaponMarkRobot_Phy_SSR_C_K2_UnBindEventDelegate");
static_assert(sizeof(WeaponMarkRobot_Phy_SSR_C_K2_UnBindEventDelegate) == 0x000008, "Wrong size on WeaponMarkRobot_Phy_SSR_C_K2_UnBindEventDelegate");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_K2_UnBindEventDelegate, CharacterOwner) == 0x000000, "Member 'WeaponMarkRobot_Phy_SSR_C_K2_UnBindEventDelegate::CharacterOwner' has a wrong offset!");

// Function WeaponMarkRobot_Phy_SSR.WeaponMarkRobot_Phy_SSR_C.K2_BindEventDelegate
// 0x0008 (0x0008 - 0x0000)
struct WeaponMarkRobot_Phy_SSR_C_K2_BindEventDelegate final
{
public:
	class AHottaCharacter*                        CharacterOwner;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponMarkRobot_Phy_SSR_C_K2_BindEventDelegate) == 0x000008, "Wrong alignment on WeaponMarkRobot_Phy_SSR_C_K2_BindEventDelegate");
static_assert(sizeof(WeaponMarkRobot_Phy_SSR_C_K2_BindEventDelegate) == 0x000008, "Wrong size on WeaponMarkRobot_Phy_SSR_C_K2_BindEventDelegate");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_K2_BindEventDelegate, CharacterOwner) == 0x000000, "Member 'WeaponMarkRobot_Phy_SSR_C_K2_BindEventDelegate::CharacterOwner' has a wrong offset!");

// Function WeaponMarkRobot_Phy_SSR.WeaponMarkRobot_Phy_SSR_C.OwnerCharacterAimmingChanged
// 0x0028 (0x0028 - 0x0000)
struct WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged final
{
public:
	bool                                          bAimming;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59C1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59C2[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged) == 0x000008, "Wrong alignment on WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged");
static_assert(sizeof(WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged) == 0x000028, "Wrong size on WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged, bAimming) == 0x000000, "Member 'WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged::bAimming' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000018, "Member 'WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged, CallFunc_Montage_Play_ReturnValue) == 0x000020, "Member 'WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged, CallFunc_IsValid_ReturnValue_1) == 0x000024, "Member 'WeaponMarkRobot_Phy_SSR_C_OwnerCharacterAimmingChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

