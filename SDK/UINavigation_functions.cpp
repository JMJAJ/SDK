#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UINavigation

#include "Basic.hpp"

#include "UINavigation_classes.hpp"
#include "UINavigation_parameters.hpp"


namespace SDK
{

// Function UINavigation.NavigationWidgetBase.ContainsAnyTagByDefaultTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TSet<class FName>                       SubTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNavigationWidgetBase::ContainsAnyTagByDefaultTags(const TSet<class FName>& SubTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "ContainsAnyTagByDefaultTags");

	Params::NavigationWidgetBase_ContainsAnyTagByDefaultTags Parms{};

	Parms.SubTags = std::move(SubTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.ContainsTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             MainTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SubTag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNavigationWidgetBase::ContainsTag(class FName MainTag, class FName SubTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "ContainsTag");

	Params::NavigationWidgetBase_ContainsTag Parms{};

	Parms.MainTag = MainTag;
	Parms.SubTag = SubTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.ContainsTagByDefaultTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             SubTag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNavigationWidgetBase::ContainsTagByDefaultTag(class FName SubTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "ContainsTagByDefaultTag");

	Params::NavigationWidgetBase_ContainsTagByDefaultTag Parms{};

	Parms.SubTag = SubTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.ContainsTagByNavigationTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             SubTag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNavigationWidgetBase::ContainsTagByNavigationTag(class FName SubTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "ContainsTagByNavigationTag");

	Params::NavigationWidgetBase_ContainsTagByNavigationTag Parms{};

	Parms.SubTag = SubTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.ContainsTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             MainTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<class FName>                       SubTags                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNavigationWidgetBase::ContainsTags(class FName MainTag, TSet<class FName>* SubTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "ContainsTags");

	Params::NavigationWidgetBase_ContainsTags Parms{};

	Parms.MainTag = MainTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SubTags != nullptr)
		*SubTags = std::move(Parms.SubTags);

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.GetAbsolutePosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UNavigationWidgetBase::GetAbsolutePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "GetAbsolutePosition");

	Params::NavigationWidgetBase_GetAbsolutePosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.GetDrawSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UNavigationWidgetBase::GetDrawSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "GetDrawSize");

	Params::NavigationWidgetBase_GetDrawSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.GetLocalSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UNavigationWidgetBase::GetLocalSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "GetLocalSize");

	Params::NavigationWidgetBase_GetLocalSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.GetTouchPosition
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UNavigationWidgetBase::GetTouchPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "GetTouchPosition");

	Params::NavigationWidgetBase_GetTouchPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.GetUserWidgetChildFromName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InUserWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InWidgetName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UNavigationWidgetBase::GetUserWidgetChildFromName(class UUserWidget* InUserWidget, class FName InWidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "GetUserWidgetChildFromName");

	Params::NavigationWidgetBase_GetUserWidgetChildFromName Parms{};

	Parms.InUserWidget = InUserWidget;
	Parms.InWidgetName = InWidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.GetWidgetCenterPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                          InWidget                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UNavigationWidgetBase::GetWidgetCenterPosition(const class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "GetWidgetCenterPosition");

	Params::NavigationWidgetBase_GetWidgetCenterPosition Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.IsVisibleRecursive
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNavigationWidgetBase::IsVisibleRecursive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "IsVisibleRecursive");

	Params::NavigationWidgetBase_IsVisibleRecursive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.IsWidgetReachable
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNavigationWidgetBase::IsWidgetReachable(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "IsWidgetReachable");

	Params::NavigationWidgetBase_IsWidgetReachable Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.GetOwnerViewportWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UNavigationWidgetBase::GetOwnerViewportWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "GetOwnerViewportWidget");

	Params::NavigationWidgetBase_GetOwnerViewportWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetBase.GetWidgetGeneratedUserWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          InWidget                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UNavigationWidgetBase::GetWidgetGeneratedUserWidget(const class UWidget* InWidget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetBase", "GetWidgetGeneratedUserWidget");

	Params::NavigationWidgetBase_GetWidgetGeneratedUserWidget Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.CategorySwitcherWidget.SelectCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCategorySwitcherWidget::SelectCategory(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CategorySwitcherWidget", "SelectCategory");

	Params::CategorySwitcherWidget_SelectCategory Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.CategorySwitcherWidget.SelectCategoryFromKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputEvent                             InputEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCategorySwitcherWidget::SelectCategoryFromKey(const struct FKey& Key, EInputEvent InputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CategorySwitcherWidget", "SelectCategoryFromKey");

	Params::CategorySwitcherWidget_SelectCategoryFromKey Parms{};

	Parms.Key = std::move(Key);
	Parms.InputEvent = InputEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.CategorySwitcherWidget.SetActivateCategoryIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCategorySwitcherWidget::SetActivateCategoryIndex(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CategorySwitcherWidget", "SetActivateCategoryIndex");

	Params::CategorySwitcherWidget_SetActivateCategoryIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.CategorySwitcherWidget.GetActivatedCategoryIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCategorySwitcherWidget::GetActivatedCategoryIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CategorySwitcherWidget", "GetActivatedCategoryIndex");

	Params::CategorySwitcherWidget_GetActivatedCategoryIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.KeysActionWidget.HandledAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InbIsHandled                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeysActionWidget::HandledAction(bool InbIsHandled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "HandledAction");

	Params::KeysActionWidget_HandledAction Parms{};

	Parms.InbIsHandled = InbIsHandled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.KeysActionWidget.HasKeyAction
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeysActionWidget::HasKeyAction(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "HasKeyAction");

	Params::KeysActionWidget_HasKeyAction Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.KeysActionWidget.IsGamepadKeyAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeysActionWidget::IsGamepadKeyAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "IsGamepadKeyAction");

	Params::KeysActionWidget_IsGamepadKeyAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.KeysActionWidget.IsKeyboardKeyAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeysActionWidget::IsKeyboardKeyAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "IsKeyboardKeyAction");

	Params::KeysActionWidget_IsKeyboardKeyAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.KeysActionWidget.IsPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeysActionWidget::IsPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "IsPressed");

	Params::KeysActionWidget_IsPressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.KeysActionWidget.IsReleased
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeysActionWidget::IsReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "IsReleased");

	Params::KeysActionWidget_IsReleased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction UINavigation.KeysActionWidget.OnClickedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UKeysActionWidget::OnClickedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "OnClickedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction UINavigation.KeysActionWidget.OnClickedDelegateWithObject__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeysActionWidget::OnClickedDelegateWithObject__DelegateSignature(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "OnClickedDelegateWithObject__DelegateSignature");

	Params::KeysActionWidget_OnClickedDelegateWithObject__DelegateSignature Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction UINavigation.KeysActionWidget.OnReceiveActionDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EInputEvent                             InputEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeysActionWidget::OnReceiveActionDelegate__DelegateSignature(EInputEvent InputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "OnReceiveActionDelegate__DelegateSignature");

	Params::KeysActionWidget_OnReceiveActionDelegate__DelegateSignature Parms{};

	Parms.InputEvent = InputEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UINavigation.KeysActionWidget.Rebuild
// (Native, Public, BlueprintCallable)

void UKeysActionWidget::Rebuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "Rebuild");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.KeysActionWidget.SetGamepadKeyVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeysActionWidget::SetGamepadKeyVisibility(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "SetGamepadKeyVisibility");

	Params::KeysActionWidget_SetGamepadKeyVisibility Parms{};

	Parms.NewVisibility = NewVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.KeysActionWidget.SetPCKeyVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeysActionWidget::SetPCKeyVisibility(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "SetPCKeyVisibility");

	Params::KeysActionWidget_SetPCKeyVisibility Parms{};

	Parms.NewVisibility = NewVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.KeysActionWidget.IsGamepadInputTypeCurrently
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeysActionWidget::IsGamepadInputTypeCurrently() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "IsGamepadInputTypeCurrently");

	Params::KeysActionWidget_IsGamepadInputTypeCurrently Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.KeysActionWidget.IsKeyboardInputTypeCurrently
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeysActionWidget::IsKeyboardInputTypeCurrently() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeysActionWidget", "IsKeyboardInputTypeCurrently");

	Params::KeysActionWidget_IsKeyboardInputTypeCurrently Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationProcessorWidget.BP_GetWidgetFromName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InUserWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UNavigationProcessorWidget::BP_GetWidgetFromName(class UUserWidget* InUserWidget, class FName WidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationProcessorWidget", "BP_GetWidgetFromName");

	Params::NavigationProcessorWidget_BP_GetWidgetFromName Parms{};

	Parms.InUserWidget = InUserWidget;
	Parms.WidgetName = WidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationProcessorWidget.BP_HandleInputAxis
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        LeftStickValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        RightStickValue                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNavigationProcessorWidget::BP_HandleInputAxis(const struct FVector2D& LeftStickValue, const struct FVector2D& RightStickValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationProcessorWidget", "BP_HandleInputAxis");

	Params::NavigationProcessorWidget_BP_HandleInputAxis Parms{};

	Parms.LeftStickValue = std::move(LeftStickValue);
	Parms.RightStickValue = std::move(RightStickValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationProcessorWidget.BP_HandleInputKey
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputEvent                             InputEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNavigationProcessorWidget::BP_HandleInputKey(const struct FKey& Key, EInputEvent InputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationProcessorWidget", "BP_HandleInputKey");

	Params::NavigationProcessorWidget_BP_HandleInputKey Parms{};

	Parms.Key = std::move(Key);
	Parms.InputEvent = InputEvent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationProcessorWidget.BP_HandleNavigation
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputEvent                             InputEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNavigationProcessorWidget::BP_HandleNavigation(const struct FKey& Key, EInputEvent InputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationProcessorWidget", "BP_HandleNavigation");

	Params::NavigationProcessorWidget_BP_HandleNavigation Parms{};

	Parms.Key = std::move(Key);
	Parms.InputEvent = InputEvent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationProcessorWidget.BP_OnWidgetFocused
// (Event, Public, BlueprintEvent)
// Parameters:
// class UUINavigationWidget*              InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNavigationProcessorWidget::BP_OnWidgetFocused(class UUINavigationWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationProcessorWidget", "BP_OnWidgetFocused");

	Params::NavigationProcessorWidget_BP_OnWidgetFocused Parms{};

	Parms.InWidget = InWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UINavigation.NavigationProcessorWidget.BP_OnWidgetUnFocused
// (Event, Public, BlueprintEvent)
// Parameters:
// class UUINavigationWidget*              InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNavigationProcessorWidget::BP_OnWidgetUnFocused(class UUINavigationWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationProcessorWidget", "BP_OnWidgetUnFocused");

	Params::NavigationProcessorWidget_BP_OnWidgetUnFocused Parms{};

	Parms.InWidget = InWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UINavigation.NavigationProcessorWidget.GetEntryWidgetFromItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UListView*                        InListView                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InItem                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UNavigationProcessorWidget::GetEntryWidgetFromItem(const class UListView* InListView, const class UObject* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationProcessorWidget", "GetEntryWidgetFromItem");

	Params::NavigationProcessorWidget_GetEntryWidgetFromItem Parms{};

	Parms.InListView = InListView;
	Parms.InItem = InItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationProcessorWidget.GetOwnerUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UNavigationProcessorWidget::GetOwnerUserWidget(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationProcessorWidget", "GetOwnerUserWidget");

	Params::NavigationProcessorWidget_GetOwnerUserWidget Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationProcessorWidget.GetOwnerViewportWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UNavigationProcessorWidget::GetOwnerViewportWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationProcessorWidget", "GetOwnerViewportWidget");

	Params::NavigationProcessorWidget_GetOwnerViewportWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.NavigationWidgetClickInterface.BP_NavigationInterface_Click
// (Event, Public, BlueprintEvent)

void INavigationWidgetClickInterface::BP_NavigationInterface_Click()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetClickInterface", "BP_NavigationInterface_Click");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UINavigation.NavigationWidgetClickInterface.BP_NavigationInterface_Press
// (Event, Public, BlueprintEvent)

void INavigationWidgetClickInterface::BP_NavigationInterface_Press()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetClickInterface", "BP_NavigationInterface_Press");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UINavigation.NavigationWidgetClickInterface.BP_NavigationInterface_Release
// (Event, Public, BlueprintEvent)

void INavigationWidgetClickInterface::BP_NavigationInterface_Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NavigationWidgetClickInterface", "BP_NavigationInterface_Release");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UINavigation.UINavigationSubsystem.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULocalPlayer*                     LocalPlayer                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUINavigationSubsystem*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUINavigationSubsystem* UUINavigationSubsystem::Get(const class ULocalPlayer* LocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UINavigationSubsystem", "Get");

	Params::UINavigationSubsystem_Get Parms{};

	Parms.LocalPlayer = LocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.ActivateTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUINavigationWidget*              InNavigationWidget                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNavigate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::ActivateTab(class UUINavigationWidget* InNavigationWidget, bool bNavigate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "ActivateTab");

	Params::UINavigationSubsystem_ActivateTab Parms{};

	Parms.InNavigationWidget = InNavigationWidget;
	Parms.bNavigate = bNavigate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.BuildCommandMenus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             CommandMenusWidget                                     (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUINavigationSubsystem::BuildCommandMenus(TSoftClassPtr<class UClass> CommandMenusWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "BuildCommandMenus");

	Params::UINavigationSubsystem_BuildCommandMenus Parms{};

	Parms.CommandMenusWidget = CommandMenusWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.BuildCommandMenusWithKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             CommandMenusWidget                                     (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUINavigationSubsystem::BuildCommandMenusWithKey(const struct FKey& Key, TSoftClassPtr<class UClass> CommandMenusWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "BuildCommandMenusWithKey");

	Params::UINavigationSubsystem_BuildCommandMenusWithKey Parms{};

	Parms.Key = std::move(Key);
	Parms.CommandMenusWidget = CommandMenusWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.CancelFocus
// (Final, Native, Public, BlueprintCallable)

void UUINavigationSubsystem::CancelFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "CancelFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.ClearCursorRequireKeys
// (Final, Native, Public, BlueprintCallable)

void UUINavigationSubsystem::ClearCursorRequireKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "ClearCursorRequireKeys");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.ClearGroups
// (Native, Public, BlueprintCallable)

void UUINavigationSubsystem::ClearGroups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "ClearGroups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.EnableEvaluateWindowsMouseCursor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::EnableEvaluateWindowsMouseCursor(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "EnableEvaluateWindowsMouseCursor");

	Params::UINavigationSubsystem_EnableEvaluateWindowsMouseCursor Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.ExitCurrentGroup
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationSubsystem::ExitCurrentGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "ExitCurrentGroup");

	Params::UINavigationSubsystem_ExitCurrentGroup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.ExitGroup
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NextGroupName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationSubsystem::ExitGroup(class FName NextGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "ExitGroup");

	Params::UINavigationSubsystem_ExitGroup Parms{};

	Parms.NextGroupName = NextGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.GetCursorMoveMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGamepadCursorMoveMethod                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGamepadCursorMoveMethod UUINavigationSubsystem::GetCursorMoveMethod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "GetCursorMoveMethod");

	Params::UINavigationSubsystem_GetCursorMoveMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.GetCursorMoveMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGamepadCursorMoveMode                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGamepadCursorMoveMode UUINavigationSubsystem::GetCursorMoveMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "GetCursorMoveMode");

	Params::UINavigationSubsystem_GetCursorMoveMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.GetCursorSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUINavigationSubsystem::GetCursorSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "GetCursorSensitivity");

	Params::UINavigationSubsystem_GetCursorSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.GetCursorSpeed
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        AxisValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UUINavigationSubsystem::GetCursorSpeed(const struct FVector2D& AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "GetCursorSpeed");

	Params::UINavigationSubsystem_GetCursorSpeed Parms{};

	Parms.AxisValue = std::move(AxisValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.GetFocusedWidgetFromTopViewportWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUINavigationWidget*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUINavigationWidget* UUINavigationSubsystem::GetFocusedWidgetFromTopViewportWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "GetFocusedWidgetFromTopViewportWidget");

	Params::UINavigationSubsystem_GetFocusedWidgetFromTopViewportWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.GetKeysAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UKeysActionWidget*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKeysActionWidget* UUINavigationSubsystem::GetKeysAction(class FName WidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "GetKeysAction");

	Params::UINavigationSubsystem_GetKeysAction Parms{};

	Parms.WidgetName = WidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.GetTopViewportWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUINavigationSubsystem::GetTopViewportWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "GetTopViewportWidget");

	Params::UINavigationSubsystem_GetTopViewportWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.GetUINavigationWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUINavigationWidget*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUINavigationWidget* UUINavigationSubsystem::GetUINavigationWidget(class FName WidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "GetUINavigationWidget");

	Params::UINavigationSubsystem_GetUINavigationWidget Parms{};

	Parms.WidgetName = WidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.HideCursor
// (Final, Native, Public, BlueprintCallable)

void UUINavigationSubsystem::HideCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "HideCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.IsKeyDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationSubsystem::IsKeyDown(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "IsKeyDown");

	Params::UINavigationSubsystem_IsKeyDown Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.IsNavigationEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationSubsystem::IsNavigationEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "IsNavigationEnabled");

	Params::UINavigationSubsystem_IsNavigationEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.IsTopViewportWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*                      InUserWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationSubsystem::IsTopViewportWidget(class UUserWidget* InUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "IsTopViewportWidget");

	Params::UINavigationSubsystem_IsTopViewportWidget Parms{};

	Parms.InUserWidget = InUserWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.NavigateToWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUINavigationWidget*              InNavigationWidget                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCancelFocusedWidget                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::NavigateToWidget(class UUINavigationWidget* InNavigationWidget, bool bCancelFocusedWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "NavigateToWidget");

	Params::UINavigationSubsystem_NavigateToWidget Parms{};

	Parms.InNavigationWidget = InNavigationWidget;
	Parms.bCancelFocusedWidget = bCancelFocusedWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.PushViewportWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InUserWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::PushViewportWidget(class UUserWidget* InUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "PushViewportWidget");

	Params::UINavigationSubsystem_PushViewportWidget Parms{};

	Parms.InUserWidget = InUserWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.ReleaseCommandMenus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationSubsystem::ReleaseCommandMenus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "ReleaseCommandMenus");

	Params::UINavigationSubsystem_ReleaseCommandMenus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.RemoveViewportWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InUserWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::RemoveViewportWidget(class UUserWidget* InUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "RemoveViewportWidget");

	Params::UINavigationSubsystem_RemoveViewportWidget Parms{};

	Parms.InUserWidget = InUserWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.RequestNavigateToNextGroup
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NextGroupName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationSubsystem::RequestNavigateToNextGroup(class FName NextGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "RequestNavigateToNextGroup");

	Params::UINavigationSubsystem_RequestNavigateToNextGroup Parms{};

	Parms.NextGroupName = NextGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.ResetCursorRequireKeys
// (Final, Native, Public, BlueprintCallable)

void UUINavigationSubsystem::ResetCursorRequireKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "ResetCursorRequireKeys");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.SetCursorMoveMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGamepadCursorMoveMethod                MoveMethod                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::SetCursorMoveMethod(EGamepadCursorMoveMethod MoveMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "SetCursorMoveMethod");

	Params::UINavigationSubsystem_SetCursorMoveMethod Parms{};

	Parms.MoveMethod = MoveMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.SetCursorMoveMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGamepadCursorMoveMode                  MoveMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::SetCursorMoveMode(EGamepadCursorMoveMode MoveMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "SetCursorMoveMode");

	Params::UINavigationSubsystem_SetCursorMoveMode Parms{};

	Parms.MoveMode = MoveMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.SetCursorSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Sensitivity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::SetCursorSensitivity(float Sensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "SetCursorSensitivity");

	Params::UINavigationSubsystem_SetCursorSensitivity Parms{};

	Parms.Sensitivity = Sensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.SetCursorSlowDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::SetCursorSlowDown(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "SetCursorSlowDown");

	Params::UINavigationSubsystem_SetCursorSlowDown Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.SetNavigationEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableNavigation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::SetNavigationEnable(bool bEnableNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "SetNavigationEnable");

	Params::UINavigationSubsystem_SetNavigationEnable Parms{};

	Parms.bEnableNavigation = bEnableNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.ShowCursor
// (Final, Native, Public, BlueprintCallable)

void UUINavigationSubsystem::ShowCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "ShowCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.ShowOrHideCursor
// (Final, Native, Public, BlueprintCallable)

void UUINavigationSubsystem::ShowOrHideCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "ShowOrHideCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.SimulateTouched
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        TouchLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::SimulateTouched(const struct FVector2D& TouchLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "SimulateTouched");

	Params::UINavigationSubsystem_SimulateTouched Parms{};

	Parms.TouchLocation = std::move(TouchLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.SimulateTouchEnded
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        TouchLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::SimulateTouchEnded(const struct FVector2D& TouchLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "SimulateTouchEnded");

	Params::UINavigationSubsystem_SimulateTouchEnded Parms{};

	Parms.TouchLocation = std::move(TouchLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.SimulateTouchMoved
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        TouchLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::SimulateTouchMoved(const struct FVector2D& TouchLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "SimulateTouchMoved");

	Params::UINavigationSubsystem_SimulateTouchMoved Parms{};

	Parms.TouchLocation = std::move(TouchLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.SimulateTouchStarted
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        TouchLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationSubsystem::SimulateTouchStarted(const struct FVector2D& TouchLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "SimulateTouchStarted");

	Params::UINavigationSubsystem_SimulateTouchStarted Parms{};

	Parms.TouchLocation = std::move(TouchLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationSubsystem.IsCursorVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationSubsystem::IsCursorVisible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "IsCursorVisible");

	Params::UINavigationSubsystem_IsCursorVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.IsGamepadInputType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationSubsystem::IsGamepadInputType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "IsGamepadInputType");

	Params::UINavigationSubsystem_IsGamepadInputType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationSubsystem.IsKeyboardEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationSubsystem::IsKeyboardEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationSubsystem", "IsKeyboardEnabled");

	Params::UINavigationSubsystem_IsKeyboardEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.ActivateTab
// (Final, Native, Public, BlueprintCallable)

void UUINavigationWidget::ActivateTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "ActivateTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.DeactivateTab
// (Final, Native, Public, BlueprintCallable)

void UUINavigationWidget::DeactivateTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "DeactivateTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction UINavigation.UINavigationWidget.FocusEventDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UUINavigationWidget::FocusEventDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "FocusEventDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UINavigation.UINavigationWidget.IsTabActivated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationWidget::IsTabActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "IsTabActivated");

	Params::UINavigationWidget_IsTabActivated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.OnEntryReleased
// (Final, Native, Public, BlueprintCallable)

void UUINavigationWidget::OnEntryReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "OnEntryReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.OnEntrySet
// (Final, Native, Public, BlueprintCallable)

void UUINavigationWidget::OnEntrySet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "OnEntrySet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.OnLostFocus
// (Native, Public, BlueprintCallable)

void UUINavigationWidget::OnLostFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "OnLostFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.OnReceiveFocus
// (Native, Public, BlueprintCallable)

void UUINavigationWidget::OnReceiveFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "OnReceiveFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.OnSelected
// (Native, Public, BlueprintCallable)

void UUINavigationWidget::OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "OnSelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.Rebuild
// (Final, Native, Public, BlueprintCallable)

void UUINavigationWidget::Rebuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "Rebuild");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.RebuildFromNavigationSubsystem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUINavigationSubsystem*           UINavigationSubsystem                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationWidget::RebuildFromNavigationSubsystem(class UUINavigationSubsystem* UINavigationSubsystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "RebuildFromNavigationSubsystem");

	Params::UINavigationWidget_RebuildFromNavigationSubsystem Parms{};

	Parms.UINavigationSubsystem = UINavigationSubsystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.ReleaseFromNavigationSubsystem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUINavigationSubsystem*           UINavigationSubsystem                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationWidget::ReleaseFromNavigationSubsystem(class UUINavigationSubsystem* UINavigationSubsystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "ReleaseFromNavigationSubsystem");

	Params::UINavigationWidget_ReleaseFromNavigationSubsystem Parms{};

	Parms.UINavigationSubsystem = UINavigationSubsystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.SetEnableFocus
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableFocus                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationWidget::SetEnableFocus(bool bEnableFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "SetEnableFocus");

	Params::UINavigationWidget_SetEnableFocus Parms{};

	Parms.bEnableFocus = bEnableFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.SetFocusBrush
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUINavigationWidget::SetFocusBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "SetFocusBrush");

	Params::UINavigationWidget_SetFocusBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.SetRectOffset
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMargin                          InRectOffset                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UUINavigationWidget::SetRectOffset(const struct FMargin& InRectOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "SetRectOffset");

	Params::UINavigationWidget_SetRectOffset Parms{};

	Parms.InRectOffset = std::move(InRectOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UINavigation.UINavigationWidget.GetCustomFocusWidgetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UUINavigationWidget::GetCustomFocusWidgetType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "GetCustomFocusWidgetType");

	Params::UINavigationWidget_GetCustomFocusWidgetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.GetIndexInWrapper
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUINavigationWidget::GetIndexInWrapper() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "GetIndexInWrapper");

	Params::UINavigationWidget_GetIndexInWrapper Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.GetNavigationWidgetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUINavigationWidgetType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUINavigationWidgetType UUINavigationWidget::GetNavigationWidgetType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "GetNavigationWidgetType");

	Params::UINavigationWidget_GetNavigationWidgetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.GetStaticNavigationIndex_Down
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUINavigationWidget::GetStaticNavigationIndex_Down() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "GetStaticNavigationIndex_Down");

	Params::UINavigationWidget_GetStaticNavigationIndex_Down Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.GetStaticNavigationIndex_Left
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUINavigationWidget::GetStaticNavigationIndex_Left() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "GetStaticNavigationIndex_Left");

	Params::UINavigationWidget_GetStaticNavigationIndex_Left Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.GetStaticNavigationIndex_Right
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUINavigationWidget::GetStaticNavigationIndex_Right() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "GetStaticNavigationIndex_Right");

	Params::UINavigationWidget_GetStaticNavigationIndex_Right Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.GetStaticNavigationIndex_Self
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUINavigationWidget::GetStaticNavigationIndex_Self() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "GetStaticNavigationIndex_Self");

	Params::UINavigationWidget_GetStaticNavigationIndex_Self Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.GetStaticNavigationIndex_Up
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUINavigationWidget::GetStaticNavigationIndex_Up() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "GetStaticNavigationIndex_Up");

	Params::UINavigationWidget_GetStaticNavigationIndex_Up Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.HasFocus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationWidget::HasFocus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "HasFocus");

	Params::UINavigationWidget_HasFocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.IsStaticNavigationAutoCalculateLeftOrRight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationWidget::IsStaticNavigationAutoCalculateLeftOrRight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "IsStaticNavigationAutoCalculateLeftOrRight");

	Params::UINavigationWidget_IsStaticNavigationAutoCalculateLeftOrRight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UINavigation.UINavigationWidget.IsStaticNavigationWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUINavigationWidget::IsStaticNavigationWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationWidget", "IsStaticNavigationWidget");

	Params::UINavigationWidget_IsStaticNavigationWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

