#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SetVelocityNS

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SetVelocityNS.SetVelocityNS_C
// 0x0010 (0x0040 - 0x0030)
class USetVelocityNS_C final : public UAnimNotifyState
{
public:
	struct FVector                                Velocity;                                          // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SetVelocityNS_C">();
	}
	static class USetVelocityNS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetVelocityNS_C>();
	}
};
static_assert(alignof(USetVelocityNS_C) == 0x000008, "Wrong alignment on USetVelocityNS_C");
static_assert(sizeof(USetVelocityNS_C) == 0x000040, "Wrong size on USetVelocityNS_C");
static_assert(offsetof(USetVelocityNS_C, Velocity) == 0x000030, "Member 'USetVelocityNS_C::Velocity' has a wrong offset!");
static_assert(offsetof(USetVelocityNS_C, GravityScale) == 0x00003C, "Member 'USetVelocityNS_C::GravityScale' has a wrong offset!");

}

