#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Slua_unreal_425

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// Class slua_unreal_425.INTLLatentDelegate
// 0x0008 (0x0030 - 0x0028)
class UINTLLatentDelegate final : public UObject
{
public:
	uint8                                         Pad_53C2[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLatentCallback(int32 ThreadRef);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLatentDelegate">();
	}
	static class UINTLLatentDelegate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UINTLLatentDelegate>();
	}
};
static_assert(alignof(UINTLLatentDelegate) == 0x000008, "Wrong alignment on UINTLLatentDelegate");
static_assert(sizeof(UINTLLatentDelegate) == 0x000030, "Wrong size on UINTLLatentDelegate");

// Class slua_unreal_425.INTLLuaActor
// 0x00B0 (0x02E8 - 0x0238)
class AINTLLuaActor final : public AActor
{
public:
	uint8                                         Pad_53C3[0x90];                                    // 0x0238(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LuaFilePath;                                       // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LuaStateName;                                      // 0x02D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	struct FINTLLuaBPVar CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaActor">();
	}
	static class AINTLLuaActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTLLuaActor>();
	}
};
static_assert(alignof(AINTLLuaActor) == 0x000008, "Wrong alignment on AINTLLuaActor");
static_assert(sizeof(AINTLLuaActor) == 0x0002E8, "Wrong size on AINTLLuaActor");
static_assert(offsetof(AINTLLuaActor, LuaFilePath) == 0x0002C8, "Member 'AINTLLuaActor::LuaFilePath' has a wrong offset!");
static_assert(offsetof(AINTLLuaActor, LuaStateName) == 0x0002D8, "Member 'AINTLLuaActor::LuaStateName' has a wrong offset!");

// Class slua_unreal_425.INTLLuaPawn
// 0x00B0 (0x0348 - 0x0298)
class AINTLLuaPawn final : public APawn
{
public:
	uint8                                         Pad_53C4[0x90];                                    // 0x0298(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LuaFilePath;                                       // 0x0328(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LuaStateName;                                      // 0x0338(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	struct FINTLLuaBPVar CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaPawn">();
	}
	static class AINTLLuaPawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTLLuaPawn>();
	}
};
static_assert(alignof(AINTLLuaPawn) == 0x000008, "Wrong alignment on AINTLLuaPawn");
static_assert(sizeof(AINTLLuaPawn) == 0x000348, "Wrong size on AINTLLuaPawn");
static_assert(offsetof(AINTLLuaPawn, LuaFilePath) == 0x000328, "Member 'AINTLLuaPawn::LuaFilePath' has a wrong offset!");
static_assert(offsetof(AINTLLuaPawn, LuaStateName) == 0x000338, "Member 'AINTLLuaPawn::LuaStateName' has a wrong offset!");

// Class slua_unreal_425.INTLLuaCharacter
// 0x00B0 (0x0580 - 0x04D0)
class AINTLLuaCharacter final : public ACharacter
{
public:
	uint8                                         Pad_53C5[0x90];                                    // 0x04C8(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LuaFilePath;                                       // 0x0558(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LuaStateName;                                      // 0x0568(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_53C6[0x8];                                     // 0x0578(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FINTLLuaBPVar CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaCharacter">();
	}
	static class AINTLLuaCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTLLuaCharacter>();
	}
};
static_assert(alignof(AINTLLuaCharacter) == 0x000010, "Wrong alignment on AINTLLuaCharacter");
static_assert(sizeof(AINTLLuaCharacter) == 0x000580, "Wrong size on AINTLLuaCharacter");
static_assert(offsetof(AINTLLuaCharacter, LuaFilePath) == 0x000558, "Member 'AINTLLuaCharacter::LuaFilePath' has a wrong offset!");
static_assert(offsetof(AINTLLuaCharacter, LuaStateName) == 0x000568, "Member 'AINTLLuaCharacter::LuaStateName' has a wrong offset!");

// Class slua_unreal_425.INTLLuaController
// 0x00B0 (0x0360 - 0x02B0)
class AINTLLuaController final : public AController
{
public:
	uint8                                         Pad_53C7[0x90];                                    // 0x02B0(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LuaFilePath;                                       // 0x0340(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LuaStateName;                                      // 0x0350(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	struct FINTLLuaBPVar CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaController">();
	}
	static class AINTLLuaController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTLLuaController>();
	}
};
static_assert(alignof(AINTLLuaController) == 0x000008, "Wrong alignment on AINTLLuaController");
static_assert(sizeof(AINTLLuaController) == 0x000360, "Wrong size on AINTLLuaController");
static_assert(offsetof(AINTLLuaController, LuaFilePath) == 0x000340, "Member 'AINTLLuaController::LuaFilePath' has a wrong offset!");
static_assert(offsetof(AINTLLuaController, LuaStateName) == 0x000350, "Member 'AINTLLuaController::LuaStateName' has a wrong offset!");

// Class slua_unreal_425.INTLLuaPlayerController
// 0x00B0 (0x0638 - 0x0588)
class AINTLLuaPlayerController final : public APlayerController
{
public:
	uint8                                         Pad_53C8[0x90];                                    // 0x0588(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LuaFilePath;                                       // 0x0618(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LuaStateName;                                      // 0x0628(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	struct FINTLLuaBPVar CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaPlayerController">();
	}
	static class AINTLLuaPlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTLLuaPlayerController>();
	}
};
static_assert(alignof(AINTLLuaPlayerController) == 0x000008, "Wrong alignment on AINTLLuaPlayerController");
static_assert(sizeof(AINTLLuaPlayerController) == 0x000638, "Wrong size on AINTLLuaPlayerController");
static_assert(offsetof(AINTLLuaPlayerController, LuaFilePath) == 0x000618, "Member 'AINTLLuaPlayerController::LuaFilePath' has a wrong offset!");
static_assert(offsetof(AINTLLuaPlayerController, LuaStateName) == 0x000628, "Member 'AINTLLuaPlayerController::LuaStateName' has a wrong offset!");

// Class slua_unreal_425.INTLLuaActorComponent
// 0x00C0 (0x0178 - 0x00B8)
class UINTLLuaActorComponent final : public UActorComponent
{
public:
	uint8                                         Pad_53C9[0xA0];                                    // 0x00B8(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LuaFilePath;                                       // 0x0158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LuaStateName;                                      // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	struct FINTLLuaBPVar CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaActorComponent">();
	}
	static class UINTLLuaActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UINTLLuaActorComponent>();
	}
};
static_assert(alignof(UINTLLuaActorComponent) == 0x000008, "Wrong alignment on UINTLLuaActorComponent");
static_assert(sizeof(UINTLLuaActorComponent) == 0x000178, "Wrong size on UINTLLuaActorComponent");
static_assert(offsetof(UINTLLuaActorComponent, LuaFilePath) == 0x000158, "Member 'UINTLLuaActorComponent::LuaFilePath' has a wrong offset!");
static_assert(offsetof(UINTLLuaActorComponent, LuaStateName) == 0x000168, "Member 'UINTLLuaActorComponent::LuaStateName' has a wrong offset!");

// Class slua_unreal_425.INTLLuaGameModeBase
// 0x00B0 (0x0388 - 0x02D8)
class AINTLLuaGameModeBase final : public AGameModeBase
{
public:
	uint8                                         Pad_53CA[0x90];                                    // 0x02D8(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LuaFilePath;                                       // 0x0368(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LuaStateName;                                      // 0x0378(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	struct FINTLLuaBPVar CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaGameModeBase">();
	}
	static class AINTLLuaGameModeBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTLLuaGameModeBase>();
	}
};
static_assert(alignof(AINTLLuaGameModeBase) == 0x000008, "Wrong alignment on AINTLLuaGameModeBase");
static_assert(sizeof(AINTLLuaGameModeBase) == 0x000388, "Wrong size on AINTLLuaGameModeBase");
static_assert(offsetof(AINTLLuaGameModeBase, LuaFilePath) == 0x000368, "Member 'AINTLLuaGameModeBase::LuaFilePath' has a wrong offset!");
static_assert(offsetof(AINTLLuaGameModeBase, LuaStateName) == 0x000378, "Member 'AINTLLuaGameModeBase::LuaStateName' has a wrong offset!");

// Class slua_unreal_425.INTLLuaHUD
// 0x00B0 (0x03D8 - 0x0328)
class AINTLLuaHUD final : public AHUD
{
public:
	uint8                                         Pad_53CB[0x90];                                    // 0x0328(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LuaFilePath;                                       // 0x03B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LuaStateName;                                      // 0x03C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	struct FINTLLuaBPVar CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaHUD">();
	}
	static class AINTLLuaHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTLLuaHUD>();
	}
};
static_assert(alignof(AINTLLuaHUD) == 0x000008, "Wrong alignment on AINTLLuaHUD");
static_assert(sizeof(AINTLLuaHUD) == 0x0003D8, "Wrong size on AINTLLuaHUD");
static_assert(offsetof(AINTLLuaHUD, LuaFilePath) == 0x0003B8, "Member 'AINTLLuaHUD::LuaFilePath' has a wrong offset!");
static_assert(offsetof(AINTLLuaHUD, LuaStateName) == 0x0003C8, "Member 'AINTLLuaHUD::LuaStateName' has a wrong offset!");

// Class slua_unreal_425.LuaTableObjectInterfaceINTL
// 0x0000 (0x0028 - 0x0028)
class ILuaTableObjectInterfaceINTL final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LuaTableObjectInterfaceINTL">();
	}
	static class ILuaTableObjectInterfaceINTL* GetDefaultObj()
	{
		return GetDefaultObjImpl<ILuaTableObjectInterfaceINTL>();
	}
};
static_assert(alignof(ILuaTableObjectInterfaceINTL) == 0x000008, "Wrong alignment on ILuaTableObjectInterfaceINTL");
static_assert(sizeof(ILuaTableObjectInterfaceINTL) == 0x000028, "Wrong size on ILuaTableObjectInterfaceINTL");

// Class slua_unreal_425.INTLLuaBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UINTLLuaBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FINTLLuaBPVar CallToLua(class UObject* WorldContextObject, const class FString& FunctionName, const class FString& StateName);
	static struct FINTLLuaBPVar CallToLuaWithArgs(class UObject* WorldContextObject, const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args, const class FString& StateName);
	static struct FINTLLuaBPVar CreateVarFromBool(bool Value);
	static struct FINTLLuaBPVar CreateVarFromInt(int32 Value);
	static struct FINTLLuaBPVar CreateVarFromNumber(float Value);
	static struct FINTLLuaBPVar CreateVarFromObject(class UObject* WorldContextObject, class UObject* Value);
	static struct FINTLLuaBPVar CreateVarFromString(const class FString& Value);
	static bool GetBoolFromVar(const struct FINTLLuaBPVar& Value, int32 Param_Index);
	static int32 GetIntFromVar(const struct FINTLLuaBPVar& Value, int32 Param_Index);
	static float GetNumberFromVar(const struct FINTLLuaBPVar& Value, int32 Param_Index);
	static class UObject* GetObjectFromVar(const struct FINTLLuaBPVar& Value, int32 Param_Index);
	static class FString GetStringFromVar(const struct FINTLLuaBPVar& Value, int32 Param_Index);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaBlueprintLibrary">();
	}
	static class UINTLLuaBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UINTLLuaBlueprintLibrary>();
	}
};
static_assert(alignof(UINTLLuaBlueprintLibrary) == 0x000008, "Wrong alignment on UINTLLuaBlueprintLibrary");
static_assert(sizeof(UINTLLuaBlueprintLibrary) == 0x000028, "Wrong size on UINTLLuaBlueprintLibrary");

// Class slua_unreal_425.INTLLuaDelegate
// 0x0010 (0x0038 - 0x0028)
class UINTLLuaDelegate final : public UObject
{
public:
	uint8                                         Pad_53D2[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EventTrigger();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaDelegate">();
	}
	static class UINTLLuaDelegate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UINTLLuaDelegate>();
	}
};
static_assert(alignof(UINTLLuaDelegate) == 0x000008, "Wrong alignment on UINTLLuaDelegate");
static_assert(sizeof(UINTLLuaDelegate) == 0x000038, "Wrong size on UINTLLuaDelegate");

// Class slua_unreal_425.INTLLuaUserWidget
// 0x00E8 (0x0368 - 0x0280)
class UINTLLuaUserWidget final : public UUserWidget
{
public:
	uint8                                         Pad_53D3[0x90];                                    // 0x0280(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LuaFilePath;                                       // 0x0310(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LuaStateName;                                      // 0x0320(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_53D4[0x38];                                    // 0x0330(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FINTLLuaBPVar CallLuaMember(const class FString& FunctionName, const TArray<struct FINTLLuaBPVar>& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"INTLLuaUserWidget">();
	}
	static class UINTLLuaUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UINTLLuaUserWidget>();
	}
};
static_assert(alignof(UINTLLuaUserWidget) == 0x000008, "Wrong alignment on UINTLLuaUserWidget");
static_assert(sizeof(UINTLLuaUserWidget) == 0x000368, "Wrong size on UINTLLuaUserWidget");
static_assert(offsetof(UINTLLuaUserWidget, LuaFilePath) == 0x000310, "Member 'UINTLLuaUserWidget::LuaFilePath' has a wrong offset!");
static_assert(offsetof(UINTLLuaUserWidget, LuaStateName) == 0x000320, "Member 'UINTLLuaUserWidget::LuaStateName' has a wrong offset!");

}

