#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReplicatedSublevelInstances

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "ReplicatedSublevelInstances_structs.hpp"


namespace SDK
{

// Class ReplicatedSublevelInstances.SublevelComponent
// 0x00E0 (0x02F0 - 0x0210)
class USublevelComponent final : public USceneComponent
{
public:
	class FString                                 LevelPath;                                         // 0x0208(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          LevelActive;                                       // 0x0218(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E92[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnLevelPreLoad;                                    // 0x0220(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLevelLoaded;                                     // 0x0230(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLevelUnloaded;                                   // 0x0240(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLevelShown;                                      // 0x0250(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLevelHidden;                                     // 0x0260(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_E93[0x8];                                      // 0x0270(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelStreamInstanceInfo               TargetLevelStreamInfo;                             // 0x0278(0x0030)(Net, NoDestructor, NativeAccessSpecifierPrivate)
	struct FLevelStreamInstanceInfo               CurrentLevelStreamInfo;                            // 0x02A8(0x0030)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E94[0x18];                                     // 0x02D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SublevelComponent">();
	}
	static class USublevelComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USublevelComponent>();
	}
};
static_assert(alignof(USublevelComponent) == 0x000010, "Wrong alignment on USublevelComponent");
static_assert(sizeof(USublevelComponent) == 0x0002F0, "Wrong size on USublevelComponent");
static_assert(offsetof(USublevelComponent, LevelPath) == 0x000208, "Member 'USublevelComponent::LevelPath' has a wrong offset!");
static_assert(offsetof(USublevelComponent, LevelActive) == 0x000218, "Member 'USublevelComponent::LevelActive' has a wrong offset!");
static_assert(offsetof(USublevelComponent, OnLevelPreLoad) == 0x000220, "Member 'USublevelComponent::OnLevelPreLoad' has a wrong offset!");
static_assert(offsetof(USublevelComponent, OnLevelLoaded) == 0x000230, "Member 'USublevelComponent::OnLevelLoaded' has a wrong offset!");
static_assert(offsetof(USublevelComponent, OnLevelUnloaded) == 0x000240, "Member 'USublevelComponent::OnLevelUnloaded' has a wrong offset!");
static_assert(offsetof(USublevelComponent, OnLevelShown) == 0x000250, "Member 'USublevelComponent::OnLevelShown' has a wrong offset!");
static_assert(offsetof(USublevelComponent, OnLevelHidden) == 0x000260, "Member 'USublevelComponent::OnLevelHidden' has a wrong offset!");
static_assert(offsetof(USublevelComponent, TargetLevelStreamInfo) == 0x000278, "Member 'USublevelComponent::TargetLevelStreamInfo' has a wrong offset!");
static_assert(offsetof(USublevelComponent, CurrentLevelStreamInfo) == 0x0002A8, "Member 'USublevelComponent::CurrentLevelStreamInfo' has a wrong offset!");

}

