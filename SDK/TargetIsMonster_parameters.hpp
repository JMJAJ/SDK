#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TargetIsMonster

#include "Basic.hpp"

#include "HottaFramework_structs.hpp"


namespace SDK::Params
{

// Function TargetIsMonster.TargetIsMonster_C.CanApplyGameplayEffectContent
// 0x0058 (0x0058 - 0x0000)
struct TargetIsMonster_C_CanApplyGameplayEffectContent final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InstigatorActor;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UGameplayEffect*                  GameplayEffect;                                    // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EMonsterJobType                               LocalMonsterJob;                                   // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57AA[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaCharacter*                        K2Node_DynamicCast_AsHotta_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57AB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaCharacter*                        CallFunc_GetAttackTarget_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57AC[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaAICharacter*                      K2Node_DynamicCast_AsHotta_AICharacter;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMonsterCharacter_ReturnValue;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TargetIsMonster_C_CanApplyGameplayEffectContent) == 0x000008, "Wrong alignment on TargetIsMonster_C_CanApplyGameplayEffectContent");
static_assert(sizeof(TargetIsMonster_C_CanApplyGameplayEffectContent) == 0x000058, "Wrong size on TargetIsMonster_C_CanApplyGameplayEffectContent");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, SourceActor) == 0x000000, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::SourceActor' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, TargetActor) == 0x000008, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::TargetActor' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, InstigatorActor) == 0x000010, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::InstigatorActor' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, GameplayEffect) == 0x000018, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::GameplayEffect' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, ReturnValue) == 0x000020, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::ReturnValue' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, LocalMonsterJob) == 0x000021, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::LocalMonsterJob' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, K2Node_DynamicCast_AsHotta_Character) == 0x000028, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::K2Node_DynamicCast_AsHotta_Character' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, CallFunc_GetAttackTarget_ReturnValue) == 0x000038, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::CallFunc_GetAttackTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, K2Node_DynamicCast_AsHotta_AICharacter) == 0x000048, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::K2Node_DynamicCast_AsHotta_AICharacter' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TargetIsMonster_C_CanApplyGameplayEffectContent, CallFunc_IsMonsterCharacter_ReturnValue) == 0x000051, "Member 'TargetIsMonster_C_CanApplyGameplayEffectContent::CallFunc_IsMonsterCharacter_ReturnValue' has a wrong offset!");

}

