#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArrowAniBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ArrowAniBP.ArrowAniBP_C
// 0x02F0 (0x05B0 - 0x02C0)
class UArrowAniBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_6C89[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0320(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0348(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x03C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x03F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0478(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x04A8(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0558(0x0048)()
	bool                                          Aimming;                                           // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ArrowAniBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ArrowAniBP_C">();
	}
	static class UArrowAniBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArrowAniBP_C>();
	}
};
static_assert(alignof(UArrowAniBP_C) == 0x000010, "Wrong alignment on UArrowAniBP_C");
static_assert(sizeof(UArrowAniBP_C) == 0x0005B0, "Wrong size on UArrowAniBP_C");
static_assert(offsetof(UArrowAniBP_C, UberGraphFrame) == 0x0002C0, "Member 'UArrowAniBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UArrowAniBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UArrowAniBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UArrowAniBP_C, AnimGraphNode_TransitionResult_1) == 0x0002F8, "Member 'UArrowAniBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UArrowAniBP_C, AnimGraphNode_TransitionResult) == 0x000320, "Member 'UArrowAniBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UArrowAniBP_C, AnimGraphNode_SequencePlayer_1) == 0x000348, "Member 'UArrowAniBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UArrowAniBP_C, AnimGraphNode_StateResult_1) == 0x0003C8, "Member 'UArrowAniBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UArrowAniBP_C, AnimGraphNode_SequencePlayer) == 0x0003F8, "Member 'UArrowAniBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UArrowAniBP_C, AnimGraphNode_StateResult) == 0x000478, "Member 'UArrowAniBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UArrowAniBP_C, AnimGraphNode_StateMachine) == 0x0004A8, "Member 'UArrowAniBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UArrowAniBP_C, AnimGraphNode_Slot) == 0x000558, "Member 'UArrowAniBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UArrowAniBP_C, Aimming) == 0x0005A0, "Member 'UArrowAniBP_C::Aimming' has a wrong offset!");

}

