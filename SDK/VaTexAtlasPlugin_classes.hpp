#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaTexAtlasPlugin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class VaTexAtlasPlugin.VtaPluginFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UVtaPluginFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FSlateBrush CopyBrushWithSlateTexture(class UVtaSlateTexture* Texture, const struct FSlateBrush& SourceBrush);
	static void DrawSlateTexture(class AHUD* Target, class UVtaSlateTexture* Texture, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float TextureU, float TextureV, float TextureUWidth, float TextureVHeight, const struct FLinearColor& Tint, EBlendMode BlendMode, float Scale, bool bScalePosition, float Rotation, const struct FVector2D& RotPivot, bool bFlipX, bool bFlipY);
	static void DrawSlateTexture9Slice(class AHUD* Target, class UVtaSlateTexture* Texture, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float TextureU, float TextureV, float TextureUWidth, float TextureVHeight, float MarginLeft, float MarginTop, float MarginRight, float MarginBottom, float OriginalWidth, float OriginalHeight, const struct FLinearColor& Tint, EBlendMode BlendMode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VtaPluginFunctionLibrary">();
	}
	static class UVtaPluginFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVtaPluginFunctionLibrary>();
	}
};
static_assert(alignof(UVtaPluginFunctionLibrary) == 0x000008, "Wrong alignment on UVtaPluginFunctionLibrary");
static_assert(sizeof(UVtaPluginFunctionLibrary) == 0x000028, "Wrong size on UVtaPluginFunctionLibrary");

// Class VaTexAtlasPlugin.VtaSlateTexture
// 0x0020 (0x0048 - 0x0028)
class UVtaSlateTexture final : public UObject
{
public:
	uint8                                         Pad_1549[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               AtlasTexture;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              StartUV;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              SizeUV;                                            // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UVtaSlateTexture* CreateRegion(const struct FMargin& Margin);

	struct FVector2D GetDimensions() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VtaSlateTexture">();
	}
	static class UVtaSlateTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVtaSlateTexture>();
	}
};
static_assert(alignof(UVtaSlateTexture) == 0x000008, "Wrong alignment on UVtaSlateTexture");
static_assert(sizeof(UVtaSlateTexture) == 0x000048, "Wrong size on UVtaSlateTexture");
static_assert(offsetof(UVtaSlateTexture, AtlasTexture) == 0x000030, "Member 'UVtaSlateTexture::AtlasTexture' has a wrong offset!");
static_assert(offsetof(UVtaSlateTexture, StartUV) == 0x000038, "Member 'UVtaSlateTexture::StartUV' has a wrong offset!");
static_assert(offsetof(UVtaSlateTexture, SizeUV) == 0x000040, "Member 'UVtaSlateTexture::SizeUV' has a wrong offset!");

}

