#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Minigame_Cactus_main

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HottaFramework_structs.hpp"
#include "BP_BreakableNoControllableBase_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Minigame_Cactus_main.Minigame_Cactus_main_C
// 0x0110 (0x0CE0 - 0x0BD0)
class AMinigame_Cactus_main_C final : public ABP_BreakableNoControllableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          GuideTriggerBox;                                   // 0x0BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem1;                                   // 0x0BE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    CactusTargetPoint1;                                // 0x0BE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0BF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0BF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_common_Energy_002;                               // 0x0C00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0C08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    CactusTargetPoint;                                 // 0x0C10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightBall1_StaticMesh;                             // 0x0C18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline1;                                           // 0x0C20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ____0_NewTrack_0_B60ADBB0475291F55F5E06B1A0993ED3; // 0x0C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ____0__Direction_B60ADBB0475291F55F5E06B1A0993ED3; // 0x0C2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD8[0x3];                                     // 0x0C2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     __t_0;                                             // 0x0C30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          TheLoop;                                           // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          TheOpen;                                           // 0x0C40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          TheOpenLoop;                                       // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          TheClos;                                           // 0x0C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaVisualSpawnManager*               CactusRewardManager;                               // 0x0C58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MiniGame_CactusGem_Base_C*          GemCactus;                                         // 0x0C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHottaVisualSpawnManager*               CactusTargetGemManager;                            // 0x0C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOver;                                            // 0x0C70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DD9[0x7];                                     // 0x0C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 RewardGemHarvest;                                  // 0x0C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HarvestBase_C*                      Gem;                                               // 0x0C80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequence*                          TheStand;                                          // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Asset;                                             // 0x0C90(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 ParticleSystem_A;                                  // 0x0CB8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Minigame_Cactus_main(int32 EntryPoint);
	void BndEvt__Minigame_Cactus_main_CactusTargetGemManager_K2Node_ComponentBoundEvent_0_OnVisualHarvestSignature__DelegateSignature(class AItemActor* ItemActor, bool Param_bHarvested);
	void ReceiveOnTakeDamage(class AActor* DamageCauser, const struct FHitResult& HitResult, bool bRealDamaged);
	void OnItemHarvested_Event_0(class AItemActor* HarvestedActor);
	void OnBrokenDelegate_Event_1(class ABreakableActor* InActor);
	void BPOnMainRoleLoadFinished(class AHottaPlayerCharacter* MainPlayer);
	void OnLoaded_C11B30CC457474E31F7AF3A271E0D76F(class UObject* Loaded);
	void OnLoaded_EC64F11C4CC648049FDCC1BCB7679637(class UObject* Loaded);
	void __t_0__UpdateFunc();
	void __t_0__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Minigame_Cactus_main_C">();
	}
	static class AMinigame_Cactus_main_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMinigame_Cactus_main_C>();
	}
};
static_assert(alignof(AMinigame_Cactus_main_C) == 0x000010, "Wrong alignment on AMinigame_Cactus_main_C");
static_assert(sizeof(AMinigame_Cactus_main_C) == 0x000CE0, "Wrong size on AMinigame_Cactus_main_C");
static_assert(offsetof(AMinigame_Cactus_main_C, UberGraphFrame) == 0x000BD0, "Member 'AMinigame_Cactus_main_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, GuideTriggerBox) == 0x000BD8, "Member 'AMinigame_Cactus_main_C::GuideTriggerBox' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, ParticleSystem1) == 0x000BE0, "Member 'AMinigame_Cactus_main_C::ParticleSystem1' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, CactusTargetPoint1) == 0x000BE8, "Member 'AMinigame_Cactus_main_C::CactusTargetPoint1' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, ParticleSystem) == 0x000BF0, "Member 'AMinigame_Cactus_main_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, Sphere) == 0x000BF8, "Member 'AMinigame_Cactus_main_C::Sphere' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, P_common_Energy_002) == 0x000C00, "Member 'AMinigame_Cactus_main_C::P_common_Energy_002' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, Plane) == 0x000C08, "Member 'AMinigame_Cactus_main_C::Plane' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, CactusTargetPoint) == 0x000C10, "Member 'AMinigame_Cactus_main_C::CactusTargetPoint' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, LightBall1_StaticMesh) == 0x000C18, "Member 'AMinigame_Cactus_main_C::LightBall1_StaticMesh' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, Spline1) == 0x000C20, "Member 'AMinigame_Cactus_main_C::Spline1' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, ____0_NewTrack_0_B60ADBB0475291F55F5E06B1A0993ED3) == 0x000C28, "Member 'AMinigame_Cactus_main_C::____0_NewTrack_0_B60ADBB0475291F55F5E06B1A0993ED3' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, ____0__Direction_B60ADBB0475291F55F5E06B1A0993ED3) == 0x000C2C, "Member 'AMinigame_Cactus_main_C::____0__Direction_B60ADBB0475291F55F5E06B1A0993ED3' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, __t_0) == 0x000C30, "Member 'AMinigame_Cactus_main_C::__t_0' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, TheLoop) == 0x000C38, "Member 'AMinigame_Cactus_main_C::TheLoop' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, TheOpen) == 0x000C40, "Member 'AMinigame_Cactus_main_C::TheOpen' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, TheOpenLoop) == 0x000C48, "Member 'AMinigame_Cactus_main_C::TheOpenLoop' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, TheClos) == 0x000C50, "Member 'AMinigame_Cactus_main_C::TheClos' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, CactusRewardManager) == 0x000C58, "Member 'AMinigame_Cactus_main_C::CactusRewardManager' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, GemCactus) == 0x000C60, "Member 'AMinigame_Cactus_main_C::GemCactus' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, CactusTargetGemManager) == 0x000C68, "Member 'AMinigame_Cactus_main_C::CactusTargetGemManager' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, IsOver) == 0x000C70, "Member 'AMinigame_Cactus_main_C::IsOver' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, RewardGemHarvest) == 0x000C78, "Member 'AMinigame_Cactus_main_C::RewardGemHarvest' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, Gem) == 0x000C80, "Member 'AMinigame_Cactus_main_C::Gem' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, TheStand) == 0x000C88, "Member 'AMinigame_Cactus_main_C::TheStand' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, Asset) == 0x000C90, "Member 'AMinigame_Cactus_main_C::Asset' has a wrong offset!");
static_assert(offsetof(AMinigame_Cactus_main_C, ParticleSystem_A) == 0x000CB8, "Member 'AMinigame_Cactus_main_C::ParticleSystem_A' has a wrong offset!");

}

