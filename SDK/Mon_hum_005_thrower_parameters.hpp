#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mon_hum_005_thrower

#include "Basic.hpp"


namespace SDK::Params
{

// Function mon_hum_005_thrower.mon_hum_005_thrower_C.ExecuteUbergraph_mon_hum_005_thrower
// 0x0028 (0x0028 - 0x0000)
struct Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasMatchingGameplayTag_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower) == 0x000008, "Wrong alignment on Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower");
static_assert(sizeof(Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower) == 0x000028, "Wrong size on Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower");
static_assert(offsetof(Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower, EntryPoint) == 0x000000, "Member 'Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower, K2Node_Event_Damage) == 0x000004, "Member 'Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower, K2Node_Event_DamageType) == 0x000008, "Member 'Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower, K2Node_Event_InstigatedBy) == 0x000010, "Member 'Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower, K2Node_Event_DamageCauser) == 0x000018, "Member 'Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower, CallFunc_K2_HasMatchingGameplayTag_ReturnValue) == 0x000020, "Member 'Mon_hum_005_thrower_C_ExecuteUbergraph_mon_hum_005_thrower::CallFunc_K2_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function mon_hum_005_thrower.mon_hum_005_thrower_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct Mon_hum_005_thrower_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C5B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mon_hum_005_thrower_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on Mon_hum_005_thrower_C_ReceiveAnyDamage");
static_assert(sizeof(Mon_hum_005_thrower_C_ReceiveAnyDamage) == 0x000020, "Wrong size on Mon_hum_005_thrower_C_ReceiveAnyDamage");
static_assert(offsetof(Mon_hum_005_thrower_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'Mon_hum_005_thrower_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(Mon_hum_005_thrower_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'Mon_hum_005_thrower_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Mon_hum_005_thrower_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'Mon_hum_005_thrower_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Mon_hum_005_thrower_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'Mon_hum_005_thrower_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

}

